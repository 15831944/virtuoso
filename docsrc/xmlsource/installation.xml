<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2012 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<chapter label="installation.xml" id="installation">
	<title>Installation Guide</title>
	<abstract>
		<para>This chapter applies exclusively to the various commercial releases of Virtuoso.  If you are working with the open source version, please refer to the instructions on the web site where you obtained it.  
</para>
		<para>
This chapter describes how to install OpenLink Virtuoso VDBMS.  It 
contains both a quick start install guide and full walk through install guides 
for major platforms.</para>
		<para>Virtuoso has been designed from the ground-up to be easy to implement.</para>
		<para>The installation generally runs without problems, run the setup program or script and follow
	the on screen instruction prompts.  You will be asked some questions, if in any doubt please follow
	the instructions in this guide in order to install and configure your Virtuoso components correctly. </para>
		<para>Once installed, each instance of Virtuoso is controlled by an
INI (initialization) file.  This file links the Virtuoso Server
process with an actual database file or device.  For example, the demo
instance of Virtuoso on all platforms is controlled by the demo.ini
file that is found in the demo directory along with the demo.db and
related files.  There is a one-to-one relationship between server
processes and database files.</para>
		<para>The INI file is a text file consisting of keys and key values.
You will set several of these values during installation.  At any time
thereafter, their values can be changed by editing the INI file with a
standard text editor.</para>
		<para>The details of the INI file sections, keys, and the meanings of
the key values are described in the <link linkend="configsrvstupfiles">Configuring Server Startup Files</link>
section.
</para>
	</abstract>
	<sect1 id="installallplatforms">
		<title>Virtuoso on All platforms Commmon Specifics</title>
		<sect2 id="srvadminstallreqt">
			<title>Installation Requirements</title>
			<para>A typical installation will require a minimum of 400Mb of hard disk space to install the code, 
      samples, documentation and sample database. The database will need additional space for data inserted, 
      backups, logs and reports, web pages, etc.</para>
			<para>The size of the database .db file will not reduce when data is removed. The spare space will 
      however be reclaimed for later use.</para>
		</sect2>
		<sect2 id="srvadmopreq">
			<title>Operational Requirements</title>
			<para>The Virtuoso database requires a minimum of 64Mb of system memory for each instance to operate 
      in. Each connection will take between 70kb and 130kb of memory.</para>
			<para>The memory usage is affected by the following parameters in the
    <link linkend="VIRTINI">Virtuoso configuration file</link>.</para>
			<simplelist>
				<member>ServerThreads</member>
				<member>ServerThreadSize</member>
				<member>MainThreadSize</member>
				<member>FutureThreadSize</member>
				<member>NumberOfBuffers</member>
			</simplelist>
			<para>See the following <link linkend="parameters">Parameter section</link> for more details.</para>
		</sect2>
		<sect2 id="srvadmossupport">
			<title>Operating System Support</title>
			<para>Virtuoso runs on the following operating systems:</para>
			<simplelist>
				<member>Windows</member>
				<member>Linux</member>
				<member>Unix: AIX, HP-UX, Solaris, etc.</member>
				<member>Mac OS X</member>
			</simplelist>
		</sect2>
		<sect2 id="limitsandparameters">
			<title>Limits</title>
			<para>The below table lists the most important parameters and limits for a database or a Virtuoso 
      server instance. For space consumption of individual data types, see 
      <link linkend="SpaceConsump">Space Consumption</link>.</para>
			<table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
				<title>Limits</title>
				<tgroup align="char" charoff="50" char="." cols="2">
					<colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
					<thead>
						<row>
							<entry>Limit Description</entry>
							<entry>Value</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Identifier length</entry>
							<entry>100</entry>
						</row>
						<row>
							<entry>User name and password length</entry>
							<entry>100</entry>
						</row>
						<row>
							<entry>SQLstmt and proc text</entry>
							<entry>100K+</entry>
						</row>
						<row>
							<entry>varchar length</entry>
							<entry>Constrained by max row length when stored into non-LOB column, 10MB inside procedure code.</entry>
						</row>
						<row>
							<entry>Numeric precision</entry>
							<entry>Max 40 digits</entry>
						</row>
						<row>
							<entry>LOB column length</entry>
							<entry>2GB</entry>
						</row>
						<row>
							<entry>row length</entry>
							<entry>4086</entry>
						</row>
						<row>
							<entry>Columns per row</entry>
							<entry>200</entry>
						</row>
						<row>
							<entry>Database size</entry>
							<entry>32TB for data, 32TB for temp data </entry>
						</row>
						<row>
							<entry>Page size</entry>
							<entry>8K</entry>
						</row>
						<row>
							<entry>File size</entry>
							<entry>64 bit file offsets on supporting OS's</entry>
						</row>
						<row>
							<entry>Files per database</entry>
							<entry>unlimited</entry>
						</row>
						<row>
							<entry>Table size</entry>
							<entry>Up to database size </entry>
						</row>
						<row>
							<entry>Tables per database</entry>
							<entry>64K keys, a table takes 1 key for primary key, 1 key per index and 1 key for each obsolete primary key layout  resulting from adding or dropping columns.</entry>
						</row>
						<row>
							<entry>Indexes per table</entry>
							<entry>Unlimited, subject to global cap on keys.</entry>
						</row>
						<row>
							<entry>Row in sorting/distinct temp</entry>
							<entry>4078b, as in tables </entry>
						</row>
						<row>
							<entry>Locks per transaction</entry>
							<entry>Depends on memory, 16b per row lock, 60b per page with at least one row lock.</entry>
						</row>
						<row>
							<entry>Changes per transaction</entry>
							<entry>Depends on memory, ini parameter allows cap on  rollback before image.</entry>
						</row>
						<row>
							<entry>Virtual memory&gt;</entry>
							<entry>Depends on OS, 64 bit pointers on 64 bit platforms</entry>
						</row>
						<row>
							<entry>Threads</entry>
							<entry>Depends on OS, ini files specifies cap for pool for SQL client and web server worker thread pools.</entry>
						</row>
						<row>
							<entry>Max connections</entry>
							<entry>Depends on OS fdset size, at least 2048, license can set a limit</entry>
						</row>
						<row>
							<entry>Memory per connection</entry>
							<entry>22K plus up to 100 cached SQL statement compilations</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</sect2>
	</sect1>
</chapter>
