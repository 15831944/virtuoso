<?vsp
  declare domain_id, account_id integer;
  declare sid, realm any;
  declare aRequest, aSession any;
  declare process, completed, started any;

  sid := get_keyword ('sid', params, '');
  realm := get_keyword ('realm', params, '');

  aRequest := ENEWS.WA.validate_request(lines,0);
  aSession := ENEWS.WA.session_restore(aRequest, params, lines);
  domain_id := cast(get_keyword('domain_id', aSession, '0') as integer);
  account_id := cast(get_keyword('user_id', aSession, '0') as integer);

  process := cast(domain_id as varchar) || '_' || cast(account_id as varchar);

  declare exit handler for sqlstate '*' {
    registry_remove ('feed_' || process || '_completed');
    registry_remove ('feed_' || process || '_status');
    return;
    --dbg_obj_print(__SQL_MESSAGE);
  };

  completed := registry_get ('feed_' || process || '_completed');
  started := registry_get ('feed_' || process || '_started');

  -- reset
  if (get_keyword ('mode', params, '') = 'reset') {
    --dbg_obj_print('reset');

    registry_remove ('feed_' || process || '_completed');
    registry_remove ('feed_' || process || '_status');

    if (not(completed <> 0
        and cast (completed as integer) < 100
        and cast (completed as integer) > 0
        and started <> 0
        and cast (started as datetime ) > dateadd('minute', -120, now())))
    {
      registry_set ('feed_' || process || '_completed', '0');
      registry_set ('feed_' || process || '_started', datestring (now()));
    }

    http_rewrite ();
    http_header ('Content-Type: text/xml\r\n');
    http(sprintf('<message>%s</message>', cast (completed as varchar)));

    connection_set('stop_execution', '1');
    return (0);
  }

  -- status
  if (get_keyword ('mode', params, '') = 'state') {
    --dbg_obj_print('state', completed);

    http_rewrite ();
    http_header ('Content-Type: text/xml\r\n');
    if (isinteger(completed) and (completed = 0))
      completed := 100;
    http(sprintf('<message>%s</message>', cast (completed as varchar)));

    connection_set('stop_execution','1');
    return (0);
  }

  -- exec
  if (get_keyword ('mode', params, '') = 'init') {
    --dbg_obj_print('init', completed);

    if ( completed <> 0
         and cast (completed as integer) < 100
         and cast (completed as integer) > 0)
    {
      http_rewrite ();
      http_header ('Content-Type: text/html\r\n');
      http(sprintf('<message>%s</message>', cast (completed as varchar)));
      http_flush ();

      connection_set ('stop_execution', '1');
      return (0);
    }

    -- flush and continue
    http_flush ();

    declare I, J, N integer;
    declare dataLength integer;
    declare folder_id integer;
    declare feed_id, folder_name varchar;
    declare data, rss, title, V any;

    j := length(params);
    V := vector();
    -- test folder names & count subscriptions
    dataLength := 0;
    for (i := 0; i < j; i := i + 2) {
      if (params[i] like 'cb_item%') {
        dataLength := dataLength + 1;
        V := vector_concat(V, vector(params[i+1]));
        folder_name := trim(get_keyword(sprintf ('$_folder_name_%d', i), params, ''));
        if (folder_name <> '')
          if (not ENEWS.WA.folder_check_name(folder_name, 1)) {
            registry_set('feed_' || process || '_completed', '100');
            connection_set ('stop_execution', '1');
            return (0);
          }
      }
    }

    -- exec subscriptions
    data := vector('rss', null, 'title', null, 'blog', null, 'format', null, 'lang', null, 'type', 'long');
    for (i := 0; i < dataLength; i := i + 1) {
        commit work;
      registry_set('feed_' || process || '_completed', cast (ceiling (((100.0 / dataLength) * (i + 1))) as varchar));
      N := V[i];

      rss := get_keyword ('$_rss_' || N, params, '');
      if (rss <> '') {
        title   := get_keyword ('$_title_'  || N, params);

        aset(data, 1, rss);
        aset(data, 3, title);
        aset(data, 5, get_keyword ('$_blog_'   || N, params));
        aset(data, 7, get_keyword ('$_format_' || N, params));
        aset(data, 9, get_keyword ('$_lang_'   || N, params));

        --dbg_obj_print(N, now(), rss);
          feed_id := ENEWS.WA.channel_create(data);

        folder_name := trim (get_keyword ('$_folder_name_' || N, params, ''));
        folder_id := cast (trim (get_keyword ('$_folder_id_'|| N, params, '')) as integer);
        ENEWS.WA.channel_domain(domain_id, feed_id, ENEWS.WA.wide2utf(title), null, folder_name, folder_id);
          {
            declare exit handler for sqlstate '*' { goto _next; };
            if (ENEWS.WA.channel_feeds(feed_id) = 0)
              ENEWS.WA.feed_refresh(feed_id);
          }
        }
      _next:;
    }

    -- update tags
    ENEWS.WA.tags_refresh(domain_id, account_id, 0);

    registry_remove ('feed_' || process || '_completed');
    registry_remove ('feed_' || process || '_status');
    http_flush(1);

    connection_set('stop_execution', '1');
    return (0);
  }
?>