<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="feed_reader_page" decor="template/template.vspx" style="template/template.xsl" fast-render="1" button-anchors="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <v:method name="sortColumn" arglist="in titleName varchar, in columnName varchar">
    <![CDATA[
      declare altStr, directionStr, imageStr varchar;

      if (self.n_order = columnName and self.n_direction = 'desc') {
        directionStr := 'Ascending';
        imageStr := '&nbsp;<img src="image/d.gif" border="0" alt="Down"/>';
      } else if (self.n_order = columnName and self.n_direction = 'asc') {
        directionStr := 'Descending';
        imageStr := '&nbsp;<img src="image/u.gif" border="0" alt="Up"/>';
      } else {
        directionStr := 'Ascending';
        imageStr := '&nbsp;&nbsp;';
      }
      if (self.account_role <> 'public') {
        altStr := sprintf('Sort Rows on %s in %s Order', titleName, directionStr);
        http(sprintf('<a href="#" onClick="javascript: myPost(''F1'', ''sortColumn'', ''%s''); return false;" alt="%s" title="%s">%s%s</a>', columnName, altStr, altStr, titleName, imageStr));
      } else {
        http(sprintf('%s%s', titleName, imageStr));
      }
    ]]>
  </v:method>

  <v:method name="sortChange" arglist="in columnName varchar">
    <![CDATA[
      if (columnName = '')
        return;
      self.ds.vc_reset();
      if (self.n_order = columnName) {
        self.n_direction := either(equ(self.n_direction, 'asc'), 'desc', 'asc');
      } else {
        self.n_direction := 'asc';
      }
      self.n_order := columnName;
    ]]>
  </v:method>

  <v:method name="linkClass" arglist="inout flag any">
    <![CDATA[
      if (self.account_role in ('public', 'guest'))
        return 'unread';
      return either(equ(flag, 1), 'read', 'unread');
    ]]>
  </v:method>

  <v:method name="mode_test" arglist="">
    <![CDATA[
      if (not is_empty_or_null(self.fTag)) {
        self.fTab := 'tags';
        self.fNode := concat('t#', self.fTag);
      } else if (not is_empty_or_null(self.link)) {
        self.fTab := 'feeds';
          self.fNode := 'c#';
        if (self.domain_id <= -1)
          self.fNode := 'p#';
        self.fNode := concat(self.fNode, cast(coalesce((select EFI_FEED_ID from ENEWS.WA.FEED_ITEM where EFI_ID = cast(self.link as integer)), '') as varchar));
      }
      self.state_init();
    ]]>
  </v:method>

  <v:method name="state_init" arglist="">
    <![CDATA[
      if (isnull(self.fState))
        self.fState := self.fxState;
      if (is_empty_or_null(self.fNode))
        self.fNode := self.fxNode;
    ]]>
  </v:method>

  <v:method name="refresh" arglist="">
    <![CDATA[
      declare exit handler for sqlstate '*' { return; };

      if (ENEWS.WA.node_type(self.fNode) = 'c') {
        declare tmp any;
        tmp := (select EFD_FEED_ID from ENEWS.WA.FEED_DOMAIN where EFD_ID = ENEWS.WA.node_id(self.fNode));
  	    ENEWS.WA.feed_refresh(tmp);
      } else if (ENEWS.WA.node_type(self.fNode) = 'b') {
  	    ENEWS.WA.blog_refresh(ENEWS.WA.node_id(self.fNode));
  	  }
    ]]>
  </v:method>

  <v:method name="validateNode" arglist="in domain_id integer">
    <![CDATA[
      declare N, node_type, node_id, node, nodes any;

      if (domain_id <= -1) {
        if (self.fNode like 'c%')
          self.fNode := '';
      } else {
        if (self.fNode like 'p%')
          self.fNode := 'c#0';
      }

      node := self.fNode;
      node_id := ENEWS.WA.node_id(self.fNode);
      node_type := ENEWS.WA.node_type(self.fNode);

      if (self.fNode in ('r#0', 'r#1', 'f#0', 'S#0', 'w#0', 'P#0'))
        goto _next;

      if (self.fNode like 't#%')
        goto _next;

      if ((node_type = 'p') and (exists (select 1 from ENEWS.WA.FEED where EF_ID = node_id)))
        goto _next;

      if ((node_type = 'c') and (exists (select 1 from ENEWS.WA.FEED_DOMAIN where EFD_DOMAIN_ID = domain_id and EFD_ID = node_id)))
        goto _next;

      if ((node_type = 's') and (exists (select 1 from ENEWS.WA.SFOLDER where ESFO_DOMAIN_ID = domain_id and ESFO_ID = node_id)))
        goto _next;

      if ((node_type = 'b') and (exists (select 1 from ENEWS.WA.BLOG, ENEWS.WA.WEBLOG where EW_DOMAIN_ID = domain_id and EB_ID = node_id and EB_WEBLOG_ID = EW_ID)))
        goto _next;

      for (select TOP 1 EFD_ID,
                        EFD_TITLE,
                        ENEWS.WA.folder_path(EFD_DOMAIN_ID, EFD_FOLDER_ID) EFD_PATH
            from ENEWS.WA.FEED_DOMAIN
           where EFD_DOMAIN_ID = domain_id
           order by EFD_PATH, EFD_TITLE) do {
        self.fNode := sprintf('c#%d', EFD_ID);
        goto _next;
      }
      for (select TOP 1 EB_ID from ENEWS.WA.BLOG, ENEWS.WA.WEBLOG where EW_DOMAIN_ID = domain_id and EB_WEBLOG_ID = EW_ID order by EW_NAME, EB_NAME) do {
        self.fNode := sprintf('b#%d', EB_ID);
        goto _next;
      }
      self.fNode := '';
    _next:;
        nodes := split_and_decode(ENEWS.WA.enews_path2(domain_id, self.fNode), 0, '\0\0/');
        for (N := 0; N < length(nodes) - 1; N := N + 1)
          if (not ENEWS.WA.vector_contains(self.fState, nodes[N]))
            self.fState := vector_concat(self.fState, vector(nodes[N]));
    ]]>
  </v:method>

  <v:method name="showTree" arglist="in level integer, in domain_id integer, in node varchar, in path varchar">
    <![CDATA[
      declare N, isOpen integer;
      declare node_type, node_id, nodes, image, alt, class any;

      if (isnull(self.fState))
        self.fState := vector();
      nodes := ENEWS.WA.enews_tree2(domain_id, node, path);
      for (N := 0; N < length(nodes); N := N + 3) {
        if (level = 1) {
          http ('<div style="margin-left:3px; margin-top:3px; white-space: nowrap;">');
        } else {
          http ('<div style="margin-left:12px; white-space: nowrap;">');
        }
        node_type := ENEWS.WA.node_type(nodes[N+1]);
        image := 'folder_16.png';
        alt := 'Open';
        if (ENEWS.WA.vector_contains(self.fState, nodes[N+1])) {
          alt := 'Close';
          if (node_type in ('f', 'S', 'w', 'P'))
            image := 'folder_open_16.png';
          if (node_type in ('s'))
            image := 'sfolder_16.jpg';
        } else {
          if (node_type in ('S', 's'))
            image := 'sfolder_16.jpg';
          if (node_type in ('C', 'c', 'p', 'b'))
            image := 'docs_16.gif';
        }

        class := 'nolink_b';
        if (nodes[N+1] = self.fNode) {
          class := 'nolink_a';
          self.fName := nodes[N];
        }

        if (node_type in ('f', 'S', 'w', 'P')) {
          http(sprintf('<a href="#" name="pt_toggle_%s" onclick="javascript: vspxPost (\'pt_browse\', \'pt_toggle\', \'%s\'); return false" alt="%s" title="%s" ><img src="image/%s" border="0" /> %s</a>', nodes[N+1], nodes[N+1], alt, alt, image, nodes[N]));
          if (alt = 'Close')
            self.showTree(level+1, domain_id, nodes[N+1], nodes[N+2]);
        } else {
          http(sprintf('<a href="#" name="pt_node_%s" onclick="javascript: vspxPost (\'pt_browse\', \'pt_node\', \'%s\'); return false" class="nolink3 %s" alt="%s" title="%s" ><img src="image/%s" border="0"/> %s</a>', nodes[N+1], nodes[N+1], class, nodes[N], nodes[N], image, nodes[N]));
        }

        http ('</div>');
      }
    ]]>
  </v:method>

  <vm:pagetitle>Read news</vm:pagetitle>
  <vm:pagewrapper>
    <vm:header>
      Read news
    </vm:header>
    <vm:variables>
      <v:variable persist="0" name="n_order" type="varchar" default="'EFI_PUBLISH_DATE'" />
      <v:variable persist="0" name="n_direction" type="varchar" default="'desc'" />
      <v:variable persist="temp" name="r_count" type="integer" default="0"/>
      <v:variable persist="temp" name="fName" type="varchar" default="''"/>
      <v:variable persist="0" name="fTag" type="varchar" default="null" />
      <v:variable persist="0" name="link" type="varchar" default="null" />
      <v:variable persist="1" name="fTab" type="varchar" default="'feeds'"/>
      <v:variable persist="1" name="fNode" type="varchar" default="''"/>
      <v:variable persist="1" name="fState" type="any" default="null" />
      <v:variable persist="1" name="fBookmark" type="varchar" default="null" />
      <v:variable persist="0" name="fxNode" type="varchar" default="''"/>
      <v:variable persist="0" name="fxState" type="any" default="null" />
    </vm:variables>
    <vm:pagebody>
      <v:before-data-bind>
        <![CDATA[
          declare i integer;
          declare flag varchar;

          flag := get_keyword('mark', params, '');
          if (flag <> '') {
            for (i := 0; i < length(params); i := i + 2) {
              if (params[i] = 'cb_item') {
                declare exit handler for sqlstate '*' {
                  rollback work;
                  goto _next;
                };
                commit work;
                if (ENEWS.WA.node_type(self.fNode) = 'b') {
                  ENEWS.WA.blog_change_flag(atoi(params[i+1]), self.account_id, flag);
                } else {
                  ENEWS.WA.feed_change_flag(atoi(params[i+1]), self.account_id, flag);
                }
              }
              _next:;
            }
          }

          if (get_keyword('refresh', e.ve_params, '') <> '')
            self.refresh();

          self.fTag := lcase(get_keyword('tag', e.ve_params, ''));
          self.link := get_keyword('link', e.ve_params, '');

          self.mode_test();
        ]]>
      </v:before-data-bind>
      <v:on-post>
        <![CDATA[
          if (e.ve_button is not null)  {
            if (e.ve_button.vc_name = 'pt_browse') {
              if (get_keyword('pt_toggle', e.ve_params, '') <> '') {
                self.fBookmark := 'pt_toggle_' || get_keyword('pt_toggle', e.ve_params);
              } else if (get_keyword('pt_node', e.ve_params, '') <> '') {
                self.fBookmark := 'pt_node_' || get_keyword('pt_node', e.ve_params);
              }
            } else if (e.ve_button.vc_name = 'pt_tags') {
              self.fBookmark := 'pt_tag_' || self.fTag;
            }
          }
        ]]>
      </v:on-post>
      <v:template type="simple" enabled="--either(equ(self.account_role, 'public'), 0, 1)">
        <div class="tabs">
          <div class="tabLabel">
            <v:button action="simple" style="url" value="Feeds" xhtml_class="--either(equ(self.fTab, 'feeds'), 'tab activeTab2', 'tab tab2')" xhtml_alt="Feeds">
            <v:on-post>
              <![CDATA[
                if (self.fTab <> 'feeds') {
                  self.fTab := 'feeds';
                  self.fNode := '';
                  self.vc_data_bind (e);
                }
              ]]>
            </v:on-post>
          </v:button>
          </div>
          <div class="tabLabel">
            <v:button action="simple" style="url" value="Tags" xhtml_class="--either(equ(self.fTab, 'tags'), 'tab activeTab2', 'tab tab2')" xhtml_alt="Tags">
            <v:on-post>
              <![CDATA[
                if (self.fTab <> 'tags') {
                  self.fTab := 'tags';
                  self.fNode := 't#';
                  self.vc_data_bind (e);
                }
              ]]>
            </v:on-post>
          </v:button>
        </div>
        </div>
      </v:template>

      <div class="feed_pane">
        <div class="feed_subpane1">
              <?vsp
            if (self.fTab = 'feeds')
              if (self.domain_id <= -1) {
                self.showTree(1, self.domain_id, 'r#0', '');
                } else {
                self.showTree(1, self.domain_id, 'r#1', '');
                }
            self.fxNode := self.fNode;
            self.fxState := self.fState;
              ?>
          <v:template type="simple" enabled="--either(equ(self.fTab, 'tags'), 1, 0)">
                  <?vsp
              if (0)
              {
                  ?>
                <v:button name="pt_tags" action="simple" style="url" value="Submit"/>
                <v:button name="pt_browse" action="simple" style="url" value="Submit">
                    <v:on-post>
                      <![CDATA[
                      declare node any;

                      -- touggle
                      self.state_init();
                      node := get_keyword('pt_toggle', e.ve_params, '');
                      if (node <> '')
                        if (ENEWS.WA.vector_contains(self.fState, node)) {
                          self.fState := ENEWS.WA.vector_cut(self.fState, node);
                        } else {
                          self.fState := vector_concat(self.fState, vector(node));
                        }

                      -- node
                      node := get_keyword('pt_node', e.ve_params, '');
                      if (node <> '')
                        self.fNode := node;

                      self.fxNode := self.fNode;
                      self.fxState := self.fState;
                        self.vc_data_bind (e);
                     ]]>
                    </v:on-post>
                  </v:button>
            <?vsp
              }
            ?>
            <div style="margin-left:3px; margin-top:3px;">
              <?vsp
                declare tMin, tMax integer;
                declare tClass, tStyle varchar;

                if (is_empty_or_null(self.fTag))
                  self.fTag := ENEWS.WA.node_suffix(self.fNode);
                select max(TS_COUNT), min(TS_COUNT) into tMax, tMin from ENEWS..TAGS_STATISTICS where domain_id = self.domain_id and account_id = self.account_id;

                for (select TS_TAG, TS_COUNT from ENEWS..TAGS_STATISTICS where domain_id = self.domain_id and account_id = self.account_id and TS_TAG <> '' order by TS_TAG) do {
                  tStyle := ODS.WA.tag_style(TS_COUNT, tMin, tMax);
                  tClass := '';
                    if (self.fTag = TS_TAG)
                    tClass := 'nolink_a';
                  http (sprintf ('<a href="#" onclick="javascript: myTags(\'%s\');" name="pt_tag_%s"><span class="%s" style="%s">%s</span></a> ', TS_TAG, TS_TAG, tClass, tStyle, TS_TAG));
                }
              ?>
            </div>
          </v:template>
        </div>
        <div class="feed_subpane2">
          <?vsp
            declare data any;
            declare mt, st, sv varchar;

            self.mode_test();
            mt := sprintf('Selected as <select name="mark" onchange="javascript: if (anySelected(this.form, \'cb_item\', \'No posts were selected to mark as \'+this.options[this.selectedIndex].text+\'.\')) {this.form.submit();} else {this.selectedIndex = 0}"><option/><option value="r1">read</option><option value="r0">unread</option><option value="f1">flagged</option><option value="f0">unflagged</option></select>');
            if (self.account_role in ('public', 'guest'))
              mt := '';
            st := sprintf('View <select name="show" onchange="javascript: this.form.submit();"><option value="">all</option><option value="r1">read</option><option value="r0">unread</option><option value="f1">flagged</option><option value="f0">unflagged</option></select> posts');
            sv := get_keyword('show', self.vc_page.vc_event.ve_params, '');
            st := replace(st, sprintf('value="%s"', sv), sprintf('value="%s" selected="selected"', sv));
            if (self.account_role in ('public', 'guest'))
              st := '';
            if (ENEWS.WA.node_type(self.fNode) = 'p')
              for (select EF_TITLE,
                          EF_HOME_URI,
                          EF_LAST_UPDATE,
                          EF_DATA
                     from ENEWS.WA.FEED
                    where EF_ID = ENEWS.WA.node_id(self.fNode)) do {
                http(sprintf('<div id="channel_header">&nbsp;<b><a href="%s" target="_blank" alt="Feed %s" title="Feed %s"><img src="%s" border="0"/> %s</a></b>&nbsp</div>', EF_HOME_URI, EF_TITLE, EF_TITLE, ENEWS.WA.xml_get('imageUrl', EF_DATA, 'image/docs_16.gif'), EF_TITLE));
                http(sprintf('<div id="channel_subheader">&nbsp;<b>Posts</b>: <span id="feed_count">0 (0)</span> | <b>Updated on</b>: <i>%s</i>&nbsp;</div>', ENEWS.WA.dt_value(EF_LAST_UPDATE)));
              }
            if (ENEWS.WA.node_type(self.fNode) = 'c')
              for (select EFD_TITLE,
                          EF_HOME_URI,
                          EF_LAST_UPDATE,
                          EF_DATA
                     from ENEWS.WA.FEED_DOMAIN
                            join ENEWS.WA.FEED on EF_ID = EFD_FEED_ID
                    where EFD_ID = ENEWS.WA.node_id(self.fNode)) do {
                http(sprintf('<div id="channel_header"><div style="float: left; padding-left: 0.5em;"><b><a href="%s" target="_blank" alt="Feed %s" title="Feed %s"><img src="%s" border="0"/> %s</a></b>&nbsp</div><div style="float: right; text-align: right; padding-right: 0.5em;"><a href="#" onClick="javascript: myPost(''F1'', ''refresh'', ''%s''); return false;" alt="Refresh" title="Refresh"><img src="image/ref_16.png" border="0"/></a></div><br style="clear: left;"/></div>', EF_HOME_URI, EFD_TITLE, EFD_TITLE, ENEWS.WA.channel_image(self.domain_id, self.account_id, EF_DATA, 'image/docs_16.gif'), EFD_TITLE, self.fNode));
                http(sprintf('<div id="channel_subheader">&nbsp;<b>Posts</b>: <span id="feed_count">0 (0)</span> | <b>Updated on</b>: <i>%s</i> %s %s </div>', ENEWS.WA.dt_value(EF_LAST_UPDATE), mt, st));
              }
            if (ENEWS.WA.node_type(self.fNode) = 's')
              for (select ESFO_ID,
                          ESFO_NAME
                     from ENEWS.WA.SFOLDER
                    where ESFO_ID = ENEWS.WA.node_id(self.fNode)
                      and ESFO_DOMAIN_ID = self.domain_id) do {
                http(sprintf('<div id="channel_header">&nbsp;<b><a href="sfolders_update.vspx?sid=%s&realm=%s&id=%s" alt="Smart folder %s" title="Smart folder %s"><img src="image/sfolder_16.jpg" border="0"/> %s</a></b></div>', self.sid, self.realm, ESFO_ID, ESFO_NAME, ESFO_NAME, ESFO_NAME));
                http(sprintf('<div id="channel_subheader">&nbsp;<b>Posts</b>: <span id="feed_count">0 (0)</span> %s %s </div>', mt, st));
              }
            if (ENEWS.WA.node_type(self.fNode) = 'b')
              for (select EB_ID,
                          EB_NAME,
                          EB_LAST_UPDATE
                     from ENEWS.WA.BLOG,
                          ENEWS.WA.WEBLOG
                    where EB_ID = ENEWS.WA.node_id(self.fNode)
                      and EW_ID = EB_WEBLOG_ID
                      and EW_DOMAIN_ID = self.domain_id) do {
                http(sprintf('<div id="channel_header"><div style="float: left; padding-left: 0.5em;"><b><a href="weblog.vspx?sid=%s&realm=%s&id=%d&mode=update_blog" alt="Blog %s" title="Blog %s"><img src="image/sfolder_16.jpg" border="0"/> %s</a></b></div><div style="float: right; text-align: right; padding-right: 0.5em;"><a href="#" onClick="javascript: myPost(''F1'', ''refresh'', ''%s''); return false;" alt="Refresh" title="Refresh"><img src="image/ref_16.png" border="0"/></a></div><br style="clear: left;"/></div>', self.sid, self.realm, EB_ID, EB_NAME, EB_NAME, EB_NAME, self.fNode));
                http(sprintf('<div id="channel_subheader">&nbsp;<b>Posts</b>: <span id="feed_count">0 (0)</span> | <b>Updated on</b>: <i>%s</i> | %s | %s </div>', ENEWS.WA.dt_value(EB_LAST_UPDATE), mt, st));
              }
            if ((ENEWS.WA.node_type(self.fNode) = 't') and not is_empty_or_null(ENEWS.WA.node_suffix(self.fNode))) {
               http(sprintf('<div id="channel_header">&nbsp;<b>Tag: %s</b></div>', ENEWS.WA.node_suffix(self.fNode)));
               http(sprintf('<div id="channel_subheader">&nbsp;<b>Posts</b>: <span id="feed_count">0 (0)</span> %s %s </div>', mt, st));
            }
          ?>
          <v:data-source name="dsrc" expression-type="sql" nrows="0" initial-offset="0">
            <v:before-data-bind>
              <![CDATA[
                declare read_flag, keep_flag varchar;

                self.mode_test();
                self.validateNode(self.domain_id);

                read_flag := 'EFID_READ_FLAG';
                keep_flag := 'EFID_KEEP_FLAG';
                control.ds_parameters := null;
                if (ENEWS.WA.node_type(self.fNode) = 'p') {
                  control.ds_sql := 'select top 10 EFI_ID,
                                            ENEWS.WA.show_title(EFI_TITLE) EFI_TITLE,
                                            ENEWS.WA.show_author(EFI_AUTHOR) EFI_AUTHOR,
                                            EFI_PUBLISH_DATE,
                                            EFID_READ_FLAG,
                                            EFID_KEEP_FLAG
                                       from ENEWS.WA.FEED_ITEM
                                              join ENEWS.WA.FEED on EF_ID = EFI_FEED_ID
                                                left join ENEWS.WA.FEED_ITEM_DATA on EFID_ITEM_ID = EFI_ID and EFID_DOMAIN_ID is null and EFID_ACCOUNT_ID is null
                                      where EF_ID = %d
                                        and coalesce(EFI_DELETE_FLAG, 0) <> 1';
                  control.ds_sql := sprintf(control.ds_sql, ENEWS.WA.node_id(self.fNode));
                } else if (ENEWS.WA.node_type(self.fNode) = 'c') {
                  control.ds_sql := 'select EFI_ID,
                                            ENEWS.WA.show_title(EFI_TITLE) EFI_TITLE,
                                            ENEWS.WA.show_author(EFI_AUTHOR) EFI_AUTHOR,
                                            EFI_PUBLISH_DATE,
                                            EFID_READ_FLAG,
                                            EFID_KEEP_FLAG
                                       from ENEWS.WA.FEED_ITEM
                                              join ENEWS.WA.FEED_DOMAIN on EFD_FEED_ID = EFI_FEED_ID
                                                left join ENEWS.WA.FEED_ITEM_DATA on EFID_ITEM_ID = EFI_ID and EFID_ACCOUNT_ID = %d
                                      where EFD_ID = %d
                                        and coalesce(EFI_DELETE_FLAG, 0) <> 1';
                  control.ds_sql := sprintf(control.ds_sql, self.account_id, ENEWS.WA.node_id(self.fNode));
                } else if (ENEWS.WA.node_type(self.fNode) = 's') {
                  declare data integer;
                  data := (select ESFO_DATA from ENEWS.WA.SFOLDER where ESFO_DOMAIN_ID = self.domain_id and ESFO_ID = ENEWS.WA.node_id(self.fNode));
                  control.ds_sql := ENEWS.WA.sfolder_sql(self.domain_id, self.account_id, data);
                } else if (ENEWS.WA.node_type(self.fNode) = 'b') {
                  read_flag := 'EBPD_READ_FLAG';
                  keep_flag := 'EBPD_KEEP_FLAG';
                  control.ds_sql := 'select EBP_ID EFI_ID,
                                            ENEWS.WA.show_title((EBP_META as BLOG..MWeblogPost).title) EFI_TITLE,
                                            ENEWS.WA.show_author((EBP_META as BLOG..MWeblogPost).author) EFI_AUTHOR,
                                            coalesce((EBP_META as BLOG..MWeblogPost).dateCreated, now()) EFI_PUBLISH_DATE,
                                            EBPD_READ_FLAG EFID_READ_FLAG,
                                            EBPD_KEEP_FLAG EFID_KEEP_FLAG
                                       from ENEWS.WA.BLOG_POST
                                           join ENEWS.WA.BLOG on EB_ID = EBP_BLOG_ID
                                              join ENEWS.WA.WEBLOG on EW_ID = EB_WEBLOG_ID
                                                left join ENEWS.WA.BLOG_POST_DATA on EBPD_POST_ID = EBP_ID
                                      where EW_DOMAIN_ID = %d
                                        and EB_ID = %d';
                  control.ds_sql := sprintf(control.ds_sql, self.domain_id, ENEWS.WA.node_id(self.fNode));
                } else if ((ENEWS.WA.node_type(self.fNode) = 't') and not is_empty_or_null(ENEWS.WA.node_suffix(self.fNode))) {
                  declare data integer;

                  ENEWS.WA.xml_set('tags', data, ENEWS.WA.node_suffix(self.fNode));
                  control.ds_sql := ENEWS.WA.sfolder_sql(self.domain_id, self.account_id, data);
                } else {
                  control.ds_sql := 'select * from ENEWS.WA.BLOG where 1=0';
                  goto _end;
                }

                declare flag varchar;

                flag := get_keyword('show', params, '');
                if (flag = 'r1')
                  control.ds_sql := concat(control.ds_sql, sprintf(' and coalesce(%s, 0) = 1', read_flag));
                else if (flag = 'r0')
                  control.ds_sql := concat(control.ds_sql, sprintf(' and coalesce(%s, 0) = 0', read_flag));
                else if (flag = 'f1')
                  control.ds_sql := concat(control.ds_sql, sprintf(' and coalesce(%s, 0) = 1', keep_flag));
                else if (flag = 'f0')
                  control.ds_sql := concat(control.ds_sql, sprintf(' and coalesce(%s, 0) = 0', keep_flag));

                self.sortChange(get_keyword('sortColumn', e.ve_params, ''));
                control.ds_sql := concat(control.ds_sql, ' order by ', self.n_order, ' ', self.n_direction, ', EFI_ID');
              _end:;
              ]]>
            </v:before-data-bind>
          </v:data-source>

          <v:data-set name="ds" data-source="self.dsrc" scrollable="1">

            <v:template name="ds_header" type="simple" name-to-remove="table" set-to-remove="bottom">
              <table id="feed" style="width: 100%;" cellspacing="0">
                <thead class="sortHeader">
                  <tr>
                    <v:template type="simple" enabled="--case when (self.account_role in ('public', 'guest')) then 0 else 1 end">
                      <th width="1%">
                        <input type="checkbox" name="cb_all" value="Select All" onClick="selectAllCheckboxes(this.form, this, 'cb_item')"/>
                      </th>
                      <th width="1%" class="image">
                        <img src="image/flag.gif" border="0"/>
                      </th>
                     </v:template>
                    <th width="1%" class="last">
                      <img src="image/c.gif" border="0"/>
                    </th>
                    <th>
                      <?vsp self.sortColumn('Headline', 'EFI_TITLE'); ?>
                    </th>
                    <th>
                      <?vsp self.sortColumn('Author', 'EFI_AUTHOR'); ?>
                    </th>
                    <th>
                      <?vsp self.sortColumn('Date', 'EFI_PUBLISH_DATE'); ?>
                    </th>
                  </tr>
                </thead>
              </table>
            </v:template>

            <v:template name="ds_repeat" type="repeat" name-to-remove="" set-to-remove="">

              <v:template name="ds_browse" type="browse" name-to-remove="table" set-to-remove="both">
                <table>
                  <?vsp
                    self.r_count := self.r_count + 1;
                    if (self.r_count = 1) {
                      if (is_empty_or_null(self.link)) {
                        http (sprintf ('<input type="hidden" name="fid" value="%d" />', control.te_column_value('EFI_ID')));
                        http (sprintf ('<input type="hidden" name="did" value="%d" />', self.domain_id));
                        http (sprintf ('<input type="hidden" name="aid" value="%d" />', self.account_id));
                        http (sprintf ('<input type="hidden" name="m" value="%s" />', ENEWS.WA.node_type(self.fNode)));
                      } else {
                        http (sprintf ('<input type="hidden" name="fid" value="%s" />', self.link));
                        http (sprintf ('<input type="hidden" name="did" value="%d" />', self.domain_id));
                        http (sprintf ('<input type="hidden" name="aid" value="%d" />', self.account_id));
                        http (sprintf ('<input type="hidden" name="m" value="%s" />', ENEWS.WA.node_type(self.fNode)));
                      }
                    }
                  ?>
                  <tr>
                    <v:template type="simple" enabled="--case when (self.account_role in ('public', 'guest')) then 0 else 1 end">
                      <td align="center">
                        <?vsp
                          http (sprintf ('<input type="checkbox" name="cb_item" value="%d" />', ((control.vc_parent) as vspx_row_template).te_column_value('EFI_ID')));
                        ?>
                      </td>
                      <td align="center">
                        <?vsp
                          http(sprintf('<span id="image_%d">', ((control.vc_parent) as vspx_row_template).te_column_value('EFI_ID')));
                          if (((control.vc_parent) as vspx_row_template).te_column_value('EFID_KEEP_FLAG') = 1) {
                            http('<img src="image/flag.gif" border="0"/>');
                          } else {
                            http('&nbsp;');
                          }
                          http('</span>');
                        ?>
                      </td>
                     </v:template>
                    <td>
                      <img src="image/html.png" border="0" alt="folder" width="16"/>
                    </td>
                    <td>
                      <v:url value="--(control.vc_parent as vspx_row_template).te_column_value('EFI_TITLE')" url="--'javascript: return false;'" format="%s" xhtml_id="--concat('feed_', cast((control.vc_parent as vspx_row_template).te_column_value('EFI_ID') as varchar))" xhtml_title="--ENEWS.WA.utf2wide((control.vc_parent as vspx_row_template).te_column_value('EFI_TITLE'))" xhtml_class="--self.linkClass((control.vc_parent as vspx_row_template).te_column_value('EFID_READ_FLAG'))">
                        <v:after-data-bind>
                          <![CDATA[
                            control.vu_url := sprintf('javascript: loadIFrame(\'%d\', \'%d\', \'%d\', null, \'%s\');', (control.vc_parent as vspx_row_template).te_column_value('EFI_ID'), self.domain_id, self.account_id, ENEWS.WA.node_type(self.fNode));
                           ]]>
                        </v:after-data-bind>
                      </v:url>
                    </td>
                    <td>
                      <v:label value="--(control.vc_parent as vspx_row_template).te_column_value('EFI_AUTHOR')" format="%s"/>
                    </td>
                    <td align="right" nowrap="nowrap">
                      <i><v:label value="--ENEWS.WA.dt_value((control.vc_parent as vspx_row_template).te_column_value('EFI_PUBLISH_DATE'))" format="%s"/></i>
                    </td>
                  </tr>
                </table>
              </v:template>

            </v:template>

            <v:template name="ds_footer" type="simple" name-to-remove="table" set-to-remove="top">
              <table>
              </table>
            </v:template>

          </v:data-set>
          <script type="text/javascript">
            <![CDATA[
              coloriseTable('feed');
            ]]>
          </script>
        </div>
        <div class="feed_subpane3" id="feed_content"/>
      </div>
      <script type="text/javascript">
        <![CDATA[
          if (document.forms['F1'].elements['fid'])
            if (document.forms['F1'].elements['did'])
              if (document.forms['F1'].elements['aid'])
                loadIFrame(document.forms['F1'].elements['fid'].value, document.forms['F1'].elements['did'].value, document.forms['F1'].elements['aid'].value, 'x', document.forms['F1'].elements['m'].value);
        ]]>
      </script>
      <?vsp
        if (self.fBookmark is not null) {
          http ('\n<script type="text/javascript">\n');
          http (sprintf ('if (BrowserDetect.browser != \'Opera\') location.hash = "%s";\n', self.fBookmark));
          http ('</script>\n');
        }
      ?>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
