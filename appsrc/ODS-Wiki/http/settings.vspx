<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<?vsp WV.WIKI.VSPHEADER (path,params,lines, 'Settings'); ?>
<v:page 
   name="settings" 
   on-deadlock-retry="5" 
   style="comp.xsl" 
   on-error-redirect="../main/" 
   xmlns:v="http://www.openlinksw.com/vspx/" 
   xmlns:vm="http://www.openlinksw.com/vspx/macro"> 
   
    <v:variable name="url" type="varchar" default="null" persist="0"
		xmlns:v="http://www.openlinksw.com/vspx/" />
    <v:variable name="delicious_enable" type="integer"/>
    <v:variable name="webmail_enable" type="integer"/>
    <v:variable name="host" type="vadchar"/>
    <v:variable name="wa_domain" type="varchar" default="null" persist="0"/>
    <v:variable name="domains" type="varchar" default="null" persist="0"/>
    <v:variable name="skins" type="varchar" default="null" persist="0"/>
    <v:variable name="email_obfuscation_types" type="varchar" default="null" persist="0"/>
    <v:variable name="index_page" type="varchar" default="'WelcomeVisitors'" persist="0"/>
    <v:variable name="vspx_user" type="varchar" default="'WikiGuest'" persist="1"/>
    <v:variable name="cluster_name" type="varchar" default="'Main'" param-name="cluster"/>
    <v:variable name="cluster" type="int"/> 
    <v:variable name="new_topic_template" type="varchar" default="''" persist="0"/>
    <v:variable name="new_category_template" type="varchar" default="''" persist="0"/>
    <v:variable name="skin2_vhost_regexp" type="varchar" default="''" persist="0"/>
    <v:variable name="is_sync" type="integer" default="0"/>
    <v:variable name="sync_message" type="varchar" default="''"/>
    <v:variable name="enabled" type="varchar" defaullt="'1'"/>
    <!-- LDAP vars -->
    <v:variable name="ldap_enable" type="integer" persist="0"/>
    <v:variable name="conv_enable" type="integer" persist="0"/>
    <v:variable name="ldap_address" type="varchar" default="''"/>
    <v:variable name="ldap_base" type="varchar" default="''"/>
    <v:variable name="ldap_bind" type="varchar" default="''"/>
    <v:variable name="ldap_uid" type="varchar" default="'uid'"/>
    <v:variable name="ldap_version" type="integer" default="2"/>
    <v:variable name="ldap_port" type="integer" default="389"/>
    <v:variable name="source_page" type="varchar"/>
    <!-- Technorati integration -->
    <v:variable name="technorati_api_key" type="varchar" default="''"/>
    <v:on-init>
      self.sid := get_keyword('sid', params);
      self.realm := get_keyword('realm', params, 'wiki');
      set isolation='committed';
      if ({?'name'} is not null)
          self.name.ufl_value := {?'name'};		  
    --dbg_obj_print (self.cluster_name);
     self.cluster := (select CLUSTERID from WV..CLUSTERS where CLUSTERNAME= self.cluster_name);
      self.source_page := WV.WIKI.READONLYWIKIWORDLINK (self.cluster_name, '');
    </v:on-init>
    <v:before-data-bind><![CDATA[
	    
      self.vspx_user := coalesce((select vs_uid from
        VSPX_SESSION where vs_sid = self.sid and vs_realm = self.realm), 'WikiGuest');
      self.index_page := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'index-page', 'WelcomeVisitors');
      self.new_topic_template := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'new-topic-template', '');
      self.new_category_template := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'new-category-template', '');
      self.skin2_vhost_regexp := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'skin2-vhost-regexp', '');
    ]]></v:before-data-bind>
    <v:after-data-bind>
      <![CDATA[
	self.index_page_tmpl.vc_data_bind(e);
	self.topic_templates.vc_data_bind(e);
	-- dbg_obj_print (self.cluster_name);
	declare pwd varchar;
	declare cluster_col_id int;
	cluster_col_id := (select ColId from WV.WIKI.CLUSTERS where ClusterName = self.cluster_name);
	pwd := (select pwd_magic_calc (U_NAME, U_PASSWORD, 1) from DB.DBA.SYS_USERS where U_NAME = self.vspx_user);
	if (DAV_HIDE_ERROR (DAV_AUTHENTICATE (cluster_col_id, 'C', '_1_', self.vspx_user, pwd)) is not null)
	  self.enabled := '@@hidden@@';
	self.form_tmpl.vc_data_bind(e);
      ]]>
    </v:after-data-bind>
    <vm:body>
      <vm:tab/>
      <v:form name="common_setting" type="simple" method="POST">
       <v:template name="form_tmpl" type="simple">
        <v:text type="hidden" name="name" value="--self.name.ufl_value">
	</v:text>
        <v:text type="hidden" name="cluster_text" value="--self.cluster_name">
          <v:before-data-bind>
            <v:script>
              <![CDATA[       
                if (self.delicious_enable is null)
                  self.delicious_enable := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'delicious_enabled', 2);
                if (self.webmail_enable is null)
                  self.webmail_enable := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'webmail_enabled', 2);
                if (self.conv_enable is null)
                  self.conv_enable := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'conv_enabled', 2);
                if (self.ldap_enable is null)
                  self.ldap_enable := WV.WIKI.CLUSTERPARAM (self.cluster_name, 'ldap_enabled', 2);
                if (self.host is null)
                  self.host := aref (split_and_decode (http_request_header (lines, 'Host'), 0, '\0\0:'), 0);
		self.domains := (select XMLELEMENT ('domains',
					XMLAGG (
						XMLELEMENT ('domain', WD_DOMAIN)))
				from DB.DBA.WA_DOMAINS);
		declare _dav_list_collections, sks any;
		_dav_list_collections := WV.WIKI.GETCOLLECTIONS (WV.WIKI.SKINSCOLLECTION (), 0);		
		self.skins := XMLELEMENT ('skins');
	        sks := xpath_eval ('/skins', self.skins);
		foreach (any sk in _dav_list_collections) do {
			XMLAppendChildren (sks, 
			  XMLELEMENT ('skin', sk));
		}
                declare email_obfuscation_types_ent any;
	        self.email_obfuscation_types := XMLELEMENT ('email_obfuscation_types');
                email_obfuscation_types_ent := xpath_eval ('/email_obfuscation_types', self.email_obfuscation_types);
	        for select P_NAME from DB.DBA.SYS_PROCEDURES where P_NAME like 'WV.%.EMAIL_OBFUSCATE_%'
                do {
 		  XMLAppendChildren (email_obfuscation_types_ent, 
		    XMLELEMENT ('type', subseq (P_NAME, 24)));
                }		
                ]]>
              </v:script>
          </v:before-data-bind>
        </v:text>
        <v:on-post>
 	          <![CDATA[
	    if (not self.vc_is_valid)
	      return;
	    declare cluster_id int;
	    cluster_id := self.cluster;
	    self.is_sync := atoi (get_keyword ('delicious_sync_now', params, '0'));
            if ({?'save'} is not null) {
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'delicious_user', self.delicious_user.ufl_value);
                    WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'delicious_update_interval', cast (self.delicious_update_interval.ufl_value as integer) * 60);
            if (self.delicious_passwd.ufl_value is not null 
                         and self.delicious_passwd.ufl_value <> '')
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'delicious_digest', encode_base64 (self.delicious_user.ufl_value || ':' || self.delicious_passwd.ufl_value) );
--            if (self.cluster_name_dns.ufl_value is not null
--              and self.cluster_dns.ufl_value <> '')
--              WV.WIKI.SETCLUSTERDNS (self.cluster, self.cluster_dns.ufl_value);
	    WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'index-page', self.index_page_name.ufl_value);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'delicious_enabled', self.delicious_enable);
	    if (self.webmail_enable = 1 and (WV.WIKI.CLUSTERPARAM (self.cluster_name, 'webmail_initialized') is null))
	      {
		DB.DBA.VAD_LOAD_SQL_FILE('/DAV/VAD/wiki/webmail.sql', 1, 'report', 1);
		WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'webmail_initialized', 1);
	      }
	    WV.WIKI.TOGGLE_CONVERSATION (self.cluster_name, 2 - self.conv_enable);
	    WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'conv_enabled', self.conv_enable);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'webmail_enabled', self.webmail_enable);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'webmail_domain', self.webmail_domains.ufl_value);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'skin', self.wiki_skin.ufl_value);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'skin2', self.wiki_skin_2.ufl_value);
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'email-obfuscate', self.email_obfuscation.ufl_value);
	    WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'new-topic-template', self.new_topic_template_text.ufl_value);
	    WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'new-category-template', self.new_category_template_text.ufl_value);
	    if (WV.WIKI.TRIM(self.skin2_vhost_regexp_text.ufl_value) = '')
		WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'skin2-vhost-regexp', NULL);
	    else 
		WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'skin2-vhost-regexp', WV.WIKI.TRIM (self.skin2_vhost_regexp_text.ufl_value));
	    if (self.is_sync)
	      {
	        WV.WIKI.DELICIOUSSYNC (cluster_id, self.vspx_user);
	      }
            WV.WIKI.SETCLUSTERPARAM (self.cluster_name, 'ldap_enabled', self.ldap_enable);
	    if (self.ldap_enable = 1)
	      {
	        WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_address', trim (self.ldap_address_f.ufl_value));
		WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_base', trim (self.ldap_base_f.ufl_value));
		WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_bind', trim (self.ldap_bind_f.ufl_value));
		WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_uid', trim (self.ldap_uid_f.ufl_value));
		WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_version', atoi (trim (self.ldap_version_f.ufl_value)));
		WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_port', trim (self.ldap_port_f.ufl_value));
	      }
	    WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'ldap_port', trim (self.ldap_port_f.ufl_value));
	    self.sync_tmpl.vc_data_bind(e);
            self.vc_data_bind (e);
            }
             ]]>
          </v:on-post>
	  <v:after-data-bind>
	    <![CDATA[
	    if (WV.WIKI.CLUSTERPARAM (self.cluster_name, 'delicious_last_update') is not null)
	      self.sync_message := 'last ping: ' 
	        || WV.WIKI.DATEFORMAT (WV.WIKI.CLUSTERPARAM (self.cluster_name, 'delicious_last_update'));
	    else
	      self.sync_message := '';
	    self.ldap_address := WV.WIKI.CLUSTERPARAM(self.cluster_name, 'ldap_address', '');
	    self.ldap_base := WV.WIKI.CLUSTERPARAM(self.cluster_name, 'ldap_base', '');
	    self.ldap_bind := WV.WIKI.CLUSTERPARAM(self.cluster_name, 'ldap_bind', '');
	    self.ldap_uid := WV.WIKI.CLUSTERPARAM(self.cluster_name, 'ldap_uid', 'uid');
	    self.ldap_version := WV.WIKI.CLUSTERPARAM(self.cluster_name, 'ldap_version', 2);
	    self.ldap_tmpl.vc_data_bind(e);

	    self.technorati_api_key := WV.WIKI.CLUSTERPARAM(self.cluster_name,'technorati_api_key', '');
	    self.technorati_tmpl.vc_data_bind(e);
	    ]]>
	  </v:after-data-bind>
	      
	<table class="wiki-settings">
          <tr>
            <td>
              <h2>Settings for cluster <v:label name="cluster_l1" value="--self.cluster_name"/> </h2>
            </td>
          </tr>
          <tr>
	    <td>
	       <div class="error">
	         <v:error-summary/>
	        </div>
	    </td>
	  </tr>
          <tr>
            <td>
              <div class="wiki-setttings-host">
                <h2>Virtual host settings</h2>
                <p>
                  <table width="100%">
<!--                    <tr>
                      <th width="50%">Fully Qualified Hostname (host.domain):</th>
                      <td><v:text name="cluster_dns" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'dns', self.host)">
			  <v:validator test="regexp" regexp='[a-zA-Z0-9._-]+\.([a-zA-Z]{2,4})' message="Domain name is expected" runat="client"/>
			</v:text></td>
                    </tr> -->
		    <tr>
		      <th>Index page:</th>
		      <td>
		        <v:template name="index_page_tmpl" type="simple">
			 <v:text error-glyph="*" name="index_page_name" value="--self.index_page">
			  <v:validator test="regexp" regexp='[A-Z][a-z]*[A-Z][A-Za-z0-9]*' message="Index page must be WikiWord"/>
			 </v:text>
			</v:template>
	     	      </td>
		    </tr>
                  </table>
                </p>
              </div>
            </td>
          </tr>
	  <tr>
            <td>
              <div class="wiki-settings-templates">
                <h2>del.icio.us integration</h2>
                <p>
                  <table width="100%">
                    <tr>
                      <th width="50%">Toggle integration:</th>
                      <td>
                        <v:button name="delicious_toggle" action="simple" xhtml_disabled="--self.enabled" 
				value="--case when self.delicious_enable = 1 then 'Turn Off' else 'Turn On' end" 
				>
                          <v:on-post>
                            <![CDATA[
                              self.delicious_enable := 3 - self.delicious_enable;
                              self.vc_data_bind (e);
                              ]]>
                          </v:on-post>
                        </v:button>
                      </td>
                    </tr>
                    <tr>
                      <th>user name:</th>
                      <td><v:text name="delicious_user" format="%s" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'delicious_user', '')" enabled="--case when self.delicious_enable = 1 then 1 else 0 end">
			</v:text></td>
                    </tr>
                    <tr>
                      <th>password (leave it empty to keep old password):</th>
                      <td><v:text type="password" name="delicious_passwd" enabled="--case when self.delicious_enable = 1 then 1 else 0 end"/></td>
                    </tr>
                    <tr>
                      <th>minimum of update interval (in minutes):</th>
                      <td>
                        <v:text error-glyph="*" name="delicious_update_interval" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'delicious_update_interval', 600)/60" enabled="--case when self.delicious_enable = 1 then 1 else 0 end">
			  <v:validator test="regexp" regexp="^[0-9]+$" message="Number is expected" runat="client"/>
                          <v:validator test="value" min="10" max="999999" empty-allowed="0" message="number greater than 10 and less than 999999 is expected" runat="client"/>
                        </v:text>
                      </td>
                    </tr>
                    <tr>
                      <th>Import categories:</th>
		      <v:template name="sync_tmpl" type="simple" enabled="--case when self.delicious_enable = 1 then 1 else 0 end">
                       <td>
			<v:check-box name="delicious_sync_now" value="1"/>Import <br/>
			<v:label name="sync_l" value="--self.sync_message"/>
                       </td>
		      </v:template>
                    </tr>
                  </table>
                </p>
              </div>
            </td>
          </tr>
          <tr>
            <td>
              <div class="wiki-setttings-omail">
                <h2>oMail integration</h2>
                <p>
                  <table width="100%">
                    <tr>
                      <th width="50%">Toggle integration:</th>
                      <td>
                        <v:button name="webmail_toggle" 
				action="simple" xhtml_disabled="--self.enabled"
				value="--case when self.webmail_enable = 1 then 'Turn Off' else 'Turn On' end" 
				enabled="--case when exists (select 1 from WA_TYPES where &quot;WAT_NAME&quot; = 'oMail') then 1 else 0 end" >
                          <v:on-post>
                            <![CDATA[
                              self.webmail_enable := 3 - self.webmail_enable;
                              self.vc_data_bind (e);
                            ]]>
                          </v:on-post>
                        </v:button>
                      </td>
		    </tr>
		    <tr>
		      <th>e-mail domain:</th>
		      <td>
			<v:data-list name="webmail_domains" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'webmail_domain', 'domain.com')" list-document="--self.domains" list-match="/domains/domain" list-key-path="." list-value-path="."  enabled="--case when self.webmail_enable = 1 then 1 else 0 end"/>
		      </td>
			
                    </tr>
                  </table>
                </p>
              </div>
            </td>
          </tr>
	  <tr>
	    <td>
	      <div class="wiki-setttings-omail">
		<h2>Anti SPAM</h2>
		<p>
		   <table width="100%">
                    <tr>
		      <th>e-mail obfuscation:</th>
		      <td>
			<v:data-list name="email_obfuscation" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'email-obfuscate', 'NONE')" list-document="--self.email_obfuscation_types" list-match="/email_obfuscation_types/type" list-key-path="." list-value-path="."/>
		      </td>
                    </tr>
                   </table>
	 	</p>
	      </div>
	    </td>
	  </tr> 
	  <tr>
	    <td>
	      <div class="wiki-setttings-omail">
		<h2>Look and feel</h2>
		<p>
		  <table>
		    <tr>
		      <th>Primary Skin:</th>
		      <td>
			<v:data-list name="wiki_skin" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'skin', 'default')" list-document="--self.skins" list-match="/skins/skin" list-key-path="." list-value-path="."/>
		      </td>
                    </tr>
		    <tr>
		      <th>Secondary Skin:</th>
		      <td>
			<v:data-list name="wiki_skin_2" value="--&quot;WV&quot;.&quot;Wiki&quot;.&quot;ClusterParam&quot; (self.cluster_name, 'skin2', 'default')" list-document="--self.skins" list-match="/skins/skin" list-key-path="." list-value-path="."/>
		      </td>
		    </tr>
		    <tr>
		      <th>VHost regular expression:</th>
		      <td>
                       <v:text name="skin2_vhost_regexp_text" value="--self.skin2_vhost_regexp"/>
		     </td>
		    </tr>
                  </table>
                </p>
              </div>
            </td>
          </tr>
          <tr>
           <td>
             <div class="wiki-settings-templates">
	      <v:template name="topic_templates" type="simple">
               <h2>Templates</h2>
               <p>
                 <table>
                   <tr>
                     <th valign="top" align="left">New Topic:</th>
                     <td>
                       <v:textarea name="new_topic_template_text" xhtml_rows="10" xhtml_cols="70" value="--self.new_topic_template"/>
                     </td>
                   </tr>
                   <tr>
                     <th valign="top" align="left">New Category:</th>
                     <td>
                       <v:textarea name="new_category_template_text" xhtml_rows="10" xhtml_cols="70" value="--self.new_category_template"/>
                     </td>
                   </tr>
                 </table>
               </p>
	      </v:template>
            </div>
           </td>
          </tr>
	  <tr>
	   <td>
             <div class="wiki-settings-templates">
               <h2>LDAP integration</h2>
               <p>
	        <v:template name="ldap_tmpl" type="simple">
                 <table width="100%">
                   <tr>
                      <th width="50%">Toggle integration:</th>
                      <td>
                        <v:button name="ldap_toggle" action="simple" xhtml_disabled="--self.enabled" 
				value="--case when self.ldap_enable = 1 then 'Turn Off' else 'Turn On' end" 
				>
                          <v:on-post>
                            <![CDATA[
                              self.ldap_enable := 3 - self.ldap_enable;
                              self.ldap_tmpl.vc_data_bind (e);
                              ]]>
                          </v:on-post>
                        </v:button>
                      </td>
		   </tr>
                   <tr>
                     <th valign="top" align="left">Address:</th>
                     <td>
                       <v:text name="ldap_address_f" value="--self.ldap_address" 
		        xhtml_size="40"
		       	enabled="--case when self.ldap_enable = 1 then 1 else 0 end"/>
                     </td>
                   </tr>
		   <tr>
		     <th>Port:</th>
		     <td>
		       <v:text error-glyph="*" name="ldap_port_f" format="%ld" value="--self.ldap_port"
		       	 enabled="--case when self.ldap_enable = 1 then 1 else 0 end">
			 <v:validator test="regexp" regexp="^[0-9]+$" message="Number is expected" runat="client"/>
		       </v:text>
		     </td>
		   </tr>
                   <tr>
                     <th valign="top" align="left">Base:</th>
                     <td>
                       <v:text name="ldap_base_f" value="--self.ldap_base"
		        xhtml_size="40"
		       	enabled="--case when self.ldap_enable = 1 then 1 else 0 end"/>
		       
                     </td>
                   </tr>
                   <tr>
                     <th valign="top" align="left">Bind DN:</th>
                     <td>
                       <v:text name="ldap_bind_f" value="--self.ldap_bind"
		        xhtml_size="40"
		       	enabled="--case when self.ldap_enable = 1 then 1 else 0 end"/>
                     </td>
                   </tr>
                   <tr>
                     <th valign="top" align="left">Version:</th>
                     <td>
			<v:data-list name="ldap_version_f" 
			  value="--self.ldap_version" 
			  list-document="--xtree_doc ('<vers><v>1</v><v>2</v></vers>')" 
			  list-match="/vers/v" 
			  list-key-path="." 
			  list-value-path="number()" 
		       	enabled="--case when self.ldap_enable = 1 then 1 else 0 end"/>
                     </td>
                   </tr>
                   <tr>
                     <th valign="top" align="left">UID field:</th>
                     <td>
                       <v:text name="ldap_uid_f" value="--self.ldap_uid"
		        xhtml_size="40"
		       	enabled="--case when self.ldap_enable = 1 then 1 else 0 end"/>
                     </td>
                   </tr>
                 </table>
		</v:template>
               </p>
	     </div>
	    </td>
	  </tr>
	  <tr>
	   <td>
             <div class="wiki-settings-templates">
               <h2>Technorati integration</h2>
               <p>
                 <table width="100%">
		  <v:template name="technorati_tmpl" type="simple">
                   <tr>
                      <th width="50%">API key (32 characters long):</th>
		      
                      <td>
                       <v:text error-glyph="*" name="technorati_api_key_f" 
		        value="--self.technorati_api_key" 
		        xhtml_size="40">
			 <v:validator test="regexp" regexp="^[a-z0-9]{32}$|^[ ]*$" message="API key is expected"/>
		       </v:text>
                      </td>
                   </tr>
		  </v:template>
                 </table>
               </p>
	      </div>
	    </td>
	  </tr>
          <tr>
	    <td>
	      <div class="wiki-settings-templates">
		<h2>Conversations (NNTP integration)</h2>
		<p>
		  <table width="100%">
		    <tr>
		      <th width="50%">Conversation (NNTP integration)</th>
		      <td>
			<v:button name="conv_toggle" action="simple" xhtml_disabled="--self.enabled" 
				value="--case when self.conv_enable = 1 then 'Turn Off' else 'Turn On' end">
			  <v:on-post>
                            <![CDATA[
                              self.conv_enable := 3 - self.conv_enable;
                              self.vc_data_bind (e);

                              ]]>
                          </v:on-post>
                        </v:button>
                      </td>
		    </tr>
		  </table>
		</p>
	      </div>
	    </td>
	  </tr>
          <tr>
            <td align="left">
              <v:button name="save" action="submit" value="Save Changes" xhtml_disabled="--self.enabled">
	       <v:on-post><![CDATA[
 	        if (not self.vc_is_valid)
		  return;
	        WV.WIKI.SETCLUSTERPARAM(self.cluster_name, 'technorati_api_key', trim (self.technorati_api_key_f.ufl_value));
		self.technorati_tmpl.vc_data_bind(e);
	       ]]></v:on-post>
	      </v:button>
	      <vm:back-button/>
            </td>
          </tr>
        </table>
       </v:template>
      </v:form>
    </vm:body>
</v:page>
<?vsp

WV.WIKI.VSPFOOTER (path,params,lines);

?>
