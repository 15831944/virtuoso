<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="blog-home-page"
        xmlns:vm="http://www.openlinksw.com/vspx/weblog/"
        xmlns:v="http://www.openlinksw.com/vspx/"
        style="index.xsl"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <vm:page>
    <vm:header>
      <vm:title>Application Endpoint Administration</vm:title>
    </vm:header>
    <vm:pagewrapper>
      <vm:variable name="inst" type="db.dba.web_app" default="null" persist="0" />
      <vm:variable name="wa_name" type="varchar" default="null" persist="0" param-name="wa_name"/>
      <vm:variable name="imodel" type="int" default="null" persist="0"/>
      <vm:variable name="is_public" type="int" default="null" persist="0"/>
      <vm:variable name="is_visible" type="int" default="null" persist="0"/>
      <vm:variable name="iid" type="int" default="null" persist="0" param-name="wai_id"/>
      <vm:variable name="iname" type="varchar" default="null" persist="0"/>
      <vm:variable name="idesc" type="varchar" default="null" persist="0"/>
      <vm:variable name="_app" type="varchar" default="null" persist="0"/>
      <vm:variable name="_host" type="varchar" default="null" persist="0"/>
      <vm:variable name="_lhost" type="varchar" default="null" persist="0"/>
      <vm:variable name="wa_host" type="varchar" default="null" persist="0"/>
      <vm:variable name="_path" type="varchar" default="null" persist="0"/>
      <vm:variable name="remove_mode" type="integer" default="0" persist="0"/>
      <vm:navigation on="settings"/>
      <vm:navigation1 on="admin"/>
      <vm:navigation2 on="endpoint"/>
      <vm:rawheader caption="Application Endpoint Definitions"/>
      <vm:body>
        <vm:login redirect="index.vspx"/>
        <v:before-data-bind>
          <![CDATA[
            declare i integer;
            i := 0;
            while (i < length(self.vc_event.ve_lines))
            {
              if( 'Host: ' = left(self.vc_event.ve_lines[i], 6))
                self.wa_host := trim(subseq(self.vc_event.ve_lines[i], 6), '\r\n');
              i := i + 1;
            }
            if (self.wa_host is not null)
            {
              if (subseq(self.wa_host, 0, 3) = 'wa.')
              {
                declare domain varchar;
                domain := subseq(self.wa_host, 3);
                if (strchr(domain, '.') is not null)
                  self.wa_host := domain;
              }
              declare pos integer;
              pos := strchr(self.wa_host, ':');
              declare _port varchar;
              if (pos is not null)
              {
                _port := trim(subseq(self.wa_host, pos + 1));
                if (_port = '80' or _port is null or _port = '')
                 self.wa_host := subseq(self.wa_host, 0, pos);
              }
              if (exists(select 1 from HTTP_PATH where HP_HOST=self.wa_host))
              {
                self._lhost := (select HP_LISTEN_HOST from HTTP_PATH where HP_HOST=self.wa_host);
              }
            }
          ]]>
        </v:before-data-bind>
        <div class="box">
          <div>
            <p>
              Application Endpoint Definitions allow you to create multiple home URLs on your application websites.
              For example, if your weblog application is "http://myopenlink.com:8080/weblog/user" you can
              add a new multi-home site to point to "http://myweblog.com". Users can then view your journal via
              the shorter and more direct URL.
            </p>
            <v:template name="main1" type="simple" condition="self.remove_mode = 0">
              <div id="main">
                <v:data-source name="vdds" expression-type="sql" nrows="-1" initial-offset="0">
                  <v:expression>
                    <![CDATA[
		      select * from
		      WA_MEMBER_URLS (uid) (WAI_NAME varchar, HP_HOST varchar, HP_LPATH varchar, HP_LISTEN_HOST varchar, IS_DEFAULT integer, DEF_PAGE varchar)
		      WA_MEMBER_URLS_PT where uid = ?
                    ]]>
                  </v:expression>
                  <v:param name="usr" value="--self.u_id" />
                  <v:column name="WAI_NAME" label="Name" />
                  <v:column name="HP_HOST" label="Host" />
                  <v:column name="HP_LPATH" label="Instance" />
                  <v:column name="HP_LISTEN_HOST" label="ListenHost" />
                  <v:column name="IS_DEFAULT" label="isDefault" />
                  <v:column name="DEF_PAGE" label="DefaultPage" />
                </v:data-source>
                <div class="box_noscroll" id="accesspoints">
                  <table class="listing">
                    <tr class="listing_header_row">
                      <th>Application Name</th>
                      <th>Multi-Home Site Prefix</th>
                      <th>Domain</th>
                      <th>Virtual Path</th>
                      <th>Action</th>
                    </tr>
                    <v:data-set name="vd" scrollable="1" edit="1" data-source="self.vdds">
                      <vm:template type="repeat">
                        <v:template name="vd_edit_template" type="edit" name-to-remove="" set-to-remove="">
                          <v:form type="update" name="_edit1_" if-not-exists="nothing" method="POST" >
                            <tr>
                              <td>
                                
                                <?V cast(self.vd.ds_current_row.te_rowset[0] as varchar) ?>
                                <?vsp
                                  declare ttt varchar;
                                  declare inst web_app;
                                  ttt := sys_stat('st_host_name');
                                  ttt := 'http://' || ttt || ':' || cfg_item_value(virtuoso_ini_path(), 'HTTPServer', 'ServerPort');
                                  select WAI_INST into inst from WA_INSTANCE where WAI_NAME=cast(self.vd.ds_current_row.te_rowset[0] as varchar);
                                  ttt := ttt || rtrim(inst.wa_home_url(), '/');
                                  http(sprintf(' (%s)', ttt));
                                ?>
                                <input type="hidden" name="app" value="<?V cast(self.vd.ds_current_row.te_rowset[0] as varchar) ?>"/>
                              </td>
                              <td>
                                http://
        <v:text xhtml_style="width:60%" name="t_site1" error-glyph="*" value="">
            <v:after-data-bind><![CDATA[
          declare host, domain, lhost, arr, tmp any;

          host := self.vd.ds_current_row.te_rowset[1];
          lhost := self.vd.ds_current_row.te_rowset[3];
          control.ufl_value := '';
          if (host <> '*ini*')
            {
              control.ufl_value := host;

              arr := split_and_decode (host, 0, '\0\0:');
              tmp := arr[0];

              domain := coalesce (
                (select min(WD_DOMAIN) from WA_DOMAINS where tmp like concat ('%.', WD_DOMAIN)),
            host
                );

              if (domain = host)
                {
                  self.l_domains1.ufl_value := '{My Own Domain}';
		  control.ufl_value := host;
	        }
              else
                {
                  self.l_domains1.ufl_value := domain;
                  control.ufl_value := substring (tmp, 1, length(tmp)-length (domain) - 1);
		  }
	    }
          else
            {
              self.l_domains1.ufl_value := '{Default Domain}';
            }

          ]]></v:after-data-bind>
        </v:text>
                                <input type="hidden" name="domain" value="<?V cast(self.vd.ds_current_row.te_rowset[1] as varchar) ?>"/>
                                <input type="hidden" name="lhost" value="<?V cast(self.vd.ds_current_row.te_rowset[3] as varchar) ?>"/>
            </td>
            <td>
        <v:data-list
            name="l_domains1" key-column="WD_DOMAIN" value-column="WD_DOMAIN"
            sql="select WD_DOMAIN from WA_DOMAINS where length (WD_LISTEN_HOST)
            union select '{Default Domain}' from WA_SETTINGS
            union select '{My Own Domain}' from WA_SETTINGS
            " >
            <v:after-data-bind><![CDATA[
          control.vs_set_selected ();
          ]]></v:after-data-bind>
        </v:data-list>
            </td>
                              <td>
                                /
                                <v:text name="t_path1" xhtml_size="10" error-glyph="*" value="--(trim(cast(self.vd.ds_current_row.te_rowset[2] as varchar), '/'))"/>
                                <input type="hidden" name="lpath" value="<?V cast(self.vd.ds_current_row.te_rowset[2] as varchar) ?>"/>
                              </td>
                              <td nowrap="nowrap" align="center">
                                <v:button name="vd_update_btn" action="submit" value="Update" style="url">
                                  <v:on-post>
                                    <v:script>
				      <![CDATA[
				        declare app, prefix, domain, path, old_path, old_host, old_ip, id any;

                                        app := get_keyword('app', self.vc_event.ve_params);
                                        if (app is null or app = '')
					  return;

                                        old_path := get_keyword('lpath', e.ve_params);
                                        old_host := get_keyword('domain', e.ve_params);
					old_ip := get_keyword('lhost', e.ve_params);

					prefix := self.t_site1.ufl_value;
					path := self.t_path1.ufl_value;

					if (strstr(prefix, 'http://') = 0)
					  {
                                            prefix := subseq(prefix, 7);
                                          }

					domain  := get_keyword ('l_domains1', e.ve_params);
					select WAI_ID into id from WA_INSTANCE where WAI_NAME = app;
					commit work;

                                        declare exit handler for sqlstate '*'
                                        {
					  self.vd.ds_current_row.te_editable := 1;
					  control.vc_parent.vc_enabled := 1;
                                          self.vc_is_valid := 0;
                                          self.vc_error_message := concat (__SQL_STATE,' ',__SQL_MESSAGE);
                                          rollback work;
                                          return;
                                        };


					WA_SET_APP_URL (id, path, prefix, domain, old_path, old_host, old_ip);

                                        http_request_status('HTTP/1.1 302 Found');
                                        http_header(sprintf('Location: vhost.vspx?sid=%s&realm=%s\r\n', self.sid , self.realm));
                                        return;
                                      ]]>
                                    </v:script>
                                  </v:on-post>
                                </v:button>
                                <v:button name="vd_cancel_btn" action="submit" value="Cancel" style="url"/>
                              </td>
                            </tr>
                          </v:form>
                        </v:template>
                        <v:template name="template8" type="add" name-to-remove="" set-to-remove="">
                          <v:form type="update" name="_add_">
                            <v:before-render>
                              control.vc_enabled := (select count(*) from WA_MEMBER where WAM_USER = self.u_id  and WAM_STATUS = 1);
                            </v:before-render>
                            <tr>
                              <td colspan="5">
                                &nbsp;<br/>&nbsp;
                              </td>
                            </tr>
                            <tr>
                              <th style="text-align: center" colspan="5">
                                Create new
                              </th>
                            </tr>
                            <tr>
                              <?vsp
                                {
                              ?>
                              <td valign="top">
                                <v:data-list
                                  xhtml_style="width:100"
                                  name="l_applications"
                                  sql="select WAI_NAME from WA_INSTANCE, WA_MEMBER where WAM_INST = WAI_NAME and WAM_STATUS = 1 and WAM_USER = self.u_id"
                                  key-column="WAI_NAME"
                                  value-column="WAI_NAME"
                                  column="WAI_NAME"
                                />
                              </td>
                              <td>
                                http://
                                <v:text name="t_site" xhtml_size="30" error-glyph="*">
				    <v:validator name="v_site" test="regexp" regexp="[\-0-9A-Za-z]."
					message="* You should provide a site prefix."/>
                                </v:text>
                              </td>
                              <td>
                                <v:data-list
                                    name="l_domains" key-column="WD_DOMAIN" value-column="WD_DOMAIN"
                                    sql="select WD_DOMAIN from WA_DOMAINS where length (WD_LISTEN_HOST)
                                    union select '{Default Domain}' from WA_SETTINGS
                                    union select '{My Own Domain}' from WA_SETTINGS"/>
                              </td>
                              <td>
                                /
                                <v:text name="t_path" xhtml_size="20" error-glyph="*">
                                </v:text>
                              </td>
                              <td nowrap="nowrap" align="center">
                                <v:button name="add_button" action="submit" value="Save" style="url">
                                  <v:on-post>
                                    <v:script>
                                      <![CDATA[
				        declare app, prefix, domain, path, id any;

                                        app := self.l_applications.ufl_value;
                                        if (app is null or app = '')
					  return;

                                        path := self.t_path.ufl_value;
					prefix := self.t_site.ufl_value;

					if (strstr(prefix, 'http://') = 0)
					  {
                                            prefix := subseq(prefix, 7);
                                          }

					domain  := get_keyword ('l_domains', e.ve_params);
					select WAI_ID into id from WA_INSTANCE where WAI_NAME = app;
					commit work;

                                        declare exit handler for sqlstate '*'
                                        {
                                          self.vc_is_valid := 0;
                                          self.vc_error_message := concat (__SQL_STATE,' ',__SQL_MESSAGE);
                                          rollback work;
                                          return;
                                        };


					WA_SET_APP_URL (id, path, prefix, domain);
                                        http_request_status('HTTP/1.1 302 Found');
                                        http_header(sprintf('Location: vhost.vspx?sid=%s&realm=%s\r\n', self.sid , self.realm));
                                      ]]>
                                    </v:script>
                                  </v:on-post>
                                </v:button>
                              </td>
                              <?vsp
                                }
                              ?>
                            </tr>
                          </v:form>
                        </v:template>
                        <vm:template type="browse">
                          <tr class="<?V case when mod(control.te_ctr, 2) = 0 then 'listing_row_odd' else 'listing_row_even' end ?>">
                            <td>
                              <v:label format="%s" value="--(cast((control.vc_parent as vspx_row_template).te_rowset[0] as varchar))" />
                              <?vsp
                                  declare dns_host varchar;
                                  declare inst web_app;
                                  dns_host := sys_stat('st_host_name');
				  dns_host := 'http://' || dns_host || ':' ||
				  	cfg_item_value(virtuoso_ini_path(), 'HTTPServer', 'ServerPort');
                                  select WAI_INST into inst from WA_INSTANCE where WAI_NAME=cast(self.vd.ds_current_row.te_rowset[0] as varchar);
                                  dns_host := dns_host || rtrim(inst.wa_home_url(), '/');
                                  http(sprintf(' (%s)', dns_host));
                              ?>
                            </td>
                            <td colspan="3">
        <v:url format="%s" value="" url="">
	    <v:after-data-bind><![CDATA[
          declare url any;
          declare host, path, host1, page, pars any;
          declare inst web_app;
	  declare _inst_name varchar;

	  _inst_name := (control.vc_parent as vspx_row_template).te_rowset[0];
          host1 := (control.vc_parent as vspx_row_template).te_rowset[1];
	  path := (control.vc_parent as vspx_row_template).te_rowset[2];
	  page := (control.vc_parent as vspx_row_template).te_rowset[5];
  	  --! following is a dirty hack
	  --! \todo change it to a accurate checking of 'noinheritance' flag of vhost
	  if (exists (select 1 from DB.DBA.WA_INSTANCE where WAI_NAME = _inst_name and WAI_TYPE_NAME = 'oWiki'))
	    page := '';
          path := rtrim (path, '/');

          host := host1;
          if (host = '*ini*')
	    host := sys_stat('st_host_name') || ':' || server_http_port ();

	  pars := sprintf ('?sid=%s&realm=%s', self.sid, self.realm);

          url := concat('http://', host, path, '/');

          control.ufl_value := url;
          control.vu_url := concat (url, page, pars);

          if ((control.vc_parent as vspx_row_template).te_rowset[4])
            {
              declare bt vspx_control;
              bt := control.vc_parent.vc_find_control ('vd_edit');
              bt.vc_enabled := 0;
              bt := control.vc_parent.vc_find_control ('vd_delete');
              bt.vc_enabled := 0;
            }
	    ]]></v:after-data-bind>
        </v:url>
                            </td>
                            <td>
                              <v:button action="simple" value="Edit" width="60" height="24" name="vd_edit" style="url" />
                              <v:button style="url" name="vd_delete" action="simple" value="Remove">
                                <v:on-post>
                                  <v:script>
                                    <![CDATA[
                                      self._app := cast((control.vc_parent as vspx_row_template).te_rowset[0] as varchar);
                                      self._host := cast((control.vc_parent as vspx_row_template).te_rowset[1] as varchar);
                                      self._lhost := cast((control.vc_parent as vspx_row_template).te_rowset[3] as varchar);
                                      self._path := cast((control.vc_parent as vspx_row_template).te_rowset[2] as varchar);
                                      self.remove_mode := 1;
                                      self.vc_data_bind(e);
                                    ]]>
                                  </v:script>
                                </v:on-post>
                              </v:button>
                            </td>
                          </tr>
                        </vm:template>
                      </vm:template>
                    </v:data-set>
                  </table>
                </div>
              </div>
            </v:template>
            <v:template name="main2" type="simple" condition="self.remove_mode = 1">
              <v:form name="event_form2" type="simple" method="POST" action="">
                <div class="box_noscroll" id="accesspoints">
                  <h2>Remove Confirmation of Application Endpoint</h2>
                  <table class="data">
                    <tr>
                      <td>Are you sure you want to remove the application endpoint
                        <?vsp
        if (self._host <> '*ini*')
                             http(concat(' http://', self._host, self._path));
        else
                             http(concat(' http://', sys_stat('st_host_name'), self._path));
                        ?>
                        for the application <?V self._app ?>?
                      </td>
                    </tr>
                    <tr>
                      <td align="center">
                        <v:button action="simple" name="cancel1" value="Cancel">
                          <v:on-post>
                            <v:script>
                              <![CDATA[
                                self.remove_mode := 0;
                                self.vc_data_bind(e);
                              ]]>
                            </v:script>
                          </v:on-post>
                        </v:button>
                        <v:button action="simple" name="rem" value="Remove">
                          <v:on-post>
                            <v:script>
                              <![CDATA[
                                declare _host, _path, app varchar;
                                declare inst web_app;
                                declare ssl_port varchar;
                                declare num integer;
                                self.remove_mode := 0;
                                app := self._app;
                                _host := self._host;
                                _path := self._path;
                                declare pos integer;
				declare _port, logical_path, physical_path varchar;

                                select WAI_INST into inst from WA_INSTANCE where WAI_NAME = app;

                                pos := strchr(_host, ':');
                                if (pos is null)
                                  _port := '80';
                                else
                                {
                                  _port := subseq(_host, pos + 1);
                                  _port := trim(_port);
                                  if (atoi(_port) = 80 or _port = '')
                                  {
                                    _port := '80';
                                    _host := subseq(_host, 0, pos);
                                  }
                                }

                                commit work;
                                declare exit handler for sqlstate '*' {
                                  self.vc_is_valid := 0;
                                  self.vc_error_message := concat (__SQL_STATE,' ',__SQL_MESSAGE);
                                  rollback work;
                                  return;
				};
                                -- XXX: do not remove them now, can break the other instances
                                -- Application additional URL
                                declare len, i integer;
                                declare cur_add_url any;
                                if (0)
                                {
                                  len := length(inst.wa_addition_urls());
                                  i := 0;
                                  while (i < len)
                                  {
                                    cur_add_url := aref(inst.wa_addition_urls(), i);
                                    VHOST_REMOVE(
                                      vhost=>_host,
                                      lhost=>self._lhost,
                                      lpath=>cur_add_url[2]);
                                    i := i + 1;
                                  }
                                }
                                -- Instance additional URL
                                len := length (inst.wa_addition_instance_urls(_path));
                                i := 0;
                                while (i < len)
                                {
                                  cur_add_url := aref(inst.wa_addition_instance_urls(_path), i);
                                  VHOST_REMOVE(
                                    vhost=>_host,
                                    lhost=>self._lhost,
                                    lpath=>cur_add_url[2]);
                                  i := i + 1;
                                }
                                -- Home URL
                                VHOST_REMOVE(vhost=>_host, lhost=>self._lhost, lpath=>_path);
                                http_request_status('HTTP/1.1 302 Found');
                                http_header(sprintf('Location: vhost.vspx?sid=%s&realm=%s\r\n', self.sid , self.realm));
                              ]]>
                            </v:script>
                          </v:on-post>
                        </v:button>
                      </td>
                    </tr>
                  </table>
                </div>
              </v:form>
            </v:template>
          </div>
        </div>
      </vm:body>
    </vm:pagewrapper>
  </vm:page>
</v:page>
