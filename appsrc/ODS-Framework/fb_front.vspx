<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="fb-user-home"
        xmlns:vm="http://www.openlinksw.com/vspx/ods/"
        xmlns:v="http://www.openlinksw.com/vspx/"
        style="index.xsl"
        fast-render="1"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <vm:page>
    <vm:header>
      <vm:title>
        <v:label value="--'Facebook integration to ODS'" render-only="1"/>
      </vm:title>
    </vm:header>
    <vm:pagewrapper>
      <vm:navigation-new on="site"/>
      <vm:subnavigation-new on="site"/>
      <v:variable name="_fb" type="DB.DBA.Facebook"/>
      <v:variable name="_fb_isset" type="integer"/>
      <v:variable name="_fb_usernotcorrespond" type="integer"/>
      <v:variable name="_sync" type="integer"/>
      <v:variable name="_ods_login_params" type="varchar"/>
      <v:variable name="_dhtml" type="any" />
      <vm:body>
        <v:before-data-bind>
        <![CDATA[
          declare _cookies any;
          _cookies:=vsp_ua_get_cookie_vec(lines);
        
          declare _http_query_str varchar;
          _http_query_str:=http_request_get ('QUERY_STRING');
          if (locate('auth_token',_http_query_str)>0)
          {
            declare _start,_end integer;
            _start:=locate('&auth_token',_http_query_str);
            _end:=locate('&',_http_query_str,_start+1);
            if(_start>0)
            {
              if(_end>0)
                 _http_query_str:=subseq(_http_query_str,0,_start-1)||subseq(_http_query_str,_end-1);
              else
                 _http_query_str:=subseq(_http_query_str,0,_start-1);
                
            }
            
            _http_query_str:=replace(_http_query_str,'auth_token','false_auth_token');
          }
          if(_http_query_str is not null and length(_http_query_str)>0)
          {
            declare _qstr_pos integer;
            _qstr_pos:=position ('_http_query_str', params);
            if(_qstr_pos>0)
            {
               params := vector_concat (subseq (params, 0, _qstr_pos-1),
                                        vector('_http_query_str',_http_query_str),
                                        subseq (params, _qstr_pos));

            }else
               params:=vector_concat(params, vector('_http_query_str',_http_query_str));
          } 

          
          self._ods_login_params:='';
          if(length(self.sid)>0)
            self._ods_login_params:='sid='||self.sid||'&realm='||coalesce(self.realm,'wa');

          declare _user_name varchar;
          declare _user_id integer;
          declare contatcst_import_res any;            

          
          _user_name:=null;
          _user_id:=null;
          
          if (length(self.sid)>0)
          {
              declare exit handler for not found {_user_name:=null;_user_id:=null;};
              select VS_UID,U_ID into _user_name,_user_id from DB.DBA.VSPX_SESSION, DB.DBA.SYS_USERS where VS_UID=U_NAME and VS_SID=self.sid;
          }     
            
          declare _ods_fb_id,_fb_user_assocexist integer;
          _ods_fb_id:=null;
          if(_user_id is not null)
          {
            declare exit handler for not found {_ods_fb_id:=null;};
            select WAUI_FACEBOOK_ID into _ods_fb_id from DB.DBA.WA_USER_INFO where WAUI_U_ID=_user_id;
          }
          
          
          declare fb_dba_options any;
          if(_get_ods_fb_settings(fb_dba_options)) --fb_dba_options is array of type (facebook_api_key,facebook_api_secret)
          {
             self._fb_isset:=1;
             self._fb:= new Facebook(fb_dba_options[0], fb_dba_options[1], params,lines);
          }
          else 
             self._fb_isset:=0;
         

          self._dhtml:=vector();
          
          declare _html,_src,_fb_user_fullname varchar;
          _fb_user_fullname:='';

          if(self._fb_isset)
          {
            
            declare _fb_user integer;
            
            if(length(_cookies)>0)
            { declare _cfb_id integer;
              declare _cfb_session varchar;
              
              _cfb_id:=0;
              _cfb_session:='';

              _cfb_id:=get_keyword('fb_user',_cookies,0);
              _cfb_session:=get_keyword('fb_session',_cookies,'');

              if(_cfb_id>0 and _cfb_session<>'' and (_cfb_id=_ods_fb_id or _ods_fb_id=0))
              {
               self._fb.set_user(_cfb_id,_cfb_session,now());
               _fb_user :=_cfb_id;
               goto skip_login;
                
              }

            }
            
            
            _fb_user := self._fb.require_login(0);
            
skip_login:;
           
            _fb_user_assocexist:=0;
            if(_fb_user is not null and _fb_user>0
               and
               exists (select 1 from DB.DBA.WA_USER_INFO where WAUI_FACEBOOK_ID=_fb_user)
              )
            {
               _fb_user_assocexist:=1;
            }


            -- change login when ODS user is logged but the facebook user that is associated is not the same as the one that is currently logged in.
           
            
            self._fb_usernotcorrespond:=0;
--            if(_ods_fb_id is not null and _ods_fb_id>0 and _fb_user>0 and _ods_fb_id<>_fb_user)

            if((_ods_fb_id is not null
                 and _ods_fb_id>0
                 and _fb_user>0
                 and _ods_fb_id<>_fb_user
               )
               or
               ( (_ods_fb_id is null or _ods_fb_id=0)
                 and _fb_user>0
                 and _fb_user_assocexist=1
               )
              )
            {
--              _fb_user := self._fb.require_login(1);
              self._fb_usernotcorrespond:=1;
            }
            
              declare _exp varchar;
              _exp:=cast (dateadd('hour',1,now()) as varchar);

            if(self._fb_usernotcorrespond)
            {
              http_header(concat (http_header_get (),
                                  sprintf ('Set-Cookie: fb_user=;%s path=/\r\n'||'Set-Cookie: fb_session=;%s path=/\r\n', _exp,_exp)
                                 )
                         );
            }else if( self._fb_usernotcorrespond=0 and _fb_user>0)
            {
              http_header(concat (http_header_get (),
                                  sprintf ('Set-Cookie: fb_user=%d;%s path=/\r\n'||'Set-Cookie: fb_session=%s;%s path=/\r\n', self._fb._user,_exp,self._fb.api_client.session_key,_exp)
                                 )
                         );
            } 


            if(get_keyword('assoc', params,null) is not null)
            {
            
               if (_fb_user<>0 and _user_name is not null)
               
            
               update DB.DBA.WA_USER_INFO set WAUI_FACEBOOK_ID=_fb_user where WAUI_U_ID=_user_id;
               
            }


            
            
            -- ODS autologin for ODS use that has signed in to FB but not to ODS and he has associated his ods user to facebook user
            if(_fb_user<>0 and _user_name is null)
            {
              declare exit handler for not found {_user_name:=null;_user_id:=null;};
              select WAUI_U_ID,U_NAME into _user_id,_user_name from DB.DBA.WA_USER_INFO, DB.DBA.SYS_USERS where WAUI_U_ID=U_ID and WAUI_FACEBOOK_ID=_fb_user;
        
              if( _user_id is not null)
              {
                 declare _sid varchar;
                 _sid := md5 (concat (datestring (now ()), http_client_ip (), http_path ()));
                 
                 insert into DB.DBA.VSPX_SESSION (VS_REALM, VS_SID, VS_UID, VS_STATE, VS_EXPIRY)
                                          values ('wa', _sid, _user_name,
                                                  serialize (vector ('vspx_user', _user_name)),
                                                  now());
                 http_request_status ('HTTP/1.1 302 Found');
                 http_header (sprintf('Location: %sfb_front.vspx?sid=%s&realm=wa\r\n', self.odsbar_ods_gpath, _sid));
                 return;
              }
            }
            
            declare _are_assoc int;
            _are_assoc:=0;

            if(exists (select 1 from DB.DBA.WA_USER_INFO where  WAUI_U_ID=_user_id and WAUI_FACEBOOK_ID=_fb_user))
               _are_assoc:=1;

            if(_fb_user<>0)
            {
              declare _res any;
            
            
              _res:=self._fb.api_client.users_getInfo(cast(_fb_user as varchar),'name,pic');
            
              if(_res is not null)
              {
                _src:=cast(xpath_eval('/users_getInfo_response/user/pic',_res) as varchar);
                if(length(_src)=0)
                   _src:=self.odsbar_ods_gpath ||'images/t_default.jpg';
                _html:='<img src="'||_src||'">'||
                       '<h3>'||cast(xpath_eval('/users_getInfo_response/user/name',_res) as varchar)||'</h3><br/>';
            
                 _fb_user_fullname:=cast(xpath_eval('/users_getInfo_response/user/name',_res) as varchar);
              }else
                _html:='Hello, user:'||cast(_fb_user as varchar)||'<br/>';
            

            
              self._dhtml:=vector_concat(self._dhtml,vector('user',_html));
            
              _res:=self._fb.api_client.friends_get();
            
            
              if(isarray(_res) and length(_res)>0)
              { 

                declare ff_ids varchar;
                ff_ids:='';
                declare i integer;
                i:=0;
                _html:='';
                while(i<length(_res))
                {
                 if(i<(length(_res)-1)) 
                    ff_ids:=ff_ids||_res[i]||',';
                 else
                    ff_ids:=ff_ids||_res[i];
                    
                 i:=i+1;
                }
            
                _res:=self._fb.api_client.users_getInfo(ff_ids,'name,pic_small');
            
                 if(_res is not null)
                 {
                 _html:='<div class="doc">';
            
                  _res:=xpath_eval('/users_getInfo_response/user',_res,0);
                  if(_res is not null and length(_res)>0)
                  {
                    i := 0;
                    while (i < length(_res))
                    {
                      _src:=xpath_eval('string(pic_small)',_res[i]);
                      if(length(_src)=0)
                        _src:=self.odsbar_ods_gpath ||'images/t_default.jpg';
            
                      _html:=_html|| '<div class="dock_column" style="text-align:center">'||
                                      '<img src="'||_src||'" >'||
                                      '<br/>'||
                                      xpath_eval('string(name)',_res[i])||'</div>';
                      i := i + 1;
                    }
                  }
                  _html:=_html||'</div>';
                 }
                
                
              }else
                _html:='You have no Facebook friends.';
             
              
              self._dhtml:=vector_concat(self._dhtml,vector('friends',_html));
            
              

              if(get_keyword('import', params,'')='create_import')
              {
                 declare _inst_id integer; 
                 
                 _inst_id:=DB.DBA.ODS_CREATE_NEW_APP_INST ('AddressBook', _user_name||'\'s AddressBook', _user_name);
                 
                 sync_fbf_odsab(self._fb,_user_id,_fb_user);
              }

              if(get_keyword('import', params,'')='import')
                 sync_fbf_odsab(self._fb,_user_id,_fb_user);
                 
              self._sync:=0;
              if(get_keyword('import', params,'')='update')
              {
                 self._sync:=1;
                 declare syncdata_jsarrstr varchar;
                 syncdata_jsarrstr:='';
                 syncdata_jsarrstr:=get_syncdata_arr(self._fb,_user_id);
                 if(length(syncdata_jsarrstr))
                  self._dhtml:=vector_concat(self._dhtml,vector('syncdata_jsarrstr',syncdata_jsarrstr));

              }

--                 sync_fbf_odsab(self._fb,_user_id,_fb_user,1);


              contatcst_import_res:=sync_fbf_odsab(self._fb,_user_id,_fb_user,0,1);
             
            }
             

            _html:='';


            if(_user_id is null or _fb_user is null or _fb_user=0)
            {
            if(_user_id is not null)
               _html:=_html||'You are logged as ODS user: '||_user_name||'.';
            else
               _html:=_html||'You are not logged as ODS user!';

            if(_fb_user<>0)   
               _html:=_html||'<br/><br/>You are logged as Facebook user: '||_fb_user_fullname||'.';

               _html:=_html||'<br/>';
            }

            if(_user_id is not null and _fb_user>0 and _are_assoc=0)
            {
               _html:=_html||'<br/>'||_user_name||' and '||_fb_user_fullname||' are not <a id="a_assoc_1" style="text-decoration: underline;cursor: pointer;">associated</a>.<br/> <a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx?assoc=yes',self._ods_login_params)||'">Do you want to associate them?</a>';
           
            }else if(_user_id is not null and _fb_user<>0 and _are_assoc=1)
               _html:=_html||'<br/>'||_user_name||' and '||_fb_user_fullname||' are <a id="a_assoc_2" style="text-decoration: underline;cursor: pointer;">associated</a>.';
            else if(_user_id is not null and _fb_user=0)
               _html:=_html||'';
            else if(_user_id is null and _fb_user<>0)
               _html:=_html||'<br/><a href="'||self.odsbar_ods_gpath ||'register.vspx?reguid='||lcase(replace(_fb_user_fullname,' ',''))||'&fb_id='||cast(_fb_user as varchar)||'&URL='||self.odsbar_ods_gpath ||'fb_front.vspx">Create ODS user and associate it to:'||_fb_user_fullname||'</a>';


            if(isarray(contatcst_import_res) and contatcst_import_res[0]=-1 and wa_check_package ('addressbook') and _user_id is not null)
               _html:=_html||'<br/><br/><a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx?import=create_import',self._ods_login_params)||'">Create ODS addressbook and import Facebook contacts.</a>';
            
--               _html:=_html||'<br/><a href="'||self.odsbar_ods_gpath ||wa_expand_url('index_inst.vspx?wa_name=AddressBook',self._ods_login_params)||'">Create ODS addressbook if you want to import Facebook contacts.</a>';

            if(isarray(contatcst_import_res) and contatcst_import_res[0]=1 and contatcst_import_res[3]=0)
               _html:=_html||'<br/><br/>You have no Facebook contacts that may be imported to ODS address book.';

            if(isarray(contatcst_import_res) and contatcst_import_res[0]=0 and contatcst_import_res[1]>0)
              _html:=_html||'<br/><br/>You have '||cast(contatcst_import_res[1] as varchar)||' Facebook contact'||(case when contatcst_import_res[1]>1 then 's' else '' end)||
                            ' that may be imported to your <a href="'||wa_expand_url('/addressbook/'||cast(contatcst_import_res[4] as varchar)||'/home.vspx',self._ods_login_params)||'">ODS address book</a>. <a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx?import=import',self._ods_login_params)||'">Import</a>';

            if(isarray(contatcst_import_res) and contatcst_import_res[0]=0 and contatcst_import_res[2]>0)
              _html:=_html||'<br/><br/>You have '||cast(contatcst_import_res[2] as varchar)||' Facebook contact'||(case when contatcst_import_res[2]>1 then 's' else '' end)||
                            ' that may be updated in your <a href="'||wa_expand_url('/addressbook/'||cast(contatcst_import_res[4] as varchar)||'/home.vspx',self._ods_login_params)||'">ODS address book</a>. <a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx?import=update',self._ods_login_params)||'">Synchronize</a>';

            if(isarray(contatcst_import_res) and contatcst_import_res[0]=1 and contatcst_import_res[2]>0)
              _html:=_html||'<br/><br/>You have '||cast(contatcst_import_res[2] as varchar)||' Facebook contact'||(case when contatcst_import_res[2]>1 then 's' else '' end)||
                            ' that may be updated in your <a href="'||wa_expand_url('/addressbook/'||cast(contatcst_import_res[4] as varchar)||'/home.vspx',self._ods_login_params)||'">ODS address book</a>. <a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx?import=update',self._ods_login_params)||'">Synchronize</a>';
            
            self._dhtml:=vector_concat(self._dhtml,vector('ods_user',_html));
          

         } 
        ]]>
        </v:before-data-bind>
        <v:login/>

<script type="text/javascript">
<![CDATA[

function dd(txt){
  if(typeof console == 'object'){
    console.debug(txt);
  }
}

 var cssDockNode = document.createElement('link');
 cssDockNode.type = 'text/css';
 cssDockNode.rel = 'stylesheet';
 cssDockNode.href = '<?V self.odsbar_ods_gpath ?>dock.css';
 document.getElementsByTagName("head")[0].appendChild(cssDockNode);


ods_bar_state_set('min');
ODSInitArray.push(fbInitPrepare);

function fbInitPrepare()
{
  OAT.Loader.loadFeatures(["dock","animation","ajax2","xml"],function(){setTimeout(fbInit,60)});
  return;
}

var colors = ["#99c","#cc9","#c8c","#9c9"];
var dock = false;
var counter = 0;
var urls = {};

function dockAdd(win_title)
{

	var container = OAT.Dom.create("div");
  container.setAttribute('id','dockwin_'+counter+'container');

	var bodyDiv = OAT.Dom.create("div");
  bodyDiv.setAttribute('id','dockwin_'+counter+'_body');
	var subDiv = OAT.Dom.create("div");
  subDiv.setAttribute('id','dockwin_'+counter+'_sub');

	var color = colors[counter % colors.length];
	var win = dock.addObject(counter % dock.columns.length,container,{color:color,title:win_title,titleColor:"#000"});
  win.id='dockwin_'+counter;

	OAT.Dom.append([container,bodyDiv,subDiv]);

	counter++;

  return win;
}

function assignPopup(element,textContent)
{
	var elm = $(element);
	var popup = OAT.Dom.create("div",{},"popup");
	OAT.Style.opacity(popup,0);
	popup.innerHTML = textContent;
	OAT.Dom.hide(popup);
	document.body.appendChild(popup);
	
	var a1 = new OAT.AnimationOpacity(popup,{opacity:1});
	var a2 = new OAT.AnimationOpacity(popup,{opacity:0});
	
	OAT.MSG.attach(a2.animation,OAT.MSG.ANIMATION_STOP,function(){ /* hide after opacity gets to 0 */
		OAT.Dom.hide(popup);
	});
	
	OAT.Event.attach(elm,"mouseover",function(event) { /* start displaying on mouseover */
		a2.stop();
		
		var position = OAT.Event.position(event);
		popup.style.left = position[0]+"px";
		popup.style.top = (position[1]+10)+"px";
		
		OAT.Dom.show(popup);
		a1.start();
	});

	OAT.Event.attach(elm,"mouseout",function(event) { /* start hiding on mouseout */
		a1.stop();
		a2.start();
	});
}


function ajaxUpdate(abID,odsCID,fbCID,dockObj)
{
  var data='sid=<?Vself.sid?>&'+
  	       'realm=<?Vself.realm?>&'+
  	       'instid='+abID+'&'+
  	       'fb_userid=<?Vself._fb._user?>&'+
  	       'fb_session=<?Vself._fb.api_client.session_key?>&'+
  	       'fb_cid='+fbCID+'&'+
  	       'ods_cid='+odsCID;
  
  var options = {
  	auth:OAT.AJAX.AUTH_BASIC,
  	onerror:function(request) { dd(request.getStatus()); }
  }
  var callback = function(xmlString) {
                                       var xmlDoc = OAT.Xml.createXmlDoc(xmlString);
                                       var res_code_xml = OAT.Xml.xpath(xmlDoc, '//res_code', {});
                                       if(res_code_xml.length)
                                          var res_code = OAT.Xml.textValue(res_code_xml[0]);
                                      
                                       if(res_code==0)
                                       {
                                          var i=5;
                                          setInterval(function(){
                                                                 if(i>0)
                                                                    $(dockObj.id+'_body').innerHTML='Syncronization successfull. Autoclose in '+i+' seconds';
                                                                  else
                                                                    dockObj.dock.removeObject(dockObj);
                                                                  i--;
                                                                }, 1000);
                                       
                                       }
                                       else
                                       {
                                        var err_msg_xml  = OAT.Xml.xpath(xmlDoc, '//err_msg', {});
                                        var err_msg='';
                                        if(err_msg_xml.length)
                                           err_msg = OAT.Xml.textValue(err_msg_xml[0]);
                                        $(dockObj.id+'_body').innerHTML='Syncronization unsuccessfull due to:'+err_msg

                                       }
                                     };

  OAT.AJAX.GET("facebook_helper.vsp", data, callback, options);
}
]]>
</script>

<v:template type='simple' enabled='--case when self._fb_isset=1 and self._fb_usernotcorrespond=0  and self._sync=0 then 1 else 0 end'> 
<script type="text/javascript">
function fbInit()
{

 dock = new OAT.Dock('fbDock',3);
 
 var user_win=dockAdd('Facebook User Info');
 var friends_win=dockAdd('User Facebook Friends Info');
 var ods_win=dockAdd('ODS User Info');

 $(user_win.id+'_body').innerHTML='<?vsp http(get_keyword('user',self._dhtml,'')); ?>';
 $(friends_win.id+'_body').innerHTML='<?vsp http(get_keyword('friends',self._dhtml,'')); ?>';
 $(ods_win.id+'_body').innerHTML='<?vsp http(get_keyword('ods_user',self._dhtml,'')); ?>';


 var assoc_txt = 'logically connected in ODS';
 assignPopup("a_assoc_1",assoc_txt);
 assignPopup("a_assoc_2",assoc_txt);

}

</script>
<div id="fbDock"></div>

</v:template>

<v:template type='simple' enabled='--(case when self._fb_isset and self._sync then 1 else 0 end)'>

<script type="text/javascript">
<![CDATA[


var _syncContactsArr= <?vsp http(get_keyword('syncdata_jsarrstr',self._dhtml,'')); ?> ;

function fbInit()
{

 dock = new OAT.Dock('fbDock',3);

 var win_info=dockAdd('Facebook');
 $(win_info.id+'_body').innerHTML='<?vsp http('<a href="'||self.odsbar_ods_gpath ||wa_expand_url('fb_front.vspx',self._ods_login_params)||'">Back to ODS - Facebook</a>'); ?>';

 for (var i=0;i<_syncContactsArr.length;i++)
 {
   createImportObjDock(_syncContactsArr[i]);
 }

}

function createImportObjDock(_syncData)
{
   var _dock_obj=dockAdd('Sychronize '+_syncData._name);

   var _parent_div=$(_dock_obj.id+'_body')
 
  _parent_div.appendChild(OAT.Dom.text('Use Facebook friend '));
  
   var _fb_link=OAT.Dom.create('a');
   _fb_link.href=_syncData.fb_href;
   _fb_link.target='_blank';
   _fb_link.appendChild(OAT.Dom.text(_syncData._name));
  
  _parent_div.appendChild(_fb_link);
  _parent_div.appendChild(OAT.Dom.text(' to '));

  _parent_div.appendChild(OAT.Dom.create("br"));

   var _radio=OAT.Dom.create("input");
   _radio.type='radio';
   _radio.name=_dock_obj.id+'_syncgrp';
   _radio.value='0';
   if(_syncData.ods_contacts.length==1)
      _radio.checked=true;
   
   OAT.Dom.attach(_radio,"click",function(){$(_dock_obj.id+'_syncbtn').value='Dismiss';$(_dock_obj.id+'_syncbtn').c_ods_cid=0;});

   _parent_div.appendChild(_radio);
   _parent_div.appendChild(OAT.Dom.text('Do nothing'));

   _parent_div.appendChild(OAT.Dom.create("br"));

  for(var ii=0;ii < _syncData.ods_contacts.length;ii++)
  {
   var _radio=OAT.Dom.create("input");
   _radio.type='radio';
   _radio.name=_dock_obj.id+'_syncgrp';
   _radio.value=_syncData.ods_contacts[ii].ods_cid;
   OAT.Dom.attach(_radio,"click",function(){$(_dock_obj.id+'_syncbtn').value='Syncronize';$(_dock_obj.id+'_syncbtn').c_ods_cid=_radio.value;});

   if(ii==0 && _syncData.ods_contacts.length>1)
    _radio.checked=true;

   _parent_div.appendChild(_radio);
   _parent_div.appendChild(OAT.Dom.text(' update ODS contact '));

   var _ods_link=OAT.Dom.create('a');
   _ods_link.href=_syncData.ods_contacts[ii].ods_href;
   _ods_link.target='_blank';
   _ods_link.appendChild(OAT.Dom.text(_syncData.ods_contacts[ii].ods_name));

   _parent_div.appendChild(_ods_link);

   _parent_div.appendChild(OAT.Dom.create("br"));

  }

  _parent_div.appendChild(OAT.Dom.create("br"));

   var _button=OAT.Dom.create("input");
   _button.type='button';
   if(_syncData.ods_contacts.length==1)
      _button.value='Dismiss';
   else
      _button.value='Syncronize';

   _button.id=_dock_obj.id+'_syncbtn';
   _button.c_ods_cid=0;
   _button.style.width='120px';

    
   OAT.Dom.attach(_button,"click",function(){if($(_dock_obj.id+'_syncbtn').value=='Dismiss')
                                              _dock_obj.dock.removeObject(_dock_obj);
                                             else
                                               ajaxUpdate(_syncData.odsab_instid,parseInt(this.c_ods_cid),_syncData.fb_id,_dock_obj)
                                              
                                            });
   
  _parent_div.appendChild(_button);
  
  return;
}



]]>
</script>
<div id="fbDock"></div>

</v:template>

<v:template type='simple' enabled='--(1-self._fb_isset)'>
<div style="padding:10px;">ODS is not set up to use Facebook. Please contact ODS administrator.</div>
</v:template>

<v:template type='simple' enabled='--self._fb_usernotcorrespond'>
 <?vsp
   http_get ('http://www.facebook.com/logout.php',null, 'POST', 'User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)', 'confirm=1'); --,'127.0.0.1:8888'
 ?>

 <div style="padding:10px;">Facebook user that is currently logged in do not correspond to your ODS user.<br/> Please <a href="<?Vself._fb.get_login_url(self._fb.current_url(), self._fb.in_frame(),1)?>">login</a> as Facebook user that corresponds to your ODS user.</div>
 
</v:template>

      </vm:body>
    </vm:pagewrapper>
  </vm:page>
</v:page>

