<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="user_edit_personal"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
  fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/"
  style="index.xsl"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:vm="http://www.openlinksw.com/vspx/ods/"
  xmlns:v="http://www.openlinksw.com/vspx/">

  <v:method name="ldap2_value" arglist="inout data any">
    <![CDATA[
      return case when isstring (data) then data else data[0] end;
	  ]]>
	</v:method>

  <v:method name="ldap2_pattern" arglist="in maps any, in pattern any">
    <![CDATA[
      declare N integer;

      for (N := 0; N < length (maps); N := N + 2)
        if (maps [N+1] = pattern)
          return maps [N];

      return '';
	  ]]>
	</v:method>

  <v:method name="ldap2_data" arglist="inout data any, in pattern any">
    <![CDATA[
      declare M integer;

      for (M := 0; M < length (data); M := M + 2)
        if (data[M] = pattern)
          return self.ldap2_value (data[M+1]);

      return null;
	  ]]>
	</v:method>

  <v:method name="check_title" arglist="inout title any">
    <![CDATA[
      declare M integer;
      declare V any;

      V := vector ('Mr', 'Mrs', 'Dr', 'Ms');
      for (M := 0; M < length (V); M := M + 1)
        if (lcase (title) like (lcase (V[M])|| '%'))
          return V[M];

      return '';
	  ]]>
	</v:method>

  <v:method name="vector_contains" arglist="in aVector any, in aValue varchar">
    <![CDATA[
      declare N integer;

      for (N := 0; N < length(aVector); N := N + 1)
        if (aValue = aVector[N])
          return 1;
      return 0;
	  ]]>
	</v:method>

  <v:method name="favorites2json" arglist="">
    <![CDATA[
      declare fID, fType, fItems any;
      declare favorites vector;

      favorites := vector ();
      fID := 0;
      fType := '';
      fItems := vector ();
      for (select WUF_ID, WUF_TYPE, WUF_LABEL, WUF_URI from WA_USER_FAVORITES where WUF_U_ID = self.u_id order by WUF_TYPE) do
      {
        if (fType <> WUF_TYPE)
        {
          if (fType <> '')
            favorites := vector_concat (favorites, vector (vector_concat (self.jsonObject(), vector ('id', cast (fID as varchar), 'class', fType, 'items', fItems))));
          fID := fID + 1;
          fType := WUF_TYPE;
          fItems := vector ();
        }
        fItems := vector_concat (fItems, vector (vector_concat (self.jsonObject(), vector ('id', cast (WUF_ID as varchar), 'label', WUF_LABEL, 'uri', WUF_URI))));
      }
      if (length (fItems))
        favorites := vector_concat (favorites, vector (vector_concat (self.jsonObject(), vector ('id', cast (fID as varchar), 'class', fType, 'items', fItems))));
      return favorites;
	  ]]>
	</v:method>

  <v:method name="savePersonal" arglist="">
    <![CDATA[
      declare lat, lng any;
      declare params, _arr any;

      params := self.vc_page.vc_event.ve_params;
      self.hstate := get_keyword ('h_state', params);
      if (exists (select 1 from WA_USER_INFO where WAUI_U_ID <> self.u_id and WAUI_NICK = self.nickn.ufl_value))
      {
        self.nick := WA_MAKE_NICK (self.nickn.ufl_value);
        self.nickn.vc_data_bind (self.vc_page.vc_event);
        self.vc_error_message := 'This nick already used please enter another or use suggested';
        self.vc_is_valid := 0;
        return;
      }
      if (exists (select 1 from SYS_USERS where U_E_MAIL = self.regmail.ufl_value) and exists (select 1 from WA_SETTINGS where WS_UNIQUE_MAIL = 1))
      {
        self.vc_error_message := 'This e-mail address is already registered.';
        self.vc_is_valid := 0;
        return;
      }
      _arr := WA_STR_PARAM(params, 'sel_');
      WA_USER_VISIBILITY (self.u_name, _arr, 2);

      declare tag varchar;
      declare tid integer;

      tag := WA_TAG_PREPARE(self.s_tag.ufl_value);
      if (not WA_VALIDATE_TAGS(tag))
      {
        self.vc_error_message := 'The Tags expression is not valid.';
        self.vc_is_valid := 0;
        return;
      }
      -- public tags
      WA_USER_TAG_SET(http_nobody_uid(), self.u_id, tag);

      declare dt datetime;

      dt := null;
      if (self.regbdate.ufl_value is not null and self.regbdate.ufl_value <> '')
      {
        declare exit handler for sqlstate '*'
        {
          self.vc_is_valid := 0;
          self.vc_error_message := sprintf ('An invalid date (%s) is specified', self.regbdate.ufl_value);
          return;
        };
        dt := stringdate (self.regbdate.ufl_value);
      }

      -- before to edit rest of fields, set the org(anization) flag
      self.is_org := self.cb_org.ufl_selected;
      update WA_USER_INFO set WAUI_IS_ORG = self.cb_org.ufl_selected where WAUI_U_ID = self.u_id;

      declare rc,rc_org, pwd1 any;
      pwd1 := (select pwd_magic_calc (U_NAME, U_PASSWORD, 1) from DB.DBA.SYS_USERS where U_NAME = 'dav');
      rc := 0;
      rc_org := 0;

      declare p_ext any;
      p_ext := split_and_decode(self.s_photo.ufl_value,0,'\0\0.');

      if (p_ext is not null and p_ext[length(p_ext)-1] is not null and lcase(p_ext[length(p_ext)-1]) not in ('jpg','png','gif'))
      {
        self.vc_error_message := ' Invalid image type. Please use jpg,png or gif for browser compatibility.';
        self.vc_is_valid := 0;
        self.previe_path:='';
        return;
      }

      if (get_keyword ('up_photo', params, '') <> '' or (self.previe_path <> '' and self.s_photo.ufl_value <> ''))
      {
        declare dir, p_path, p_path_org, dotpos, up_cont any;
        declare p_path_size2 any;

        dir := rtrim (DAV_HOME_DIR (self.u_name), '/')||'/wa/images/';
        up_cont := get_keyword ('up_photo', params);

        p_path := self.s_photo.ufl_value;
        if (self.s_photo.ufl_value not like '/%')
          p_path := dir || p_path;

        dotpos := REGEXP_INSTR(self.s_photo.ufl_value,'\..{3}\$')-1;
        p_path_org := subseq (self.s_photo.ufl_value,0, dotpos) || '_org' || subseq (self.s_photo.ufl_value, dotpos);
        p_path_size2 := subseq (self.s_photo.ufl_value,0, dotpos) || '_size2' || subseq (self.s_photo.ufl_value, dotpos);
        if (self.s_photo.ufl_value not like '/%')
      {
          p_path_org := dir || p_path_org;
          p_path_size2 := dir || p_path_size2;
        }
        rc := DAV_MAKE_DIR (dir, self.u_id, http_admin_gid (), '110100100N');

        if (up_cont <> '')
        {
          rc := DAV_RES_UPLOAD (p_path, up_cont, '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);
          rc_org := DAV_RES_UPLOAD (p_path_org, up_cont, '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);
        }
        else if (self.previe_path <> '' and self.s_photo.ufl_value <> '')
                                {
          rc := DB.DBA.DAV_COPY (self.previe_path, p_path, 1, '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);
          self.previe_path := '';
                          }

        if (rc < 0 or rc_org < 0)
                                {
          self.vc_is_valid := 0;
          self.vc_error_message := DAV_PERROR (rc);
                          }
        if (rc > 0 or rc_org > 0)
        {
          declare exit handler for sqlstate '*'
          {
            sql_warning (__SQL_STATE, 'UIEP1', __SQL_MESSAGE);
          };
          declare img,thumb,thumb_size2 any;
          img := null; thumb := null; thumb_size2 := null;
          select blob_to_string (RES_CONTENT) into img from WS.WS.SYS_DAV_RES where RES_ID = rc;

          if (img is not null)
            thumb := WA_MAKE_THUMBNAIL_1 (img);
          thumb_size2 := WA_MAKE_THUMBNAIL_1 (img, 115, 160);

          if (thumb is not null)
            DAV_RES_UPLOAD (p_path, thumb, '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);

          if (thumb_size2 is not null)
            DAV_RES_UPLOAD (p_path_size2, thumb_size2, '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);
        }
        if (p_path like '/DAV/%')
          p_path := subseq (p_path, 4);
        WA_USER_EDIT (self.u_name, 'WAUI_PHOTO_URL', p_path);
      }
      else
                                {
        if (get_keyword ('s_photo', params, '') = '')
          WA_USER_EDIT (self.u_name, 'WAUI_PHOTO_URL', '');
                          }
      if (get_keyword ('up_audio', params, '') <> '')
                      {
        declare dir, p_path any;
        dir := rtrim (DAV_HOME_DIR (self.u_name), '/')||'/wa/media/';

        p_path := self.s_audio.ufl_value;
        if (self.s_audio.ufl_value not like '/%')
          p_path := dir|| p_path;

                     rc := DAV_MAKE_DIR (dir, self.u_id, http_admin_gid (), '110100100N');
        rc := DAV_RES_UPLOAD (p_path, get_keyword ('up_audio', params), '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);

                     if (rc < 0)
                     {
                       self.vc_is_valid := 0;
                       self.vc_error_message := DAV_PERROR (rc);
                    }
        WA_USER_EDIT (self.u_name, 'WAUI_AUDIO_CLIP', p_path);
                }
      if (self.is_org)
                  {
        dt := null;
        self.regtitle.ufl_value := null;
        self.f_name.ufl_value := null;
        self.l_name.ufl_value := null;
        self.regender.ufl_value := null;
        self.m_sign.ufl_value := null;
        self.e_fbook.ufl_value := null;
        self.e_fmusic.ufl_value := null;
        self.e_fmovie.ufl_value  := null;
                }

      WA_USER_EDIT (self.u_name, 'WAUI_TITLE', self.regtitle.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_FIRST_NAME', self.f_name.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_LAST_NAME', self.l_name.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_FULL_NAME', self.full_name.ufl_value);
      WA_USER_EDIT (self.u_name, 'E_MAIL', self.regmail.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_GENDER', self.regender.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_BIRTHDAY', dt);

      WA_USER_EDIT (self.u_name, 'WAUI_HADDRESS1', self.h_address1.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HADDRESS2', self.h_address2.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HCODE', self.h_code.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HCITY', self.h_city.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HSTATE', self.hstate);
      WA_USER_EDIT (self.u_name, 'WAUI_HCOUNTRY', self.h_country.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HTZONE', self.h_tzone.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HPHONE', self.h_phone.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_HMOBILE', self.h_mobile.ufl_value);

      WA_USER_EDIT (self.u_name, 'WAUI_ICQ', self.u_icq.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_SKYPE', self.u_skype.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_AIM', self.u_aim.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_YAHOO', self.u_yahoo.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_MSN', self.u_msn.ufl_value);

      lat := null;
      lng := null;
      if (length (self.h_lat.ufl_value) and length (self.h_lng.ufl_value))
                {
        lat := atof (self.h_lat.ufl_value);
        lng := atof (self.h_lng.ufl_value);
      }
      WA_USER_EDIT (self.u_name, 'WAUI_LAT', lat);
      WA_USER_EDIT (self.u_name, 'WAUI_LNG', lng);

      WA_USER_EDIT (self.u_name, 'WAUI_MSIGNATURE', self.m_sign.ufl_value);

      -- WA_USER_EDIT (self.u_name, 'WAUI_FOAF', self.e_foaf.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_SUMMARY', self.s_summ.ufl_value);
      WA_USER_EDIT (self.u_name, 'WAUI_WEBPAGE', self.w_page.ufl_value);

      WA_USER_EDIT (self.u_name, 'WAUI_SEARCHABLE', self.in_search.ufl_selected);
      WA_USER_EDIT (self.u_name, 'WAUI_SHOWACTIVE', self.show_active.ufl_selected);

      declare N, id integer;
      declare suffix, suffix2, tmp, tmp_a, tmp_b, tmp_e, tmp_m, tmp_f varchar;
      declare IDc, IDd, IDf, V, parts any;

      tmp_a := '';
      tmp_b := '';
      tmp_e := '';
      tmp_m := '';
      tmp_f := '';
      IDc := vector ();
      IDd := vector ();
      IDf := vector ();
      V := vector ('Book', 'text/*', 'Image', 'image/*', 'Music', 'audio/*', 'Video', 'video/*');
      for (N := 0; N < length (params); N := N + 4)
                  {
        if ((params [N] like 'a_fld_1_%') and (trim (params [N+1]) <> ''))
                    {
          suffix := replace (params [N], 'a_fld_1_', '');
          tmp_a := tmp_a || trim (params [N+1]) || ';' || trim (get_keyword ('a_fld_2_'||suffix, params, '')) || '\n';
                  }
        else if ((params [N] like 'b_fld_1_%') and (trim (params [N+1]) <> ''))
                      {
          suffix := replace (params [N], 'b_fld_1_', '');
          tmp_b := tmp_b || trim (params [N+1]) || ';' || trim (get_keyword ('b_fld_2_'||suffix, params, '')) || '\n';
                      }
        else if ((params [N] like 'c_fld_1_%') and (trim (params [N+1]) <> ''))
                      {
          suffix := replace (params [N], 'c_fld_1_', '');
          id := cast (get_keyword ('c_fld_0_'||suffix, params, '-1') as integer);
          if (id <> -1)
                        {
            update WA_USER_OL_ACCOUNTS
               set WUO_NAME = trim (params [N+1]),
                   WUO_URL = trim (get_keyword ('c_fld_2_'||suffix, params, ''))
             where WUO_ID = id;
            IDc := vector_concat (IDc, vector (id));
                        }
                      }
        else if ((params [N] like 'd_fld_1_%') and (trim (params [N+1]) <> ''))
                            {
          suffix := replace (params [N], 'd_fld_1_', '');
          id := cast (get_keyword ('d_fld_0_'||suffix, params, '-1') as integer);
          if (id <> -1)
          {
            update WA_USER_BIOEVENTS
               set WUB_EVENT = trim (params [N+1]),
                   WUB_DATE = trim (get_keyword ('d_fld_2_'||suffix, params, '')),
                   WUB_PLACE = trim (get_keyword ('d_fld_3_'||suffix, params, ''))
             where WUB_ID = id;
            IDd := vector_concat (IDd, vector (id));
                            }
        }
        else if (regexp_like(params[N], 'f_prop_([0-9]+)_fld_1_([0-9]+)') and (trim (params[N+1]) <> ''))
        {
          parts := regexp_parse('f_prop_([0-9]+)_fld_1_([0-9]+)', params [N], 0);
          suffix := subseq (params[N], parts[2], parts[3]);
          suffix2 := subseq (params[N], parts[4], parts[5]);
          id := cast (get_keyword ('f_prop_'||suffix||'_fld_3_'||suffix2, params, '-1') as integer);
          if (id <> -1)
          {
            tmp := get_keyword ('f_fld_3_'||suffix, params);
            update WA_USER_FAVORITES
                set WUF_TYPE = get_keyword_ucase (tmp, V, tmp),
                    WUF_LABEL = trim (params[N+1]),
                    WUF_URI = trim (get_keyword ('f_prop_'||suffix||'_fld_2_'||suffix2, params, ''))
             where WUF_ID = id;
            IDf := vector_concat (IDf, vector (id));
          }
        }
        else if ((params [N] like 'e_fld_1_%') and (trim (params [N+1]) <> ''))
                         {
          suffix := replace (params [N], 'e_fld_1_', '');
          tmp_e := tmp_e || trim (params [N+1]) || '\n';
        }
        else if ((params [N] like 'm_fld_1_%') and (trim (params [N+1]) <> ''))
                           {
          suffix := replace (params [N], 'm_fld_1_', '');
          tmp_m := tmp_m || trim (params [N+1]) || ';' || trim (get_keyword ('m_fld_2_'||suffix, params, '')) || '\n';
                           }
                         }
      self.interests := tmp_a;
      self.interestTopics := tmp_b;
      self.efoaf := tmp_e;
      self.messaging := tmp_m;
      WA_USER_EDIT (self.u_name, 'WAUI_INTERESTS', tmp_a);
      WA_USER_EDIT (self.u_name, 'WAUI_INTEREST_TOPICS', tmp_b);
      WA_USER_EDIT (self.u_name, 'WAUI_FOAF', tmp_e);
      WA_USER_EDIT (self.u_name, 'WAUI_MESSAGING', tmp_m);

      for (select WUO_ID as _id from WA_USER_OL_ACCOUNTS where WUO_U_ID = self.u_id and WUO_TYPE = 'P') do
                    {
        for (N := 0; N < length (IDc); N := N + 1)
        {
          if (IDc[N] = _id)
            goto _exit;
                    }
        delete from WA_USER_OL_ACCOUNTS where WUO_ID = _id;
      _exit:;
      }
      for (N := 0; N < length (params); N := N + 4)
                    {
        if ((params [N] like 'c_fld_1_%') and (trim (params [N+1]) <> ''))
        {
          suffix := replace (params [N], 'c_fld_1_', '');
          id := cast (get_keyword ('c_fld_0_'||suffix, params, '-1') as integer);
          if ((id = -1) and (trim (get_keyword ('c_fld_2_'||suffix, params, '')) <> ''))
          {
            insert into WA_USER_OL_ACCOUNTS ( WUO_NAME, WUO_URL, WUO_U_ID, WUO_TYPE)
              values (trim (params [N+1]), trim (get_keyword ('c_fld_2_'||suffix, params, '')), self.u_id, 'P');
                    }
              }
                  }
      for (select WUB_ID as _id from WA_USER_BIOEVENTS where WUB_U_ID = self.u_id) do
    {
        for (N := 0; N < length (IDd); N := N + 1)
                  {
          if (IDd[N] = _id)
            goto _exit2;
                 }
        delete from WA_USER_BIOEVENTS where WUB_ID = _id;
      _exit2:;
      }
      for (N := 0; N < length (params); N := N + 4)
                  {
        if ((params [N] like 'd_fld_1_%') and (trim (params [N+1]) <> ''))
                    {
          suffix := replace (params [N], 'd_fld_1_', '');
          id := cast (get_keyword ('d_fld_0_'||suffix, params, '-1') as integer);
          if (id = -1)
          {
            insert into WA_USER_BIOEVENTS ( WUB_EVENT, WUB_DATE, WUB_PLACE, WUB_U_ID)
              values (trim (params [N+1]), trim (get_keyword ('d_fld_2_'||suffix, params, '')), trim (get_keyword ('d_fld_3_'||suffix, params, '')), self.u_id);
          }
        }
                  }
      for (select WUF_ID as _id from WA_USER_FAVORITES where WUF_U_ID = self.u_id) do
      {
        for (N := 0; N < length (IDf); N := N + 1)
        {
          if (IDf[N] = _id)
            goto _exit3;
        }
        delete from WA_USER_FAVORITES where WUF_ID = _id;
      _exit3:;
      }
      for (N := 0; N < length (params); N := N + 4)
      {
        if (regexp_like(params[N], 'f_prop_([0-9]+)_fld_1_([0-9]+)') and (trim (params[N+1]) <> ''))
        {
          parts := regexp_parse('f_prop_([0-9]+)_fld_1_([0-9]+)', params [N], 0);
          suffix := subseq (params[N], parts[2], parts[3]);
          suffix2 := subseq (params[N], parts[4], parts[5]);
          id := cast (get_keyword ('f_prop_'||suffix||'_fld_3_'||suffix2, params, '-1') as integer);
          if (id = -1)
          {
            tmp := get_keyword ('f_fld_3_'||suffix, params);
            insert into WA_USER_FAVORITES ( WUF_TYPE, WUF_LABEL, WUF_URI, WUF_U_ID)
              values (get_keyword_ucase (tmp, V, tmp), trim (params[N+1]), trim (get_keyword ('f_prop_'||suffix||'_fld_2_'||suffix2, params, '')), self.u_id);
          }
        }
      }

      WA_USER_EDIT (self.u_name, 'WAUI_APP_ENABLE', atoi (self.app_enable.ufl_value));
      update WA_USER_INFO set WAUI_NICK = self.nickn.ufl_value where WAUI_U_ID = self.u_id;

      -- change user_text data
      WA_USER_TEXT_SET(self.u_id, WA_GET_USER_INFO (0, self.u_id, WA_USER_VISIBILITY(self.u_name), 0, 1));
    ]]>
  </v:method>

  <v:variable persist="session" name="is_org" type="int" default="0"/>
  <v:variable persist="0" name="utitle" type="varchar" default="''"/>
  <v:variable persist="0" name="nick" type="varchar" default="''"/>
  <v:variable persist="0" name="ftname" type="varchar" default="''"/>
  <v:variable persist="0" name="lname" type="varchar" default="''"/>
  <v:variable persist="0" name="fullname" type="varchar" default="''"/>
  <v:variable persist="0" name="gender" type="varchar" default="''"/>
  <v:variable persist="0" name="bdate" type="datetime" default="null"/>

  <v:variable persist="0" name="wpage" type="varchar" default="''"/>
  <v:variable persist="0" name="efoaf" type="varchar" default="''"/>
  <v:variable persist="0" name="msign" type="varchar" default="''"/>
  <v:variable persist="0" name="summ" type="varchar" default="''"/>
  <v:variable persist="0" name="email" type="varchar" default="''"/>
  <v:variable persist="0" name="photo" type="varchar" default="''"/>

  <v:variable persist="0" name="audio" type="varchar" default="''"/>
  <v:variable persist="0" name="books" type="varchar" default="''"/>
  <v:variable persist="0" name="music" type="varchar" default="''"/>
  <v:variable persist="0" name="movie" type="varchar" default="''"/>
  <v:variable persist="0" name="issearch" type="int" default="1"/>
  <v:variable persist="0" name="showactive" type="int" default="1"/>
  <v:variable persist="0" name="interests" type="varchar" default="''"/>
  <v:variable persist="0" name="interestTopics" type="varchar" default="''"/>
  <v:variable persist="0" name="appEnable" type="integer" default="0"/>

  <v:variable persist="0" name="uicq" type="varchar" default="''"/>
  <v:variable persist="0" name="uskype" type="varchar" default="''"/>
  <v:variable persist="0" name="uaim" type="varchar" default="''"/>
  <v:variable persist="0" name="uyahoo" type="varchar" default="''"/>
  <v:variable persist="0" name="umsn" type="varchar" default="''"/>
  <v:variable persist="0" name="messaging" type="any" default="null"/>

  <v:variable persist="0" name="haddress1" type="varchar" default="''"/>
  <v:variable persist="0" name="haddress2" type="varchar" default="''"/>
  <v:variable persist="0" name="hcode" type="varchar" default="''"/>
  <v:variable persist="0" name="hcity" type="varchar" default="''"/>
  <v:variable persist="0" name="hstate" type="varchar" default="''"/>
  <v:variable persist="0" name="hcountry" type="varchar" default="''"/>
  <v:variable persist="0" name="htzone" type="varchar" default="''"/>
  <v:variable persist="0" name="hphone" type="varchar" default="''"/>
  <v:variable persist="0" name="hmobile" type="varchar" default="''"/>
  <v:variable persist="0" name="lat" type="real" default="0.00"/>
  <v:variable persist="0" name="lng" type="real" default="0.00"/>
  <v:variable persist="0" name="hlatlng_def" type="int" default="1"/>

  <v:variable name="sav0" type="varchar" default="'1'" />
  <v:variable name="sav1" type="varchar" default="'1'" />
  <v:variable name="sav2" type="varchar" default="'1'" />
  <v:variable name="sav3" type="varchar" default="'1'" />
  <v:variable name="sav4" type="varchar" default="'1'" />
  <v:variable name="sav5" type="varchar" default="'1'" />
  <v:variable name="sav6" type="varchar" default="'1'" />
  <v:variable name="sav7" type="varchar" default="'1'" />
  <v:variable name="sav8" type="varchar" default="'1'" />
  <v:variable name="sav9" type="varchar" default="'3'" />

  <v:variable name="sav10" type="varchar" default="'1'" />
  <v:variable name="sav11" type="varchar" default="'1'" />
  <v:variable name="sav12" type="varchar" default="'1'" />
  <v:variable name="sav13" type="varchar" default="'1'" />
  <v:variable name="sav14" type="varchar" default="'1'" />
  <v:variable name="sav15" type="varchar" default="'1'" />
  <v:variable name="sav16" type="varchar" default="'1'" />
  <v:variable name="sav17" type="varchar" default="'1'" />
  <v:variable name="sav18" type="varchar" default="'1'" />

  <v:variable name="sav33" type="varchar" default="'1'" />

  <v:variable name="sav37" type="varchar" default="'1'" />

  <v:variable name="sav39" type="varchar" default="'1'" />
  <v:variable name="sav40" type="varchar" default="'1'" />

  <v:variable name="sav43" type="varchar" default="'1'" />
  <v:variable name="sav44" type="varchar" default="'1'" />
  <v:variable name="sav45" type="varchar" default="'1'" />
  <v:variable name="sav46" type="varchar" default="'1'" />
  <v:variable name="sav48" type="varchar" default="'1'" />
  <v:variable name="sav49" type="varchar" default="'1'" />
  <v:variable name="sav55" type="varchar" default="'1'" />

  <v:variable name="iMode" type="integer" default="0"/>

  <v:variable name="iTitle" type="varchar" default="null" />
  <v:variable name="iName" type="varchar" default="null" />
  <v:variable name="iFirstName" type="varchar" default="null" />
  <v:variable name="iFamily_name" type="varchar" default="null" />
  <v:variable name="iMbox" type="varchar" default="null" />
  <v:variable name="iGender" type="varchar" default="null" />
  <v:variable name="iBirthday" type="varchar" default="null" />
  <v:variable name="iLat" type="varchar" default="null" />
  <v:variable name="iLng" type="varchar" default="null" />
  <v:variable name="iIcqChatID" type="varchar" default="null" />
  <v:variable name="iMsnChatID" type="varchar" default="null" />
  <v:variable name="iAimChatID" type="varchar" default="null" />
  <v:variable name="iYahooChatID" type="varchar" default="null" />
  <v:variable name="iWorkplaceHomepage" type="varchar" default="null" />
  <v:variable name="iHomepage" type="varchar" default="null" />
  <v:variable name="iPhone" type="varchar" default="null" />
  <v:variable name="iResume" type="varchar" default="null" />
  <v:variable name="iInterests" type="varchar" default="null" />
  <v:variable name="iTopicInterests" type="varchar" default="null" />
  <v:variable name="iOnlineAccounts" type="varchar" default="null" />
  <v:variable name="iSameAs" type="varchar" default="null" />
  <v:variable name="iTags" type="varchar" default="null" />

  <v:variable name="i_source" type="any" default="-1" />
  <v:variable name="i_lName" type="varchar" default="''" />

  <v:variable name="previe_path" type="varchar" default="''" />

  <v:before-data-bind>
    <![CDATA[
      select WAUI_TITLE,
             wa_utf8_to_wide (WAUI_FIRST_NAME),
             wa_utf8_to_wide (WAUI_LAST_NAME),
             wa_utf8_to_wide (WAUI_FULL_NAME),
             WAUI_GENDER,
             WAUI_BIRTHDAY,
             WAUI_WEBPAGE,
             WAUI_FOAF,
             wa_utf8_to_wide (WAUI_MSIGNATURE),
             wa_utf8_to_wide (WAUI_SUMMARY),
             WAUI_PHOTO_URL,
             WAUI_AUDIO_CLIP,
             WAUI_SEARCHABLE,
             WAUI_SHOWACTIVE,
             WAUI_INTERESTS,
             WAUI_INTEREST_TOPICS,
             WAUI_IS_ORG,
             WAUI_APP_ENABLE,
             WAUI_NICK,
             U_E_MAIL,
             wa_utf8_to_wide (WAUI_HADDRESS1),
             wa_utf8_to_wide (WAUI_HADDRESS2),
             WAUI_HCODE,
             wa_utf8_to_wide (WAUI_HCITY),
             wa_utf8_to_wide (WAUI_HSTATE),
             WAUI_HCOUNTRY,
             WAUI_HTZONE,
             WAUI_HPHONE,
             WAUI_HMOBILE,
             WAUI_LAT,
             WAUI_LNG,
             WAUI_LATLNG_HBDEF,
             WAUI_ICQ,
             WAUI_SKYPE,
             WAUI_AIM,
             WAUI_YAHOO,
             WAUI_MSN,
             WAUI_MESSAGING
        INTO self.utitle,
             self.ftname,
             self.lname,
             self.fullname,
             self.gender,
             self.bdate,
             self.wpage,
             self.efoaf,
             self.msign,
             self.summ,
             self.photo,
             self.audio,
             self.issearch,
             self.showactive,
             self.interests,
             self.interestTopics,
             self.is_org,
             self.appEnable,
             self.nick,
             self.email,
             self.haddress1,
             self.haddress2,
             self.hcode,
             self.hcity,
             self.hstate,
             self.hcountry,
             self.htzone,
             self.hphone,
             self.hmobile,
             self.lat,
             self.lng,
             self.hlatlng_def,
             self.uicq,
             self.uskype,
             self.uaim,
             self.uyahoo,
             self.umsn,
             self.messaging
        FROM WA_USER_INFO,
             DB.DBA.SYS_USERS
       where WAUI_U_ID = U_ID
         and U_NAME = self.u_name;

      declare tmp any;

      tmp := WA_USER_VISIBILITY(self.u_name);
      if (tmp is not null and length (tmp) >= 46 )
            {
        self.sav0 := tmp[0];
        self.sav1 := tmp[1];
        self.sav2 := tmp[2];
        self.sav3 := tmp[3];
        self.sav4 := tmp[4];
        self.sav5 := tmp[5];
        self.sav6 := tmp[6];
        self.sav7 := tmp[7];
        self.sav8 := tmp[8];
        -- self.sav9 := 3; -- tmp[9] --this is public/friends/private for mail signature

        self.sav10 := tmp[10];
        self.sav11 := tmp[11];
        self.sav12 := tmp[12];
        self.sav13 := tmp[13];
        self.sav14 := tmp[14];
        self.sav15 := tmp[15];
        self.sav16 := tmp[16];
        self.sav17 := tmp[17];
        self.sav18 := tmp[18];

        self.sav33 := tmp[33];
        self.sav37 := tmp[37];

        self.sav39 := tmp[39];
        self.sav40 := tmp[40];

        self.sav43 := tmp[43];
        self.sav44 := tmp[44];
        self.sav45 := tmp[45];
        self.sav46 := tmp[46];
        self.sav48 := tmp[48];
        self.sav49 := tmp[49];
              }
    ]]>
  </v:before-data-bind>
  <script type="text/javascript">
    <![CDATA[
      var edited = <?V case when length (self.fullname) then 'true' else 'false' end ?>;
      function fillFullName (f, fn, ln, flag)
              {
        if (edited)
                {
          if (flag)
            edited = false;
          return;
                }
        if (f.value.length == 0 || (!edited && !flag))
          f.value = fn.value + ' ' + ln.value;
              }
     ]]>
  </script>
  <v:form name="usr_personal" type="simple" method="POST" xhtml_enctype="multipart/form-data" action="uiedit.vspx?page=1">
    <input type="hidden" name="dirty_force_global" id="dirty_force_global" value="<?vsp http(get_keyword ('dirty_force_global',self.vc_event.ve_params,'false')); ?>"/>
    <br />
    <div id="p" class="c1">
      <div class="tabs">
        <div onclick="javascript: showTab('p', 7, 0); importActivate(true);" class="tab activeTab" id="p_tab_0">Import</div>
        <vm:if test="self.iMode = 0">
        <div onclick="javascript: showTab('p', 7, 1); importActivate(false);" class="tab" id="p_tab_1">Main</div>
        <div onclick="javascript: showTab('p', 7, 2); importActivate(false);" class="tab" id="p_tab_2">Address</div>
        <div onclick="javascript: showTab('p', 7, 3); importActivate(false);" class="tab" id="p_tab_3">Favorite Things</div>
        <div onclick="javascript: showTab('p', 7, 4); importActivate(false);" class="tab" id="p_tab_4">Biographical Events</div>
        <div onclick="javascript: showTab('p', 7, 5); importActivate(false);" class="tab" id="p_tab_5">Online Accounts</div>
        <div onclick="javascript: showTab('p', 7, 6); importActivate(false);" class="tab" id="p_tab_6">Messaging Services</div>
        </vm:if>
      </div>
      <div class="contents">
        <div id="p_content_0" class="tabContent">
          <v:template name="iTemplate_00" type="simple" condition="equ(self.iMode,0)">
            <table class="ctl_grp">
              <tr>
                <td nowrap="nowrap">
                  <v:radio-button name="i_source_0" xhtml_id="i_source_0" group-name="i_source" value="0">
                    <v:before-render>
                      <![CDATA[
                        control.ufl_selected := either (lte(self.i_source, 0), 1, 0);
                      ]]>
                    </v:before-render>
                  </v:radio-button>
                  <xsl:call-template name="nbsp" />
                  <b><label for="i_source_0">Personal URI (Web ID)</label></b>
                </td>
                <td>
                  <v:text name="foaf_url" xhtml_id="foaf_url" value="" xhtml_onfocus="javascript: document.forms[0].i_source[0].checked=true;" xhtml_size="70"/>
                </td>
              </tr>
              <tr>
                <td nowrap="nowrap">
                  <v:radio-button name="i_source_1" xhtml_id="i_source_1" group-name="i_source" value="1">
                    <v:before-render>
                      <![CDATA[
                        control.ufl_selected := either (equ(self.i_source, 1), 1, 0);
                      ]]>
                    </v:before-render>
                  </v:radio-button>
                  <xsl:call-template name="nbsp" />
                  <b><label for="i_source_1">LDAP Server</label></b>
                </td>
                <td>
                  <v:data-list name="f_lName"
                               value="--self.i_lName"
                               key-column="LS_NAME"
                               value-column="LS_NAME"
                               sql="select '' as LS_NAME from SYS_USERS where U_ID = 0 union all select LS_NAME from LDAP..LDAP_SERVERS where LS_USER_ID = self.u_id"
                               xhtml_onfocus="javascript: document.forms[0].i_source[1].checked=true;" />
                </td>
              </tr>
            </table>
          </v:template>
          <v:template name="iTemplate_0" type="simple" condition="self.iMode">
            <fieldset>
              Please confirm importing of the following data in your personal profile.<br />
              The corresponding existing data will be replaced.
            </fieldset>
            <br />
            <table class="listing">
              <tr class="listing_header_row">
                <th width="1%"><input type="checkbox" name="cb_all" value="Select All" onclick="selectAllCheckboxes(this, 'cb_item')" /></th>
                <th>Field</th>
                <th>Value</th>
              </tr>
              <v:template name="iTemplate_01" type="simple" condition="length (self.iTitle)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iTitle" id="cb_item_iTitle" value="1" /></td>
                  <td>Title</td>
                  <td><?V self.iTitle ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_02" type="simple" condition="length (self.iFirstName)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iFirstName" id="cb_item_iFirstName" value="1" /></td>
                  <td>First Name</td>
                  <td><?V wa_utf8_to_wide (self.iFirstName) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_03" type="simple" condition="length (self.iFamily_name)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iFamily_name" id="cb_item_iFamily_name" value="1" /></td>
                  <td>Family Name</td>
                  <td><?V wa_utf8_to_wide (self.iFamily_name) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_030" type="simple" condition="length (self.iName)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iName" id="cb_item_iName" value="1" /></td>
                  <td>Full Name</td>
                  <td><?V wa_utf8_to_wide (self.iName) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_04" type="simple" condition="length (self.iMBox)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iMBox" id="cb_item_iMBox" value="1" /></td>
                  <td>E-mail</td>
                  <td><?V self.iMBox ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_05" type="simple" condition="length (self.iGender)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iGender" id="cb_item_iGender" value="1" /></td>
                  <td>Gender</td>
                  <td><?V self.iGender ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_06" type="simple" condition="length (self.iBirthday)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iBirthday" id="cb_item_iBirthday" value="1" /></td>
                  <td>Birthday</td>
                  <td><?V self.iBirthday ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_07" type="simple" condition="length (self.iLng)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iLng" id="cb_item_iLng" value="1" /></td>
                  <td>Geo position</td>
                  <td><?V self.iLat ?>; <?V self.iLng ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_08" type="simple" condition="length (self.iIcqChatID)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iIcqChatID" id="cb_item_iIcqChatID" value="1" /></td>
                  <td>ICQ</td>
                  <td><?V wa_utf8_to_wide (self.iIcqChatID) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_09" type="simple" condition="length (self.iMsnChatID)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iMsnChatID" id="cb_item_iMsnChatID" value="1" /></td>
                  <td>MSN</td>
                  <td><?V wa_utf8_to_wide (self.iMsnChatID) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_10" type="simple" condition="length (self.iAimChatID)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iAimChatID" id="cb_item_iAimChatID" value="1" /></td>
                  <td>AIM</td>
                  <td><?V wa_utf8_to_wide (self.iAimChatID) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_11" type="simple" condition="length (self.iYahooChatID)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iYahooChatID" id="cb_item_iYahooChatID" value="1" /></td>
                  <td>Yahoo</td>
                  <td><?V wa_utf8_to_wide (self.iYahooChatID) ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_12" type="simple" condition="length (self.iWorkplaceHomepage)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iWorkplaceHomepage" id="cb_item_iWorkplaceHomepage" value="1" /></td>
                  <td>Workplace Homepage</td>
                  <td><?V self.iWorkplaceHomepage ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_13" type="simple" condition="length (self.iHomepage)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iHomepage" id="cb_item_iHomepage" value="1" /></td>
                  <td>Homepage</td>
                  <td><?V self.iHomepage ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_14" type="simple" condition="length (self.iPhone)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iPhone" id="cb_item_iPhone" value="1" /></td>
                  <td>Phone</td>
                  <td><?V self.iPhone ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_15" type="simple" condition="length (self.iResume)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iResume" id="cb_item_iResume" value="1" /></td>
                  <td>Resume</td>
                  <td><?V self.iResume ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_165" type="simple" condition="length (self.iTags)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iTags" id="cb_item_iTags" value="1" /></td>
                  <td>Tags</td>
                  <td><?V self.iTags ?></td>
                </tr>
              </v:template>
              <v:template name="iTemplate_17" type="simple" condition="length (self.iInterests)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iInterests" id="cb_item_iInterests" value="1" /></td>
                  <td valign="top">Resource URI indicating thing of interest</td>
                  <td>
                    <?vsp
                      for (select fld1, fld2 from DB.DBA.WA_USER_INTERESTS (txt) (fld1 varchar, fld2 varchar) P where txt = self.iInterests) do
                  	  {
                  	    if (length (fld1))
                  	    {
                  	      http (fld1);
                  	      if (length (fld2))
                  		      http (sprintf (' (%s)', fld2));
                  	      http ('<br />');
                  	    }
                  	  }
                    ?>
                  </td>
                </tr>
              </v:template>
              <v:template name="iTemplate_18" type="simple" condition="length (self.iTopicInterests)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iTopicInterests" id="cb_item_iTopicInterests" value="1" /></td>
                  <td valign="top">Web page URL indicating a topic of interest   </td>
                  <td>
                    <?vsp
                      for (select fld1, fld2 from DB.DBA.WA_USER_INTERESTS (txt) (fld1 varchar, fld2 varchar) P where txt = self.iTopicInterests) do
                  	  {
                  	    if (length (fld1))
                  	    {
                  	      http (fld1);
                  	      if (length (fld2))
                  		      http (sprintf (' (%s)', fld2));
                  	      http ('<br />');
                  	    }
                  	  }
                    ?>
                  </td>
                </tr>
              </v:template>
              <v:template name="iTemplate_19" type="simple" condition="length (self.iOnlineAccounts)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iOnlineAccounts" id="cb_item_iOnlineAccounts" value="1" /></td>
                  <td valign="top">Online Accounts</td>
                  <td>
                    <?vsp
                      for (select fld1, fld2 from DB.DBA.WA_USER_INTERESTS (txt) (fld1 varchar, fld2 varchar) P where txt = self.iOnlineAccounts) do
                  	  {
                  	    if (length (fld1))
                  	    {
                  	      http (fld1);
                  	      if (length (fld2))
                  		      http (sprintf (' (%s)', fld2));
                  	      http ('<br />');
                  	    }
                  	  }
                    ?>
                  </td>
                </tr>
              </v:template>
              <v:template name="iTemplate_20" type="simple" condition="length (self.iSameAs)">
                <tr>
                  <td><input type="checkbox" name="cb_item_iSameAs" id="cb_item_iSameAs" value="1" /></td>
                  <td valign="top">Other Identity URIs (synonyms)</td>
                  <td>
                    <?vsp
                      for (select fld1, fld2 from DB.DBA.WA_USER_INTERESTS (txt) (fld1 varchar, fld2 varchar) P where txt = self.iSameAs) do
                  	  {
                  	    if (length (fld1))
                  	    {
                  	      http (fld1);
                  	      http ('<br />');
                  	    }
                  	  }
                    ?>
                  </td>
                </tr>
              </v:template>
            </table>
          </v:template>
        </div>
        <div id="p_content_1" class="tabContent" style="display: none;">
          <table class="ctl_grp">
            <tr>
              <th><label for="labelww">Login name</label></th>
              <td class="listing_col" nowrap="1">
                <v:label value="--self.u_name" format="%s"/>
              </td>
            </tr>
            <tr>
              <th><label for="labelwwn">Nick name</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="nickn" value="--self.nick" format="%s" xhtml_tabindex="1">
                  <v:validator test="length" min="3" max="100" name="vv_nickn" message="Nick name cannot be shorter than 3 chars or longer than 100 chars"/>
                </v:text>
              </td>
            </tr>
            <tr>
              <th />
              <td class="listing_col" nowrap="1">
                <label>
                  <v:check-box name="cb_org" value="1" xhtml_id="cb_org" xhtml_onclick="javascript:swOrg(this);" xhtml_tabindex="2">
                    <v:after-data-bind>
                      if (not e.ve_is_post)
                        control.ufl_selected := self.is_org;
                    </v:after-data-bind>
                  </v:check-box><![CDATA[&nbsp;]]>
                  <b>Organization</b>
                </label>
              </td>
            </tr>
            <tr id="pers_1" class="initial_hidden">
              <th><label for="regtitle">Title</label></th>
              <td class="listing_col" nowrap="1">
                <v:select-list name="regtitle" xhtml_tabindex="3">
                  <v:item name="" value=""/>
                  <v:item name="Mr" value="Mr"/>
                  <v:item name="Mrs" value="Mrs"/>
                  <v:item name="Dr" value="Dr"/>
                  <v:item name="Ms" value="Ms"/>
                  <v:before-data-bind>
                    <![CDATA[
                      control.ufl_value := self.utitle;
                      control.vc_data_bound := 1;
                    ]]>
                  </v:before-data-bind>
                </v:select-list>
                <vm:u-prop-select name="sel_0" value="self.sav0" />
              </td>
            </tr>
            <tr id="pers_2" class="initial_hidden">
              <th><label for="f_name">First Name</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="f_name" error-glyph="*" value="--self.ftname" xhtml_style="width:216px" xhtml_tabindex="4" fmt-function="wa_utf8_to_wide" xhtml_onblur="javascript: fillFullName (this.form.full_name, this.form.f_name, this.form.l_name, false)">
                  <v:validator test="length" min="0" max="50" name="vv_f_name1" message="First name cannot be longer then 50 chars" empty-allowed="1"/>
                  <v:validator test="sql" name="vv_f_name2" expression="length(trim(self.f_name.ufl_value)) > 50" message="First name cannot be longer then 50 chars" empty-allowed="1"/>
                </v:text>
                <div style="display:inline; color:red;"><v:error-summary match="f_name" /></div>
                <vm:u-prop-select name="sel_1" value="self.sav1" />
              </td>
            </tr>
            <tr id="pers_3" class="initial_hidden">
              <th><label for="l_name">Last Name</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="l_name" error-glyph="*" value="--self.lname" xhtml_style="width:216px" xhtml_tabindex="5" fmt-function="wa_utf8_to_wide" xhtml_onblur="javascript: fillFullName (this.form.full_name, this.form.f_name, this.form.l_name, false)">
                  <v:validator test="length" min="0" max="50" message="Last name cannot be longer then 50 chars" empty-allowed="1" name="vv_lname1"/>
                  <v:validator test="sql" expression="length(trim(self.l_name.ufl_value)) > 50" name="vv_lname2" message="Last name cannot be longer then 50 chars" empty-allowed="1"/>
                </v:text>
                <div style="display:inline; color:red;"><v:error-summary match="l_name" /></div>
                <vm:u-prop-select name="sel_2" value="self.sav2" />
              </td>
            </tr>
            <tr>
              <th><label for="full_name">Full Name</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="full_name" error-glyph="*" value="--self.fullname" xhtml_style="width:216px" xhtml_tabindex="6" fmt-function="wa_utf8_to_wide" xhtml_onfocus="javascript: fillFullName (this.form.full_name, this.form.f_name, this.form.l_name, true)">
                  <v:validator test="length" min="0" max="100" name="vv_fulname1" message="Full name cannot be longer then 100 chars" empty-allowed="1" />
                  <v:validator test="sql" expression="length(trim(self.full_name.ufl_value)) > 100" name="vv_fulname2" message="Full name cannot be longer then 100 chars" mpty-allowed="1"/>
                </v:text>
                <div style="display:inline; color:red;"><v:error-summary match="full_name" /></div>
                <vm:u-prop-select name="sel_3" value="self.sav3" />
              </td>
            </tr>
            <tr>
              <th>
                <label for="regmail">E-mail<div style="font-weight: normal; display:inline; color:red;"> *</div></label>
                <span class="explain"> (mandatory field)</span>
              </th>
              <td class="listing_col" nowrap="nowrap">
                <v:text xhtml_id="regmail" name="regmail" value="--self.email" xhtml_class="_validate_ _mail_" xhtml_style="width:216px" xhtml_tabindex="7" xhtml_onblur="javascript: validateField(this);" />
                <vm:u-prop-select name="sel_4" value="self.sav4" />
              </td>
            </tr>
            <tr id="pers_4" class="initial_hidden">
              <th><label for="regender">Gender</label></th>
              <td class="listing_col" nowrap="1">
                <v:select-list name="regender" xhtml_tabindex="8">
                  <v:item name="Not Specified" value="unknown"/>
                  <v:item name="Male" value="male"/>
                  <v:item name="Female" value="female"/>
                  <v:before-data-bind>
                    <v:script><![CDATA[
                      control.ufl_value := self.gender;
                      control.vc_data_bound := 1;
                    ]]></v:script>
                  </v:before-data-bind>
                </v:select-list>
                <vm:u-prop-select name="sel_5" value="self.sav5" />
              </td>
            </tr>
            <tr id="pers_5" class="initial_hidden">
              <th><label for="regbday">Birthday</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="regbdate" xhtml_id="regbdate" value="--case when isnull (self.bdate) then '' else left (datestring (self.bdate), 10) end" xhtml_tabindex="9" xhtml_size="10" xhtml_onclick="javascript: cPopup.select ($(\'regbdate\'), \'regbdate_select\', \'yyyy-MM-dd\');"/>
                <a href="#" name="regbdate_select" id="regbdate_select" onclick="cPopup.select ($('regbdate'), 'regbdate_select', 'yyyy-MM-dd'); return false;"></a>
                <vm:u-prop-select name="sel_6" value="self.sav6" />
              </td>
            </tr>
             <tr>
               <th><label for="w_page" id="lb_1">Personal Webpage</label></th>
               <td class="listing_col" nowrap="1">
                 <v:text name="w_page" value="--self.wpage" xhtml_tabindex="12" xhtml_class="_validate_ _url_ _canEmpty_" xhtml_style="width:216px" xhtml_onblur="javascript: validateField(this);"/>
                 <vm:u-prop-select name="sel_7" value="self.sav7" />
               </td>
             </tr>
             <tr>
               <th>
                 <label for="e_foaf">Other Personal URIs (Web IDs)</label>
               </th>
               <td class="listing_col" nowrap="1">
                 <table>
                   <tr>
                     <td width="600px">
                       <table id="e_tbl" class="listing">
                         <thead>
                           <tr class="listing_header_row">
                             <th>
                               URI
                             </th>
                             <th width="80px">
                               Action
                             </th>
                           </tr>
                         </thead>
                         <?vsp
                           declare N integer;

                           N := 0;
                           for (select interest from DB.DBA.WA_USER_INTERESTS (txt) (interest varchar) P where txt = self.efoaf) do
                {
                         ?>
                         <tr id="e_tr_<?V N ?>">
                           <td>
                             <input type="text" id="e_fld_1_<?V N ?>" name="e_fld_1_<?V N ?>" value="<?V interest ?>" style="width: 95%;" class="_validate_ _url_ _canEmpty_" onblur="javascript: validateField(this);" />
                           </td>
                           <td>
                             <input type="button" value="Remove" onclick="javascript: updateRow('e', <?V N ?>);" />
                           </td>
                         </tr>
                         <?vsp
                             N := N + 1;
                }
                           http (sprintf ('<tr id="e_tr_no" style="display: %s"><td colspan="2"><b>No Personal URIs</b></td></tr>', case when N = 0 then '' else 'none' end));
                         ?>
                       </table>
                       <input type="hidden" id="e_no" name="e_no" value="<?V N ?>" />
                     </td>
                     <td valign="top" nowrap="1">
                       <input type="button" value="Add" onclick="javascript: updateRow('e', null, {fld_1: {className: '_validate_ _url_ _canEmpty_', onBlur: function(){validateField(this);}}});" />
                       <vm:u-prop-select name="sel_8" value="self.sav8" />
                     </td>
                   </tr>
                 </table>
               </td>
             </tr>
             <tr id="pers_17" class="initial_hidden">
               <th><label for="m_sign">Mail Signature</label></th>
               <td class="listing_col" nowrap="1">
                 <v:textarea name="m_sign" value="--self.msign" xhtml_rows="4" xhtml_cols="80" xhtml_tabindex="14" fmt-function="wa_utf8_to_wide" error-glyph="*">
                   <v:validator test="length" min="0" max="255" name="vv_m_sign1" message="Mail Signature cannot be longer then 255 chars" empty-allowed="1"/>
                 </v:textarea>
                 <v:text type="hidden" name="sel_9" value="3"/>
               </td>
             </tr>
             <tr>
               <th><label for="s_summ">Summary</label></th>
               <td class="listing_col" nowrap="1">
                 <v:textarea name="s_summ" value="--self.summ" xhtml_rows="4" xhtml_cols="80" xhtml_tabindex="15" fmt-function="wa_utf8_to_wide" error-glyph="*"/>
                 <vm:u-prop-select name="sel_33" value="self.sav33" />
               </td>
             </tr>
             <tr>
              <th><label for="s_tags">Tags</label>
                <span class="explain"> (comma separated list of keywords)</span>
              </th>
              <td class="listing_col" nowrap="1">
                <v:textarea name="s_tag" value="--WA_USER_TAG_GET(self.u_name)" xhtml_tabindex="16" xhtml_cols="50" xhtml_rows="5" />
                <v:button action="browse" name="tagsbt" value="Import Tags..." selector="get_tags_popup.vspx" child-window-options="scrollbar=yes,resizable=yes,menubar=no,height=600,width=800">
                  <v:field name="s_tag"/>
                </v:button>
              </td>
             </tr>
             <tr>
               <th>
                 <label for="e_int">Web page URL indicating a topic of interest</label>
               </th>
               <td class="listing_col" nowrap="1">
                 <table>
                   <tr>
                     <td width="600px">
                       <table id="a_tbl" class="listing">
                         <thead>
                           <tr class="listing_header_row">
                             <th>
                               URL
                             </th>
                             <th>
                               Label
                             </th>
                             <th width="80px">
                               Action
                             </th>
                           </tr>
                         </thead>
                         <?vsp
                           declare N integer;

                           N := 0;
                           for (select interest, label from DB.DBA.WA_USER_INTERESTS (txt) (interest varchar, label varchar) P where txt = self.interests) do
                           {
                         ?>
                         <tr id="a_tr_<?V N ?>">
                           <td>
                             <input type="text" id="a_fld_1_<?V N ?>" name="a_fld_1_<?V N ?>" value="<?V interest ?>" style="width: 95%;" class="_validate_ _url_ _canEmpty_" onblur="javascript: validateField(this);" />
                           </td>
                           <td>
                             <input type="text" id="a_fld_2_<?V N ?>" name="a_fld_2_<?V N ?>" value="<?V label ?>" style="width: 95%;" />
                           </td>
                           <td>
                             <input type="button" value="Remove" onclick="javascript: updateRow('a', <?V N ?>);" />
                           </td>
                         </tr>
                         <?vsp
                             N := N + 1;
                   }
                           http (sprintf ('<tr id="a_tr_no" style="display: %s"><td colspan="3"><b>No Topic of Interests</b></td></tr>', case when N = 0 then '' else 'none' end));
                         ?>
                       </table>
                       <input type="hidden" id="a_no" name="a_no" value="<?V N ?>" />
                     </td>
                     <td valign="top" nowrap="1">
                       <input type="button" value="Add" onclick="javascript: updateRow('a', null, {fld_1: {className: '_validate_ _url_ _canEmpty_', onBlur: function(){validateField(this);}}, fld_2: {}});" />
                       <vm:u-prop-select name="sel_48" value="self.sav48" />
                     </td>
                   </tr>
                 </table>
               </td>
             </tr>
             <tr>
               <th>
                 <label for="e_int2">Resource URI indicating thing of interest</label>
               </th>
               <td class="listing_col" nowrap="1">
                 <table>
                   <tr>
                     <td width="600px">
                       <table id="b_tbl" class="listing">
                         <thead>
                           <tr class="listing_header_row">
                             <th>
                               URI
                             </th>
                             <th>
                               Label
                             </th>
                             <th width="80px">
                               Action
                             </th>
                           </tr>
                         </thead>
                         <?vsp
                           declare N integer;

                           N := 0;
                           for (select interest, label from DB.DBA.WA_USER_INTERESTS (txt) (interest varchar, label varchar) P where txt = self.interestTopics) do
                           {
                         ?>
                         <tr id="b_tr_<?V N ?>">
                           <td>
                             <input type="text" id="b_fld_1_<?V N ?>" name="b_fld_1_<?V N ?>" value="<?V interest ?>" style="width: 95%;" class="_validate_ _url_ _canEmpty_" onblur="javascript: validateField(this);" />
                           </td>
                           <td>
                             <input type="text" id="b_fld_2_<?V N ?>" name="b_fld_2_<?V N ?>" value="<?V label ?>" style="width: 95%;" />
                           </td>
                           <td>
                             <input type="button" value="Remove" onclick="javascript: updateRow('b', <?V N ?>);" />
                           </td>
                         </tr>
                         <?vsp
                             N := N + 1;
                 }
                           http (sprintf ('<tr id="b_tr_no" style="display: %s"><td colspan="3"><b>No Thing of Interests</b></td></tr>', case when N = 0 then '' else 'none' end));
                         ?>
                       </table>
                       <input type="hidden" id="b_no" name="b_no" value="<?V N ?>" />
                     </td>
                     <td valign="top" nowrap="1">
                       <input type="button" value="Add" onclick="javascript: updateRow('b', null, {fld_1: {className: '_validate_ _url_ _canEmpty_', onBlur: function(){validateField(this);}}, fld_2: {value: ''}});" />
                       <vm:u-prop-select name="sel_49" value="self.sav49" />
                     </td>
                   </tr>
                 </table>
               </td>
             </tr>
             <tr>
               <th><label for="up_photo">Upload Photo</label></th>
               <td class="listing_col" nowrap="1">
                 <input name="up_photo" type="file" value="" xhtml_size="80" xhtml_tabindex="20" onchange='getFileName(this.form, this, this.form.s_photo);' fmt-function="wa_utf8_to_wide" />
                  <v:button name="bt_preview_1" value="Preview" action="simple">
                   <v:on-post>
                     <![CDATA[
                       if (get_keyword ('up_photo', e.ve_params, '') <> '')
	          {
                         declare dir, p_path, p_ext any;
                         dir := rtrim (DAV_HOME_DIR (self.u_name), '/')||'/wa/images/';
                         p_ext := split_and_decode(self.s_photo.ufl_value,0,'\0\0.');
                         p_path := dir||'preview_img.'||p_ext[length(p_ext)-1];

                         if (p_ext is not null and p_ext[length(p_ext)-1] is not null and lcase(p_ext[length(p_ext)-1]) in ('jpg','png','gif'))
	            {
                           declare rc, pwd1 any;
                           pwd1 := (select pwd_magic_calc (U_NAME, U_PASSWORD, 1) from DB.DBA.SYS_USERS where U_NAME = 'dav');
                           rc := 0;

                           rc := DAV_MAKE_DIR (dir, self.u_id, http_admin_gid (), '110100100N');
                           rc := DAV_RES_UPLOAD (p_path, get_keyword ('up_photo', e.ve_params), '', '110100100RR', self.u_id, http_nogroup_gid(), 'dav', pwd1);

                           if (rc < 0)
                           {
                             self.vc_is_valid := 0;
                             self.vc_error_message := DAV_PERROR (rc);
                           } else
                             self.previe_path:=p_path;
                         } else {
                           self.vc_is_valid := 0;
                           self.vc_error_message := ' Invalid image type. Please use jpg,png or gif for browser compatibility.';
                           self.previe_path:='';
	            }
		        }
                     ]]>
                   </v:on-post>
                 </v:button>
                 <script type="text/javascript">
                   <![CDATA[
                     var previeImgPath='<?Vself.previe_path?>';
                     function dimmerPreviewInit()
              {
                       if(previeImgPath.length>0)
                {
                         OAT.Loader.loadFeatures(["dimmer"],showPrevieImg);
              }
            }
                     ODSInitArray.push(dimmerPreviewInit);

                     function showPrevieImg()
                     {
                       var div=OAT.Dom.create('div',{position:'relative',textAlign:'center'});

                       OAT.Event.attach(div,"click",OAT.Dimmer.hide);

                       var img=OAT.Dom.create('img',{display:'block'});
                       img.src=previeImgPath;
                       OAT.Event.attach(div,"load",function(){OAT.Dom.center(div,1,1);});

                       OAT.Dom.append([div,img]);
                       OAT.Dimmer.show(div,{popup:true});
                       function centerImg()
                       {
                         if(img.complete)
                         {
                           OAT.Dom.center(div,1,1);
                           clearTimeout(centerImgE);
                         }
                       }
                       var centerImgE=setInterval(centerImg,50);
                     }
                   ]]>
                 </script>
               </td>
             </tr>
             <tr>
               <th><label for="s_photo">Photo</label></th>
               <td class="listing_col" nowrap="1">
                 <v:text name="s_photo" value="--self.photo" xhtml_size="80" xhtml_tabindex="21" fmt-function="wa_utf8_to_wide" />
                 <vm:u-prop-select name="sel_37" value="self.sav37" />
               </td>
             </tr>
             <tr>
               <th><label for="up_audio">Upload Audio</label></th>
               <td class="listing_col" nowrap="1">
                 <input name="up_audio" type="file" value="" xhtml_size="80" xhtml_tabindex="22" onblur="javascript: getFileName(this.form, this, this.form.s_audio);" fmt-function="wa_utf8_to_wide" />
               </td>
             </tr>
             <tr>
               <th><label for="s_audio">Audio</label></th>
               <td class="listing_col" nowrap="1">
                 <v:text name="s_audio" value="--self.audio" xhtml_size="80" xhtml_tabindex="23" fmt-function="wa_utf8_to_wide" />
                 <vm:u-prop-select name="sel_43" value="self.sav43" />
               </td>
             </tr>
             <tr>
               <th>
                 <label for="app_enable">Show &amp;lt;a&amp;gt;++ links</label>
               </th>
               <td>
                 <v:select-list xhtml_class="select" name="app_enable" xhtml_id="app_enable" xhtml_tabindex="25">
                   <v:item value="0" name="disabled"/>
                   <v:item value="1" name="click"/>
                   <v:item value="2" name="hover"/>
                   <v:before-data-bind>
                     <v:script>
                       <![CDATA[
                         control.ufl_value := cast (self.appEnable as varchar);
                         control.vc_data_bound := 1;
                       ]]>
                     </v:script>
                   </v:before-data-bind>
                 </v:select-list>
               </td>
             </tr>
             <tr>
               <td />
               <td>
                 <label>
                   <v:check-box name="in_search" value="1" xhtml_id="in_search" >
                     <v:after-data-bind>
                       if (not e.ve_is_post)
                         control.ufl_selected := self.issearch;
                     </v:after-data-bind>
                   </v:check-box>
                   <b>Include my profile in search results</b>
                 </label>
               </td>
             </tr>
             <tr>
               <td />
               <td>
                 <label>
                   <v:check-box name="show_active" value="--self.showactive" xhtml_id="show_active" >
                    <v:after-data-bind>
                      control.ufl_selected := self.showactive;
                    </v:after-data-bind>
                   </v:check-box>
                   <b>Include in User active information</b>
                 </label>
               </td>
             </tr>
          </table>
        </div>
        <div id="p_content_2" class="tabContent" style="display: none;">
          <table class="ctl_grp">
            <tr id="pers_6" class="initial_hidden">
              <th><label for="h_country">Country</label></th>
              <td class="listing_col" nowrap="1">
                <v:data-list name="h_country" xhtml_id="h_country" value="--self.hcountry" sql="select 'Not Specified' as WC_NAME from WA_COUNTRY union select WC_NAME from WA_COUNTRY" key-column="WC_NAME" value-column="WC_NAME" xhtml_onchange="javascript: updateState(\'h_country\', \'h_state\');" />
                <vm:u-prop-select name="sel_16" value="self.sav16" />
              </td>
            </tr>
            <tr id="pers_7" class="initial_hidden">
              <th>
                <label for="h_state">State/Province</label>
              </th>
              <td class="listing_col" nowrap="1">
                <span id="span_h_state">
                  <![CDATA[
                    <script type="text/javascript">
                      function categoryCombo ()
                      {
                        var cc = new OAT.Combolist([], "<?V self.hstate ?>");
                        cc.input.name = "h_state";
                        cc.input.id = "h_state";
                        cc.input.style.width = "216px";
                        $("span_h_state").appendChild(cc.div);
                        cc.addOption("");
                        <?vsp
                          for (select * from WA_PROVINCE where WP_COUNTRY = self.h_country.ufl_value) do
                            http (sprintf ('cc.addOption("%s");', WP_PROVINCE));
                         ?>
                      }
                      ODSInitArray.push ( function () { OAT.Loader.loadFeatures(["combolist"], categoryCombo); } );
                    </script>
                  ]]>
                </span>
              </td>
            </tr>
            <tr id="pers_8" class="initial_hidden">
              <th><label for="h_city">City/Town</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_city"
                        value="--self.hcity"
                        xhtml_style="width:216px"
                        xhtml_tabindex="3"/>
              </td>
            </tr>
            <tr id="pers_9" class="initial_hidden">
              <th><label for="h_code">Zip/Postal Code</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_code"
                        value="--self.hcode"
                        xhtml_style="width:216px"
                        xhtml_tabindex="4"/>
                <vm:u-prop-select name="sel_15" value="self.sav15" />
              </td>
            </tr>
            <tr id="pers_10" class="initial_hidden">
              <th><label for="h_address1">Address1</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_address1"
                        value="--self.haddress1"
                        xhtml_style="width:216px"
                        xhtml_tabindex="5"/>
              </td>
            </tr>
            <tr id="pers_11" class="initial_hidden">
              <th><label for="h_address2">Address2</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_address2"
                        value="--self.haddress2"
                        xhtml_style="width:216px"
                        xhtml_tabindex="6"/>
              </td>
            </tr>
            <tr id="pers_12" class="initial_hidden">
              <th><label for="h_tzone">Time-Zone</label></th>
              <td class="listing_col" nowrap="1">
                <v:select-list name="h_tzone" xhtml_id="regtz" xhtml_style="width:216px" xhtml_tabindex="7" enabled="1">
                  <v:on-init>
                    <![CDATA[
                      {
                        declare i,j int;
                        declare x,y any;
                        x := make_array (25, 'any');
                        y := make_array (25, 'any');
                        i := -12; j:= 0;
                        while (i <= 12)
                        {
                          x[j] := cast (i as varchar);
                          y[j] := sprintf ('GMT %s%02d:00', case when i < 0 then '-' else '+' end,  abs(i));
                          i := i + 1;
                          j := j + 1;
                        }
                        control.vsl_item_values := x;
                        control.vsl_items := y;
                        control.ufl_value := '0';
                      }
                    ]]>
                  </v:on-init>
                  <v:before-data-bind>
                    control.ufl_value := self.htzone;
                  </v:before-data-bind>
                </v:select-list>
                <vm:u-prop-select name="sel_17" value="self.sav17" />
              </td>
            </tr>
            <tr id="pers_13" class="initial_hidden">
              <th><label for="h_lat">Latitude</label></th>
              <td class="listing_col" nowrap="1" rowspan="2" valign="center">
                <table border="0" cellpadding="0" cellspacing="0">
                  <tr>
                    <td>
                      <v:text name="h_lat"
                              value="--case when self.lat is not null then sprintf ('%.6f', coalesce (self.lat, 0.00)) else '' end"
                              xhtml_style="width:216px; margin-right:3px;"
                              xhtml_tabindex="8"/>
                    </td>
                    <td rowspan="2" valign="center">
                      <vm:u-prop-select name="sel_39" value="self.sav39" />
                      <v:button name="set_lat_long" action="simple" value="Set from address">
                        <v:on-post>
                          <![CDATA[
                            declare lat, lng double precision;

                            self.is_org := self.cb_org.ufl_selected;
                            self.hstate := get_keyword ('h_state', e.ve_params, '');
                            if (0 <> DB.DBA.WA_MAPS_ADDR_TO_COORDS (
                                  trim (coalesce (self.h_address1.ufl_value, '')),
                                  trim (coalesce (self.h_address2.ufl_value, '')),
                                  trim (coalesce (self.h_city.ufl_value, '')),
                                  trim (coalesce (self.hstate, '')),
                                  trim (coalesce (self.h_code.ufl_value, '')),
                                  trim (coalesce (self.h_country.ufl_value, '')),
                                  lat,
                                  lng
                              ))
                            {
                              self.h_lat.ufl_value := lat;
                              self.h_lng.ufl_value := lng;
                            }
                          ]]>
                        </v:on-post>
                      </v:button>
                      <v:check-box name="set_hlatlng_def" initial-checked="0" value="-- case self.hlatlng_def when 1 then 0 else 1 end" xhtml_id="set_hlatlng_def" >
                        <v:after-data-bind>
                         if (not e.ve_is_post)
                         {
                           if(self.hlatlng_def=0)
                           {
                             control.ufl_selected := 1;
                           } else {
                             control.ufl_selected := 0;
                           }
                         }
                        </v:after-data-bind>
                      <br/>
                      </v:check-box>
                      <label for="set_hlatlng_def">Default map location</label>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <v:text name="h_lng"
                              value="--case when self.lng is not null then sprintf ('%.6f', coalesce (self.lng, 0.00)) else '' end"
                              xhtml_style="width:216px; margin-right:3px;"
                              xhtml_tabindex="9"/>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>
            <tr id="pers_14" class="initial_hidden">
              <th><label for="h_long">Longitude</label></th>
              <td class="listing_col" nowrap="1">
              </td>
            </tr>
            <tr id="pers_15" class="initial_hidden">
              <th><label for="h_phone">Phone</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_phone"
                        value="--self.hphone"
                        xhtml_style="width:216px"
                        xhtml_tabindex="10"/>
                <vm:u-prop-select name="sel_18" value="self.sav18" />
                <!--v:label name ="lb3" format="%s" value="'* Refers to Phone, Mobile'"/-->
              </td>
            </tr>
            <tr id="pers_16" class="initial_hidden">
              <th><label for="h_mobile">Mobile</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="h_mobile"
                        value="--self.hmobile"
                        xhtml_style="width:216px"
                        xhtml_tabindex="11"/>
              </td>
            </tr>
          </table>
        </div>
        <div id="p_content_3" class="tabContent" style="display: none;">
          <table class="ctl_grp">
            <tr>
              <td width="800px">
                <table id="f_tbl" class="listing">
                  <thead>
                  <tr class="listing_header_row">
                      <th>
                        <div style="width: 16px;">&nbsp;</div>
                    </th>
                      <th width="100%" colspan="2">
                        Favorite Type
                    </th>
                    <th width="80px">
                      Action
                    </th>
                  </tr>
                  </thead>
                  <tbody id="f_tbody">
                    <tr id="f_tr_no">
                      <td colspan="4">
                        <b>No Elements</b>
                    </td>
                  </tr>
                  </tbody>
                </table>
                <input type="hidden" id="f_no" name="f_no" value="1" />
              </td>
              <td valign="top" nowrap="nowrap">
                <input type="button" value="Add" onclick="javascript: updateRow('f', null, {fld_1: {mode: 12, cssText: 'display: none;'}, fld_2: {mode: 7, value: 'New Type'}, fld_3: {mode: 5, cssText: 'width: 95%;'}, btn_1: {mode: 5, cssText: 'margin-left: 2px; margin-right: 2px;'}, btn_2: {mode: 6, cssText: 'margin-left: 2px; margin-right: 2px;'}});" />
                <br />
                <vm:u-prop-select name="sel_44" value="self.sav44" />
              </td>
            </tr>
          </table>
          <script type="text/javascript">
            <![CDATA[
              FT.prefix = 'f';
              FT.items = <?vsp http (ODS..obj2json (self.favorites2json ())); ?>;
              FT.showItems();
            ]]>
          </script>
        </div>
        <div id="p_content_4" class="tabContent" style="display: none;">
          <table class="ctl_grp">
            <tr>
              <td width="800px">
                <table id="d_tbl" class="listing">
                  <tr class="listing_header_row">
                    <th width="15%">
                      Event
                    </th>
                    <th width="15%">
                      Date
                    </th>
                    <th>
                      Place
                    </th>
                    <th width="80px">
                      Action
                    </th>
                  </tr>
                  <?vsp
                    declare N integer;

                    N := 0;
                    for select WUB_ID, WUB_EVENT, WUB_DATE, WUB_PLACE from WA_USER_BIOEVENTS where WUB_U_ID = self.u_id do
                    {
                  ?>
                  <tr id="d_tr_<?V N ?>">
                    <td id="d_th_<?V N ?>">
                      <input type="hidden" id="d_fld_0_<?V N ?>" name="d_fld_0_<?V N ?>" value="<?V WUB_ID ?>" />
                		  <![CDATA[
                		    <script type="text/javascript">
                		    <?vsp
                          http (sprintf ('ODSInitArray.push ( function (){OAT.Loader.loadFeatures(["combolist"], function() {updateRowCombo4(\'d_th_%d\', \'d_fld_1_%d\', {mode: 4, value: \'%s\'});});})', N, N, WUB_EVENT));
                		    ?>
                		    </script>
                		  ]]>
                    </td>
                    <td>
                      <input type="text" id="d_fld_2_<?V N ?>" name="d_fld_2_<?V N ?>" value="<?V WUB_DATE ?>" style="width: 95%;" />
                    </td>
                    <td>
                      <input type="text" id="d_fld_3_<?V N ?>" name="d_fld_3_<?V N ?>" value="<?V WUB_PLACE ?>" style="width: 95%;" />
                    </td>
                    <td>
                      <input type="button" value="Remove" onclick="javascript: updateRow('d', <?V N ?>);" />
                    </td>
                  </tr>
                  <?vsp
                      N := N + 1;
                    }
                    http (sprintf ('<tr id="d_tr_no" style="display: %s"><td colspan="3"><b>No Biographical Events</b></td></tr>', case when N = 0 then '' else 'none' end));
                  ?>
                </table>
                <input type="hidden" id="d_no" name="d_no" value="<?V N ?>" />
              </td>
              <td valign="top" nowrap="1">
                <input type="button" value="Add" onclick="javascript: updateRow('d', null, {fld_1: {mode: 4}, fld_2: {}, fld_3: {}});" />
              </td>
            </tr>
          </table>
        </div>
        <div id="p_content_5" class="tabContent" style="display: none;">
          <table class="ctl_grp">
            <tr>
              <td width="600px">
                <table id="c_tbl" class="listing">
                  <tr class="listing_header_row">
                    <th>
                      Select from Service List ot Type New One
                    </th>
                    <th>
                      Member Home Page URL
                    </th>
                    <th width="80px">
                      Action
                    </th>
                  </tr>
                  <?vsp
                    declare N integer;

                    N := 0;
                    for select WUO_ID, WUO_NAME, WUO_URL from WA_USER_OL_ACCOUNTS where WUO_TYPE = 'P' and WUO_U_ID = self.u_id do
                    {
                  ?>
                  <tr id="c_tr_<?V N ?>">
                    <td id="c_th_<?V N ?>">
                      <input type="hidden" id="c_fld_0_<?V N ?>" name="c_fld_0_<?V N ?>" value="<?V WUO_ID ?>" />
                		  <![CDATA[
                		    <script type="text/javascript">
                		    <?vsp
                          http (sprintf ('ODSInitArray.push ( function (){OAT.Loader.loadFeatures(["combolist"], function() {updateRowCombo(\'c_th_%d\', \'c_fld_1_%d\', {value: \'%s\'});});})', N, N, WUO_NAME));
                		    ?>
                		    </script>
                		  ]]>
                    </td>
                    <td>
                      <input type="text" id="c_fld_2_<?V N ?>" name="c_fld_2_<?V N ?>" value="<?V WUO_URL ?>" style="width: 95%;" class="_validate_ _url_ _canEmpty_" onblur="javascript: validateField(this);" />
                    </td>
                    <td>
                      <input type="button" value="Remove" onclick="javascript: updateRow('c', <?V N ?>);" />
                    </td>
                  </tr>
                  <?vsp
                      N := N + 1;
                    }
                    http (sprintf ('<tr id="c_tr_no" style="display: %s"><td colspan="3"><b>No Services</b></td></tr>', case when N = 0 then '' else 'none' end));
                  ?>
                </table>
                <input type="hidden" id="c_no" name="c_no" value="<?V N ?>" />
              </td>
              <td valign="top" nowrap="1">
                <input type="button" value="Add" onclick="javascript: updateRow('c', null, {fld_1: {mode: 1}, fld_2: {className: '_validate_ _url_ _canEmpty_', onBlur: function(){validateField(this);}}});" />
              </td>
            </tr>
          </table>
        </div>
        <div id="p_content_6" class="tabContent" style="display: none;">
          <table id="m_tbl" class="ctl_grp">
            <tr>
              <th><label for="u_icq">ICQ Number</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="u_icq"
                        value="--self.uicq"
                        xhtml_style="width:216px"
                        xhtml_tabindex="1"/>
              </td>
              <td>
                <vm:u-prop-select name="sel_10" value="self.sav10" />
              </td>
            </tr>
            <tr>
              <th><label for="u_skype">Skype ID</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="u_skype"
                        value="--self.uskype"
                        xhtml_style="width:216px"
                        xhtml_tabindex="2"/>
              </td>
              <td>
                <vm:u-prop-select name="sel_11" value="self.sav11" />
              </td>
            </tr>
            <tr>
              <th><label for="u_aim">AIM Name</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="u_aim"
                        value="--self.uaim"
                        xhtml_style="width:216px"
                        xhtml_tabindex="3"/>
              </td>
              <td>
                <vm:u-prop-select name="sel_12" value="self.sav12" />
              </td>
            </tr>
            <tr>
              <th><label for="u_yahoo">Yahoo! ID</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="u_yahoo"
                        value="--self.uyahoo"
                        xhtml_style="width:216px"
                        xhtml_tabindex="4"/>
              </td>
              <td>
                <vm:u-prop-select name="sel_13" value="self.sav13" />
              </td>
            </tr>
            <tr>
              <th><label for="u_msn">MSN Messenger</label></th>
              <td class="listing_col" nowrap="1">
                <v:text name="u_msn"
                        value="--self.umsn"
                        xhtml_style="width:216px"
                        xhtml_tabindex="5"/>
              </td>
              <td>
                <vm:u-prop-select name="sel_14" value="self.sav14" />
              </td>
            </tr>
            <?vsp
              declare N integer;

              N := 0;
              for (select m_label, m_id from DB.DBA.WA_USER_INTERESTS (txt) (m_label varchar, m_id varchar) P where txt = self.messaging) do
              {
            ?>
            <tr id="m_tr_<?V N ?>">
              <td>
                <input type="text" id="m_fld_1_<?V N ?>" name="m_fld_1_<?V N ?>" value="<?V m_label ?>" style="width: 95%;" />
              </td>
              <td>
                <input type="text" id="m_fld_2_<?V N ?>" name="m_fld_2_<?V N ?>" value="<?V m_id ?>" style="width: 216px;" />
              </td>
              <td>
                <input type="button" value="Remove" onclick="javascript: updateRow('m', <?V N ?>);" />
              </td>
            </tr>
            <?vsp
                N := N + 1;
              }
            ?>
          </table>
          <input type="button" value="Add" onclick="javascript: updateRow('m', null, {fld_1: {}, fld_2: {cssText: 'width: 216px;'}});" />
        </div>
      </div>
      <table class="ctl_grp" id="used_access_personal" style="display: none;">
         <tr>
           <th><label for="set_all">Set access for all fields as </label></th>
           <td class="ctrl">
             <v:select-list name="set_all1" value="0" xhtml_onchange='javascript: setSelectLists (this.value, this.form, "sel_")' xhtml_tabindex="24">
               <v:item name="*no change*"  value="0" />
               <v:item name="public"  value="1" />
               <v:item name="friends" value="2" />
               <v:item name="private" value="3" />
             </v:select-list>
           </td>
         </tr>
      </table>
    </div>
    <br />
    <div>
      <v:button name="user_c_personal" xhtml_id="user_c_personal" value="Cancel" action="simple">
        <v:on-post>
          self.vc_redirect (sprintf ('uhome.vspx?ufname=%U&amp;l=1', self.u_name));
        </v:on-post>
      </v:button>
      <v:button name="user_i_personal" xhtml_id="user_i_personal" value="Import" action="simple">
        <v:on-post>
          <![CDATA[
            if (self.iMode = 0)
            {
              commit work;
              if (self.i_source_0.ufl_selected)
              {
                declare data any;

                self.i_source := 0;
                data := ODS.ODS_API.get_foaf_data_array (self.foaf_url.ufl_value, 0);
                if (length (data) = 0)
                  data := ODS.ODS_API.get_foaf_data_array (self.foaf_url.ufl_value, 1);
                if (length (data) = 0)
                {
                  self.vc_error_message := 'The specified URL doesn\'t contains personal FOAF profile.';
                  self.vc_is_valid := 0;
                  return;
                }
                self.iTitle := get_keyword ('title', data);
                self.iName := get_keyword ('name', data);
                self.iFirstName := coalesce (get_keyword ('firstName', data), get_keyword ('givenName', data));
                self.iFamily_name := get_keyword ('family_name', data);
                self.iMbox := get_keyword ('mbox', data);
                self.iGender := get_keyword ('gender', data);
                self.iBirthday := get_keyword ('birthday', data);
                self.iLat := get_keyword ('lat', data);
                self.iLng := get_keyword ('lng', data);
                self.iIcqChatID := get_keyword ('icqChatID', data);
                self.iMsnChatID := get_keyword ('msnChatID', data);
                self.iAimChatID := get_keyword ('aimChatID', data);
                self.iYahooChatID := get_keyword ('yahooChatID', data);
                self.iWorkplaceHomepage := get_keyword ('workplaceHomepage', data);
                self.iHomepage := get_keyword ('homepage', data);
                self.iPhone := get_keyword ('phone', data);
                self.iResume := get_keyword ('resume', data);
                self.iInterests := get_keyword ('interest', data);
                self.iTopicInterests := get_keyword ('topic_interest', data);
                self.iOnlineAccounts := get_keyword ('onlineAccounts', data);
                self.iSameAs := get_keyword ('sameAs', data);
                self.iTags := get_keyword ('tags', data);

                self.iMode := 1;
                control.vc_data_bind (e);
              }
              else if (self.i_source_1.ufl_selected)
              {
                self.i_source := 1;

                declare N, M integer;
                declare tmp, data, V, i_lHost, i_lPort, i_lBase_dn, i_lBind_dn, i_lPassword, i_lMaps, i_lSearch, i_lData any;

                self.i_lName := self.f_lName.ufl_value;
                if (self.i_lName <> '')
                {
                  select LS_HOST,
                         LS_PORT,
                         LS_BASE_DN,
                         LS_BIND_DN,
                         LS_PASSWORD,
                         deserialize (LS_MAPS)
                    into i_lHost,
                         i_lPort,
                         i_lBase_dn,
                         i_lBind_dn,
                         i_lPassword,
                         i_lMaps
                    from LDAP..LDAP_SERVERS
                   where LS_NAME = self.i_lName
                     and LS_USER_ID = self.u_id;

                  connection_set ('LDAP_VERSION', 2);
                  tmp := split_and_decode (i_lBind_dn, 0, '\0\0\,');
                  i_lSearch := '(cn=*)';
                  if (length (tmp) > 0)
                    i_lSearch := tmp[0];

                  i_lData := ldap_search ('ldap://' || i_lHost || ':' || i_lPort, 0, i_lBase_dn, i_lSearch, i_lBind_dn, i_lPassword);
                  for (N := 0; N < length (i_lData); N := N + 2)
                  {
            	      if (i_lData [N] = 'entry')
            	      {
            	        data := i_lData [N+1];

                      self.iTitle := self.check_title (self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_TITLE')));
                      self.iName := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_FULL_NAME'));
                      self.iFirstName := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_FIRST_NAME'));;
                      self.iFamily_name := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_LAST_NAME'));;
                      self.iMbox := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_MAIL'));;
                      self.iGender := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_GENDER'));;
                      self.iLat := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_H_LAT'));;
                      self.iLng := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_H_LNG'));;
                      self.iIcqChatID := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_ICQ'));;
                      self.iMsnChatID := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_MSN'));;
                      self.iAimChatID := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_AIM'));;
                      self.iYahooChatID := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_YAHOO'));;
                      self.iWorkplaceHomepage := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_B_WEB'));;
                      self.iHomepage := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_WEB'));;
                      self.iPhone := self.ldap2_data (data, self.ldap2_pattern (i_lMaps, 'P_H_PHONE'));;
                      self.iResume := null;
                      self.iInterests := null;
                      self.iTopicInterests := null;
                      self.iOnlineAccounts := null;
                      self.iSameAs := null;
                      self.iTags := null;

                      self.iMode := 2;
                      goto _exit2;
                    }
                  }
                }
              _exit2:;
                if (self.iMode = 0)
                {
                  self.vc_is_valid := 0;
                  self.vc_error_message := 'The specified LDAP server doesn\'t contains personal data.';
                } else {
                  control.vc_data_bind (e);
                }
              }
            } else {
              declare params any;

              params := e.ve_params;

              --DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_BIRTHDAY', dt);
              if (get_keyword ('cb_item_iTitle', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_TITLE', self.iTitle);
              if (get_keyword ('cb_item_iFirstName', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_FIRST_NAME', self.iFirstName);
              if (get_keyword ('cb_item_iFamily_name', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_LAST_NAME', self.iFamily_name);
              if (get_keyword ('cb_item_iName', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_FULL_NAME', self.iName);
              if (get_keyword ('cb_item_iMBox', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'E_MAIL', self.iMBox);
              if (get_keyword ('cb_item_iGender', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_GENDER', self.iGender);
              if (get_keyword ('cb_item_iHomepage', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_WEBPAGE', self.iHomepage);

              if (get_keyword ('cb_item_iIcqChatID', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_ICQ', self.iIcqChatID);
              if (get_keyword ('cb_item_iAimChatID', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_AIM', self.iAimChatID);
              if (get_keyword ('cb_item_iYahooChatID', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_YAHOO', self.iYahooChatID);
              if (get_keyword ('cb_item_iMsnChatID', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_MSN', self.iMsnChatID);

              if (get_keyword ('cb_item_iWorkplaceHomepage', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_BORG_HOMEPAGE', self.iWorkplaceHomepage);
              if (get_keyword ('cb_item_iPhone', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_HPHONE', self.iPhone);
              if (get_keyword ('cb_item_iLng', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_LAT', self.iLat);
              if (get_keyword ('cb_item_iLng', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_LNG', self.iLng);
              if (get_keyword ('cb_item_iTags', params, '0') = '1')
                if (not isnull (self.iTags))
                {
                  self.iTags := DB.DBA.WA_TAG_PREPARE(self.iTags);
                  if (DB.DBA.WA_VALIDATE_TAGS(self.iTags))
                    WA_USER_TAG_SET(http_nobody_uid(), self.u_id, self.iTags);
                }
              if (get_keyword ('cb_item_iSameAs', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_FOAF', self.iSameAs);
              if (get_keyword ('cb_item_iResume', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_RESUME', self.iResume);
              if (get_keyword ('cb_item_iInterests', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_INTERESTS', self.iInterests);
              if (get_keyword ('cb_item_iTopicInterests', params, '0') = '1')
                DB.DBA.WA_USER_EDIT (self.u_name, 'WAUI_INTEREST_TOPICS', self.iTopicInterests);
              if (get_keyword ('cb_item_iOnlineAccounts', params, '0') = '1')
                if (length (self.iOnlineAccounts))
                {
                  delete from DB.DBA.WA_USER_OL_ACCOUNTS where WUO_U_ID = self.u_id;
                  for (select fld1, fld2 from DB.DBA.WA_USER_INTERESTS (txt) (fld1 varchar, fld2 varchar) P where txt = self.iOnlineAccounts) do
              	  {
              	    if (length (fld1))
              	    {
                      insert into DB.DBA.WA_USER_OL_ACCOUNTS ( WUO_NAME, WUO_URL, WUO_U_ID, WUO_TYPE)
                        values (fld1, fld2, self.u_id, 'P');
              	    }
              	  }
                }
              commit work;
 		          self.vc_redirect ('uiedit.vspx?page=1');
            }
          ]]>
        </v:on-post>
      </v:button>
      <v:button name="user_s_personal" xhtml_id="user_s_personal" value="Save" action="simple" xhtml_onclick="return validateInputs(this);" xhtml_style="display: none;">
        <v:on-post>
          <![CDATA[
            self.iMode := 0;
            self.savePersonal();
          ]]>
        </v:on-post>
      </v:button>
      <v:button name="user_sn_personal" xhtml_id="user_sn_personal" value="Save and Next" action="simple" xhtml_onclick="return validateInputs(this);" xhtml_style="display: none;">
        <v:on-post>
          <![CDATA[
            self.iMode := 0;
            self.savePersonal();
            if (self.vc_is_valid)
 		        self.vc_redirect ('uiedit.vspx?page=2');
                      ]]>
                    </v:on-post>
    </v:button>
    </div>
  </v:form>
</v:page>
