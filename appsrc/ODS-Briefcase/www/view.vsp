<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2006 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
?>
<?vsp
  declare auth_uid, auth_pwd, mode, file, uri, req_header, res_header, content, contentType varchar;

  mode := get_keyword('mode', params, '');
  file := get_keyword('file', params);
  auth_uid := ODRIVE.WA.session_user(params);
  auth_pwd := coalesce((SELECT U_PWD FROM WS.WS.SYS_DAV_USER WHERE U_NAME = auth_uid), '');
  if (auth_pwd[0] = 0)
    auth_pwd := pwd_magic_calc(auth_uid, auth_pwd, 1);

  commit work;

  uri := ODRIVE.WA.http_escape(ODRIVE.WA.odrive_host_url() || file, 7);
  -- dbg_obj_print('view ', uri);
  req_header := '';
  req_header := concat(req_header, 'Accept-Charset: UTF-8,*\n');
  req_header := concat(req_header, 'Keep-Alive: 300\n');
  req_header := concat(req_header, 'Connection: keep-alive\n');
  req_header := concat(req_header, 'Accept: image/png,*/*;q=0.5\n');
  req_header := concat(req_header, sprintf('Authorization: Basic %s\n', encode_base64(concat(auth_uid, ':', auth_pwd))));

  content := http_get (uri, res_header, 'GET', req_header, '');
  contentType := http_request_header (res_header, 'Content-type');

  http_rewrite();
  if ((contentType = 'text/plain') and (mode <> 'download')) {
    http_header (sprintf('Content-Type: %s\r\n', 'text/html'));
    http('<html><body><pre>\r\n');
    http(content);
    http('\r\n</pre></body></html>');
  } else if (((contentType = 'text/xml') or (contentType = 'text/html')) and (mode <> 'download')) {
    http_header (sprintf('Content-Type: %s\r\n', contentType));
    http(content);
  } else {
    declare pos integer;

    pos := strrchr (file, '/');
    if (pos is not null)
      file := subseq (file, pos + 1);
    http_header (sprintf ('Content-type: %s\r\nContent-Disposition: inline; filename="%s"\r\n', contentType, file));
    http(content);
  }
  http_flush();
?>
