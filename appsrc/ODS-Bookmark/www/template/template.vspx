<!-- $Id$ -->
<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:v="http://www.openlinksw.com/vspx/" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <link rel="alternate" type="application/rss+xml" title="Virtuoso Screencast Demos" href="http://support.openlinksw.com/viewlets/virtuoso_viewlets_rss.vsp" />
    <link rel="alternate" type="application/rss+xml" title="Virtuoso Tutorials" href="http://demo.openlinksw.com/tutorial/rss.vsp" />
    <link rel="alternate" type="application/rss+xml" title="Virtuoso Product Blog (RSS 2.0)" href="http://www.openlinksw.com/weblogs/virtuoso/gems/rss.xml" />
    <link rel="alternate" type="application/atom+xml" title="Virtuoso Product Blog (Atom)" href="http://www.openlinksw.com/weblogs/virtuoso/gems/atom.xml" />
    <link rel="alternate" type="application/rss+xml" title="ODBC for Mac OS X Screencast Demos"	href="http://support.openlinksw.com/viewlets/mac_uda_viewlets_rss.vsp" />
    <link rel="alternate" type="application/rss+xml" title="Data Access Drivers Screencast Demos" href="http://support.openlinksw.com/viewlets/uda_viewlets_rss.vsp" />
    <link rel="alternate" type="application/rss+xml" title="Benchmark & Troubleshooting Utilities Screencasts" href="http://support.openlinksw.com/viewlets/utilities_viewlets_rss.vsp" />
    <?vsp
      declare url varchar;
      declare N integer;
      url := concat('http://', http_request_header (lines, 'Host'));
      for (N := 0; N < length(path)-1; N := N + 1)
        url := concat(url, '/', path[N]);
      http(sprintf('<link rel="subscriptions" type="text/x-opml" title="Subscriptions" href="%s/export.vspx?output=OPML&aid=%d&did=%d" />', url, self.account_id, self.domain_id));
    ?>
    <link rel="stylesheet" href="css/style.css" type="text/css"/>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <script language="JavaScript" src="js/bookmark.js" />
    <?vsp http('</script>'); ?>
    <title></title>
  </head>
  <body>
    <v:page xmlns:v="http://www.openlinksw.com/vspx/">
      <vm:variables>
        <v:variable persist="0" name="domain_id" type="integer" default="-1"/>
        <v:variable persist="0" name="account_id" type="integer" default="-1"/>
        <v:variable persist="0" name="account_role" type="varchar" default="'public'"/>
        <v:variable persist="0" name="accountName" type="varchar" default="'Public User'"/>
      </vm:variables>
      <v:on-init>
        <![CDATA[
          declare aRequest, aSessInfo any;
          declare sCharset, sBrwCharset varchar;

          SET ISOLATION = 'Commited';

          -- Initialize variables
          aRequest := BMK.WA.validate_request(lines,0);

          -- Charset
          sBrwCharset := http_request_header(lines, 'Accept-Charset', null);
          if (sBrwCharset)
            sCharset := regexp_match('[^,;$]*',sBrwCharset);
          else
            sCharset := 'UTF-8';
          if (not position(upper(sCharset), charsets_list(0)))
            sCharset := 'UTF-8';
          exec(sprintf('SET CHARSET = ''%s''',sCharset));
          exec(sprintf('SET HTTP_CHARSET = ''%s''',sCharset));

          aSessInfo := BMK.WA.session_restore(aRequest, params, lines);
          self.domain_id := cast(get_keyword('domain_id', aSessInfo, '-1') as integer);
          self.account_id := cast(get_keyword('user_id', aSessInfo, '-1') as integer);
          self.account_role := get_keyword('user_role', aSessInfo, '');
          self.accountName := get_keyword('user_name', aSessInfo, '');
        ]]>
      </v:on-init>

      <v:after-data-bind>
        <![CDATA[
          if (BMK.WA.frozen_check(self.domain_id)) {
            declare freeze_page varchar;
            freeze_page := BMK.WA.frozen_page(self.domain_id);
            if (freeze_page is null or freeze_page = '' or freeze_page = 'default') {
              http_rewrite ();
              http_request_status ('HTTP/1.1 404 Not found');
              http (sprintf('<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><HTML><head><TITLE>404 Not Found</TITLE></HEAD><body><H1>Not Found</H1>Resource %s not found.</BODY></HTML>', http_path (BMK.WA.page_name())));
              http_flush();
              return;
            }
            http_rewrite ();
            http_request_status ('HTTP/1.1 302 Found');
            http_header(sprintf('Location: %s\r\n\r\n', freeze_page));
            http_flush();
            return;
          }
        ]]>
      </v:after-data-bind>

      <v:placeholder />
    </v:page>
  </body>
</html>
