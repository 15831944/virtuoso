<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2006 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="users" decor="template/popup.vspx" style="template/template.xsl" fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

  <v:method name="sortColumn" arglist="in titleName varchar, in columnName varchar">
    <![CDATA[
      declare altStr, directionStr, imageStr varchar;

      if (self.v_order = columnName and self.v_direction = 'desc')
      {
        directionStr := 'Ascending';
        imageStr := '&nbsp;<img src="image/d.gif" border="0" alt="Down"/>';
      }
      else if (self.v_order = columnName and self.v_direction = 'asc')
      {
        directionStr := 'Descending';
        imageStr := '&nbsp;<img src="image/u.gif" border="0" alt="Up"/>';
      }
      else
      {
        directionStr := 'Ascending';
        imageStr := '&nbsp;&nbsp;';
      }
      altStr := sprintf('Sort Rows on %s in %s Order', titleName, directionStr);
      http(sprintf('<a href="#" onClick="javascript: myPost(''F1'', ''sortColumn'', ''%s''); return false;" alt="%s" title="%s">%s%s</a>', columnName, altStr, altStr, titleName, imageStr));
    ]]>
  </v:method>

  <v:method name="sortChange" arglist="in columnName varchar">
    <![CDATA[
      if (columnName <> '')
      {
      self.ds.vc_reset();
        if (self.v_order = columnName)
        {
        self.v_direction := either(equ(self.v_direction, 'asc'), 'desc', 'asc');
      } else {
        self.v_direction := 'asc';
      self.v_order := columnName;
        }
      }
    ]]>
  </v:method>

  <v:method name="isMultiple" arglist="in dst any">
    <![CDATA[
      return case when isnull (strstr (self.v_dst, 'm')) then 0 else 1 end;
    ]]>
  </v:method>

    <v:before-data-bind>
      <![CDATA[
      self.v_filter := case when (self.v_mode = 'g') then 'g' else 'u' end;
      ]]>
    </v:before-data-bind>

  <vm:pagetitle>Select User/Group</vm:pagetitle>

  <vm:popup_pagewrapper>
    <vm:variables>
      <v:variable name="v_params" param-name="params" type="varchar"/>
      <v:variable name="v_mode" persist="0" param-name="mode" type="varchar" default="''"/>
      <v:variable name="v_filter" persist="0" type="varchar" default="''"/>
      <v:variable name="v_value" persist="0" type="varchar" default="''"/>
      <v:variable name="v_mask" persist="0" type="varchar" default="''"/>
      <v:variable name="v_how" persist="0" type="varchar" default="'1'"/>
      <v:variable name="v_order" persist="0" type="varchar" default="'U_NAME'" />
      <v:variable name="v_direction" persist="0" type="varchar" default="'asc'" />
      <v:variable name="v_src" persist="0" param-name="src" type="varchar" default="''" />
      <v:variable name="v_dst" persist="0" param-name="dst" type="varchar" default="'sc'" />
      <v:variable name="v_s1" persist="0" param-name="s1" type="varchar" default="''" />
      <v:variable name="v_s2" persist="0" param-name="s2" type="varchar" default="''" />
    </vm:variables>
    <vm:pagebody>
      <?vsp http(sprintf('<input type="hidden" name="sid"   id="sid"   value="%s"/>', get_keyword('sid', self.vc_page.vc_event.ve_params))); ?>
      <?vsp http(sprintf('<input type="hidden" name="realm" id="realm" value="%s"/>', get_keyword('realm', self.vc_page.vc_event.ve_params))); ?>
      <?vsp http(sprintf('<input type="hidden" name="src"   id="src"   value="%s"/>', get_keyword('src', self.vc_page.vc_event.ve_params, ''))); ?>
      <?vsp http(sprintf('<input type="hidden" name="dst"   id="dst"   value="%s"/>', get_keyword('dst', self.vc_page.vc_event.ve_params, 'sc'))); ?>
      <?vsp http(sprintf('<input type="hidden" name="s1"    id="s1"    value="%s"/>', get_keyword('s1', self.vc_page.vc_event.ve_params, ''))); ?>
      <?vsp http(sprintf('<input type="hidden" name="s2"    id="s2"    value="%s"/>', get_keyword('s2', self.vc_page.vc_event.ve_params, ''))); ?>
      <v:text name="params" type="hidden" value="--self.v_params"/>
      <div class="boxHeader">
        Show
        <v:select-list name="filter" value="--self.v_filter" enabled="-- case when (self.v_mode = '') then 1 else 0 end">
          <v:item name="Users & Groups" value="" />
          <v:item name="Users" value="u" />
          <v:item name="Groups" value="g" />
        </v:select-list>
        <v:select-list name="how" value="--self.v_how">
          <v:item name="Starting with" value="1" />
          <v:item name="Containing" value="2" />
          <v:item name="Ending with" value="3" />
          <v:item name="Exact match" value="4" />
        </v:select-list>
        <v:text name="value" value="--self.v_value" xhtml_size="15"/>
        <v:button action="simple" value="Filter" xhtml_class="button">
          <v:on-post>
            <![CDATA[
              self.v_filter := get_keyword ('filter', e.ve_params, self.v_filter);
              self.v_how := self.how.ufl_value;
              self.v_value := trim(self.value.ufl_value);
              self.vc_data_bind (e);
            ]]>
          </v:on-post>
        </v:button>
        <v:button name="reset" action="simple" value="Clear" xhtml_class="button">
          <v:on-post>
            <![CDATA[
              self.v_how := '1';
              self.v_value := '';
              self.vc_data_bind (e);
            ]]>
          </v:on-post>
        </v:button>
      </div>
      <v:data-source name="dsrc" expression-type="sql" nrows="0" initial-offset="0">
        <v:before-data-bind>
          <![CDATA[
            declare user_sql, group_sql varchar;

            self.v_mask := case self.v_how
                             when '1' then self.v_value || '%'
                             when '2' then '%' || self.v_value || '%'
                             when '3' then '%' || self.v_value
                             else self.v_value end;
            if (self.v_mask = '')
              self.v_mask := '%';
            self.v_mask := replace(self.v_mask, '%%', '%');

            group_sql := '';
            if (self.v_mode = 's')
            {
              user_sql := sprintf('select ''User'' U_TYPE, U_NAME, coalesce(U_FULL_NAME, \'\') U_FULL_NAME from BMK.WA.GRANTS, DB.DBA.SYS_USERS where (U_ACCOUNT_DISABLED=0) and upper(U_NAME) like upper(\'%s\') and G_GRANTEE_ID = %d and G_GRANTER_ID = U_ID', self.v_mask, self.account_id);
            } else {
              user_sql := sprintf('select ''User'' U_TYPE, U_NAME, coalesce(U_FULL_NAME, \'\') U_FULL_NAME from WS.WS.SYS_DAV_USER where (U_ACCOUNT_DISABLED=0) and (upper(U_NAME) like upper(\'%s\') and (U_ID<>5) and (U_ID<>6) and (U_ID<>%d))', self.v_mask, self.account_id);
            }
            if (user_sql = '')
            {
              control.ds_sql := group_sql;
            } else if (group_sql = '') {
              control.ds_sql := user_sql;
            } else {
              control.ds_sql := concat('select U_TYPE, U_NAME, U_FULL_NAME from (', user_sql, ' union ' , group_sql, ') x ');
            }
            self.sortChange(get_keyword('sortColumn', e.ve_params, ''));
            control.ds_nrows := BMK.WA.settings_rows (self.settings);
            control.ds_sql := concat(control.ds_sql, ' order by ', self.v_order, ' ', self.v_direction);
          ]]>
        </v:before-data-bind>
        <v:after-data-bind>
          control.ds_make_statistic ();
        </v:after-data-bind>
      </v:data-source>
      <v:data-set name="ds" data-source="self.dsrc" scrollable="1">
        <v:template name="ds_header" type="simple" name-to-remove="table" set-to-remove="bottom">
          <table id="users" class="BMK_grid" cellspacing="0">
            <thead class="sortHeader">
              <tr>
                <vm:if test="self.isMultiple(self.v_dst)">
                  <th class="checkbox" width="1%">
                    <?vsp
                      http('<input type="checkbox" name="cb_all" value="Select All" onclick="selectAllCheckboxes(this, ''cb_item''); updateChecked(this, ''cb_item''); "/>');
                    ?>
                  </th>
                </vm:if>
                <vm:if test="self.v_mode = ''">
                  <th>
                    Type
                  </th>
                </vm:if>
                <th>
                  <?vsp self.sortColumn('Name', 'U_NAME'); ?>
                </th>
                <th>
                  <?vsp self.sortColumn('Description', 'U_FULL_NAME'); ?>
                </th>
              </tr>
            </thead>
          </table>
        </v:template>

        <v:template name="ds_repeat" type="repeat" name-to-remove="" set-to-remove="">

          <v:template name="ds_empty" type="if-not-exists" name-to-remove="table" set-to-remove="both">
            <table>
              <tr align="center">
                <td colspan="<?V either(equ(self.v_mode,''),3,2)+self.isMultiple(self.v_dst) ?>">
                  No records
                </td>
              </tr>
            </table>
          </v:template>

          <v:template name="ds_browse" type="browse" name-to-remove="table" set-to-remove="both">
            <table>
              <tr onclick="rowSelected(this);" class="pointer">
                <vm:if test="self.isMultiple(self.v_dst)">
                  <td  align="center">
                    <?vsp
                      declare S, name any;

                      name := (control as vspx_row_template).te_column_value('U_NAME');
                      S := case when isnull (strstr(self.v_s1, concat(name, ','))) then '' else 'checked="checked"' end;
                      http (sprintf ('<input type="checkbox" name="cb_item" value="%s" %s onclick="updateChecked(this, ''cb_item'', event); " />', name, S));
                    ?>
                  </td>
                </vm:if>
                <vm:if test="self.v_mode = ''">
                  <td nowrap="nowrap">
                    <v:label value="--(control.vc_parent as vspx_row_template).te_column_value('U_TYPE')" format="%s"/>
                  </td>
                </vm:if>
                <td nowrap="nowrap">
                  <input name="s1_item" type="hidden" value="<?V (control as vspx_row_template).te_column_value('U_NAME') ?>" />
                  <v:label value="--(control.vc_parent as vspx_row_template).te_column_value('U_NAME')" format="%s"/>
                </td>
                <td nowrap="nowrap">
                  <input name="s2_item" type="hidden" value="<?V (control as vspx_row_template).te_column_value('U_FULL_NAME') ?>" />
                  <v:label value="--(control.vc_parent as vspx_row_template).te_column_value('U_FULL_NAME')" format="%s"/>
                </td>
              </tr>
            </table>
          </v:template>

        </v:template>

        <v:template type="simple" name-to-remove="table" set-to-remove="top">
          <table>
            <tr align="center">
              <td colspan="<?V either(equ(self.v_mode,''),3,2)+self.isMultiple(self.v_dst) ?>">
                <vm:ds-navigation data-set="ds"/>
              </td>
            </tr>
          </table>
        </v:template>

      </v:data-set>
      <vm:if test="self.isMultiple(self.v_dst)">
        <div style="padding: 0 0 0.5em 0;">
          <hr />
          <a href="#" onclick="javascript: addChecked(document.forms['F1'], 'cb_item', 'No users were selected for addition.');" class="button2">&amp;nbsp;Add selected</a>
        </div>
      </vm:if>
      <script>
        <![CDATA[
          coloriseTable('users');
        ]]>
      </script>
    </vm:pagebody>
  </vm:popup_pagewrapper>
</v:page>
