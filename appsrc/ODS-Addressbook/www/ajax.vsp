<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2008 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--

  declare exit handler for SQLSTATE '*'
  {
    dbg_obj_print (__SQL_STATE, __SQL_MESSAGE);
    resignal;
  };

  declare domain_id, account_id integer;
  declare sid, realm, action, subAction any;
  declare aSession any;

  sid := get_keyword ('sid', params, '');
  realm := get_keyword ('realm', params, '');

  action := get_keyword ('a', params, '');
  subAction := get_keyword ('sa', params, '');

  aSession   := AB.WA.session_restore (params);
  domain_id  := cast (get_keyword('domain_id', aSession, '0') as integer);
  account_id := cast (get_keyword('account_id', aSession, '0') as integer);

  if (action = 'load')
  {
    declare progressID, progressIndex any;

    progressID := cast (get_keyword ('id', params, msec_time()) as varchar);
    progressIndex := registry_get ('addressbook_index_' || progressID);
	  if (subAction = 'stop')
	  {
	    registry_set ('addressbook_action_' || progressID, 'stop');
	  }
	  else if (subAction = 'state')
	  {
      if (not (isinteger(progressIndex) and (progressIndex = 0)))
      {
        http_rewrite ();
        http_header ('Content-Type: text/xml\r\n');
        http('<root>');
        http(sprintf('<index>%s</index>', cast (progressIndex as varchar)));
        http('</root>');
      }
	  }
	  else if (subAction = 'init')
	  {
	    registry_set ('addressbook_index_' || progressID, '0');

	    http_rewrite ();
	    http_header ('Content-Type: text/xml\r\n');
	    http ('<root>');
	    http (sprintf ('<id>%s</id>', cast (progressID as varchar)));
	    http ('</root>');
	    http_flush ();
      commit work;

      declare i_type, i_data, i_options, i_validation any;

      i_type := deserialize (decode_base64 (get_keyword ('i_type', params)));
      i_data := deserialize (decode_base64 (get_keyword ('i_data', params)));
      i_options := deserialize (decode_base64 (get_keyword ('i_options', params)));
      i_validation := deserialize (decode_base64 (get_keyword ('i_validation', params)));

      -- import
      {
        declare exit handler for sqlstate '*'
        {
        	goto _end;
        };
        AB.WA.import (domain_id, i_type, i_data, i_options, i_validation, progressID);
      }
	  _end:;

	    registry_remove ('addressbook_index_'  || progressID);
	    registry_remove ('addressbook_action_' || progressID);
	  }
	}
  else if (action = 'about')
  {
    http (         '<div style="padding: 1em;">');
    http (         '<table style="width: 100%;">');
    http (         '  <tr>');
    http (         '    <td align="right" width="50%">');
    http (         '      <b>Server Version:</b>');
    http (         '    </td>');
    http (         '    <td>');
    http (sprintf ('      %s', sys_stat('st_dbms_ver')));
    http (         '    </td>');
    http (         '  </tr>');
    http (         '  <tr>');
    http (         '    <td align="right">');
    http (         '      <b>Server Build Date:</b>');
    http (         '    </td>');
    http (         '    <td>');
    http (sprintf ('      %s', sys_stat('st_build_date')));
    http (         '  </tr>');
    http (         '  <tr><td align="center" colspan="2"><hr /><td></tr>');
    http (         '  <tr>');
    http (         '    <td align="right">');
    http (         '      <b>ODS AddressBook Version:</b>');
    http (         '    </td>');
    http (         '    <td>');
    http (sprintf ('      %s', registry_get('ab_version')));
    http (         '    </td>');
    http (         '  </tr>');
    http (         '  <tr>');
    http (         '    <td align="right">');
    http (         '     <b>ODS AddressBook Build Date:</b>');
    http (         '    </td>');
    http (         '    <td>');
    http (sprintf ('     %s', registry_get('ab_build')));
    http (         '    </td>');
    http (         '  </tr>');
    http (         '  <tr><td align="center" colspan="2"><hr /><td></tr>');
    http (         '  <tr>');
    http (         '    <td align="center" colspan="2">');
    http (         '      <input type="button" value="OK" onclick="javascript: aboutDialog.hide(); return false;" />');
    http (         '    <td>');
    http (         '  </tr>');
    http (         '</table>');
    http (         '</div>');
  }

?>