/* ANSI-C code produced by gperf version 2.7.2 */
/* Command-line: /usr/bin/gperf -aCDGptr -Kkeiiyword -L ANSI-C -k'1,2,3,6,9,$' -Nlex_hash_kw sqlwords.gperf  */
struct keyword { char *keiiyword; int token; };

#define TOTAL_KEYWORDS 280
#define MIN_WORD_LENGTH 1
#define MAX_WORD_LENGTH 17
#define MIN_HASH_VALUE 371
#define MAX_HASH_VALUE 2490
/* maximum key range = 2120, duplicates = 1 */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
hash (register const char *str, register unsigned int len)
{
  static const unsigned short asso_values[] =
    {
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491,  223,  494,  488,  229,  463,
       357,  262,   33,  224,   80,  344,  317,  332,  226,  313,
       336,  218,  490,  244,   38,   45,   47,  483,  178,  173,
      2491, 2491, 2491, 2491, 2491,  217, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,
      2491, 2491, 2491, 2491, 2491, 2491
    };
  register int hval = len;

  switch (hval)
    {
      default:
      case 9:
        hval += asso_values[(unsigned char)str[8]];
      case 8:
      case 7:
      case 6:
        hval += asso_values[(unsigned char)str[5]];
      case 5:
      case 4:
      case 3:
        hval += asso_values[(unsigned char)str[2]];
      case 2:
        hval += asso_values[(unsigned char)str[1]];
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval + asso_values[(unsigned char)str[len - 1]];
}

static const struct keyword wordlist[] =
  {
    {"ATTACH", ATTACH},
    {"OUT", OUT_L},
    {"INT", INTEGER},
    {"HASH", HASH},
    {"START", START_L},
    {"JAVA", JAVA},
    {"NOT", NOT},
    {"TO", TO},
    {"IN", IN_L},
    {"AS", AS},
    {"IS", IS},
    {"DATA", DATA},
    {"TEXT", TEXT_L},
    {"UNION", UNION},
    {"DTD", DTD},
    {"THEN", THEN},
    {"ON", ON},
    {"SNAPSHOT", SNAPSHOT},
    {"XPATH", XPATH},
    {"INSERT", INSERT},
    {"USING", USING},
    {"WITH", WITH},
    {"SET", SET},
    {"ANY", ANY},
    {"INTO", INTO},
    {"INOUT", INOUT_L},
    {"INTERSECT", INTERSECT},
    {"INPUT", INPUT},
    {"HAVING", HAVING},
    {"WITHOUT", WITHOUT_L},
    {"BY", BY},
    {"JOIN", JOIN},
    {"NO", NO_L},
    {"DO", DO},
    {"INTERVAL", INTERVAL},
    {"INDEX", INDEX},
    {"SHUTDOWN", SHUTDOWN},
    {"GO", GO},
    {"OUTER", OUTER},
    {"FETCH", FETCH},
    {"ADA", ADA},
    {"EXIT", EXIT},
    {"NULL", NULLX},
    {"AND", AND},
    {"ADD", ADD},
    {"STYLE", STYLE},
    {"GOTO", GOTO},
    {"IF", IF},
    {"FOUND", FOUND},
    {"SOFT", SOFT},
    {"DATE", DATE_L},
    {"MUMPS", MUMPS},
    {"DISTINCT", DISTINCT},
    {"TIES", TIES},
    {"C", C},
    {"UNDER", UNDER},
    {"CAST", CAST},
    {"TYPE", TYPE},
    {"ADMIN", ADMIN_L},
    {"GRANT", GRANT},
    {"RIGHT", RIGHT},
    {"TOP", TOP},
    {"NVARCHAR", NVARCHAR},
    {"OF", OF},
    {"FLOAT", FLOAT_L},
    {"NATURAL", NATURAL},
    {"INTERNAL", INTERNAL},
    {"FULL", FULL},
    {"VALUE", VALUE},
    {"QUIETCAST", QUIETCAST_L},
    {"TIME", TIME},
    {"KEYSET", KEYSET},
    {"SMALLINT", SMALLINT},
    {"ALTER", ALTER},
    {"VALUES", VALUES},
    {"FUNCTION", FUNCTION},
    {"OLD", OLD},
    {"SQL", SQL_L},
    {"PLI", PLI},
    {"SELECT", SELECT},
    {"AFTER", AFTER},
    {"LONG", LONG_L},
    {"FINAL", FINAL_L},
    {"SYNC", SYNC},
    {"OPTION", OPTION},
    {"XML", XML},
    {"LEVEL", LEVEL_L},
    {"END", ENDX},
    {"INSTEAD", INSTEAD},
    {"KEY", KEY},
    {"LOG", LOGX},
    {"INNER", INNER},
    {"ALL", ALL},
    {"LEFT", LEFT},
    {"DATETIME", DATETIME},
    {"WHILE", WHILE},
    {"WHEN", WHEN},
    {"EXCEPT", EXCEPT},
    {"EXTRACT", EXTRACT},
    {"COMMIT", COMMIT},
    {"SCHEMA", SCHEMA},
    {"USE", USE},
    {"VIEW", VIEW},
    {"TABLE", TABLE},
    {"MODIFY", MODIFY},
    {"EXTERNAL", EXTERNAL},
    {"CHAR", CHARACTER},
    {"NCHAR", NCHAR},
    {"BEST", BEST},
    {"USER", USER},
    {"NAME", NAME_L},
    {"AUTHORIZATION", AUTHORIZATION},
    {"RESULT", RESULT},
    {"ISOLATION", ISOLATION_L},
    {"LOOP", LOOP},
    {"__SOAP_FAULT", __SOAP_FAULT},
    {"SAFE", SAFE_L},
    {"CURRENT", CURRENT},
    {"OR", OR},
    {"BINARY", BINARY},
    {"METHOD", METHOD},
    {"NULLIF", NULLIF},
    {"TIMESTAMP", TIMESTAMP},
    {"IDENTITY", IDENTITY},
    {"NUMERIC", NUMERIC},
    {"SYSTEM", SYSTEM},
    {"CHECK", CHECK},
    {"PURGE", PURGE},
    {"VARBINARY", VARBINARY},
    {"OPEN", OPEN},
    {"DYNAMIC", DYNAMIC},
    {"CALL", CALL},
    {"MODIFIES", MODIFIES},
    {"POSITION", POSITION_L},
    {"LIKE", LIKE},
    {"PASSWORD", PASSWORD},
    {"INCREMENT", INCREMENT_L},
    {"SOME", SOME},
    {"EXISTS", EXISTS},
    {"PREFETCH", PREFETCH},
    {"UNCOMMITTED", UNCOMMITTED_L},
    {"DROP", DROP},
    {"ARRAY", ARRAY},
    {"SELF", SELF_L},
    {"ASSEMBLY", ASSEMBLY_L},
    {"OFF", OFF},
    {"INSTANCE", INSTANCE_L},
    {"OBJECT_ID", OBJECT_ID},
    {"__SOAP_HTTP", __SOAP_HTTP},
    {"IRI_ID", IRI_ID},
    {"GROUP", GROUP},
    {"READ", READ_L},
    {"DEFAULT", DEFAULT},
    {"CASE", CASE},
    {"READS", READS},
    {"UNIQUE", UNIQUE},
    {"DESC", DESC},
    {"TRANSACTION", TRANSACTION_L},
    {"HANDLER", HANDLER},
    {"PASCAL", PASCAL_L},
    {"SPARQL", SPARQL_L},
    {"ASC", ASC},
    {"WHERE", WHERE},
    {"INTEGER", INTEGER},
    {"RETURN", RETURN},
    {"BEGIN", BEGINX},
    {"DISCONNECT", DISCONNECT},
    {"LANGUAGE", LANGUAGE},
    {"RESTRICT", RESTRICT},
    {"RETURNS", RETURNS},
    {"SQLSTATE", SQLSTATE},
    {"SQLCODE", SQLCODE},
    {"VARCHAR", VARCHAR},
    {"STATIC", STATIC_L},
    {"ELSE", ELSE},
    {"CALLED", CALLED},
    {"CUBE", CUBE},
    {"FROM", FROM},
    {"REAL", REAL},
    {"GENERAL", GENERAL},
    {"CONTAINS", CONTAINS},
    {"AUTOREGISTER", AUTOREGISTER_L},
    {"DOUBLE", DOUBLE_L},
    {"WHENEVER", WHENEVER},
    {"ORDER", ORDER},
    {"UNRESTRICTED", UNRESTRICTED_L},
    {"SOURCE", SOURCE},
    {"CROSS", CROSS},
    {"UPDATE", UPDATE},
    {"SQLEXCEPTION", SQLEXCEPTION},
    {"OVERRIDING", OVERRIDING},
    {"GROUPING", GROUPING},
    {"PERCENT", PERCENT},
    {"CONVERT", CONVERT},
    {"COLUMN", COLUMN},
    {"CLOSE", CLOSE},
    {"ROLE", ROLE_L},
    {"CHECKPOINT", CHECKPOINT},
    {"__SOAP_OPTIONS", __SOAP_OPTIONS},
    {"EXECUTE", EXECUTE},
    {"FORTRAN", FORTRAN},
    {"COBOL", COBOL},
    {"COLLATE", COLLATE},
    {"WORK", WORK},
    {"INCREMENTAL", INCREMENTAL},
    {"COMMITTED", COMMITTED_L},
    {"CURRENT_TIMESTAMP", CURRENT_TIMESTAMP},
    {"GENERATED", GENERATED},
    {"ARE", ARE},
    {"REXECUTE", REXECUTE},
    {"FOR", FOR},
    {"CASCADE", CASCADE},
    {"FOREIGN", FOREIGN},
    {"NEW", NEW},
    {"__SOAP_TYPE", __SOAP_TYPE},
    {"REF", REF},
    {"ENCODING", ENCODING},
    {"TEMPORARY", TEMPORARY},
    {"CHECKED", CHECKED},
    {"FOREACH", FOREACH},
    {"BETWEEN", BETWEEN},
    {"ROLLBACK", ROLLBACK},
    {"LIBRARY", LIBRARY_L},
    {"__SOAP_NAME", __SOAP_NAME},
    {"TRIGGER", TRIGGER},
    {"__SOAP_ENC_MIME", __SOAP_ENC_MIME},
    {"PRIMARY", PRIMARY},
    {"CONTINUE", CONTINUE},
    {"VARIABLE", VARIABLE},
    {"DECIMAL", DECIMAL_L},
    {"ATTRIBUTE", ATTRIBUTE},
    {"COALESCE", COALESCE},
    {"__SOAP_DIME_ENC", __SOAP_DIME_ENC},
    {"ELSEIF", ELSEIF},
    {"RESIGNAL", RESIGNAL},
    {"CURRENT_TIME", CURRENT_TIME},
    {"SQLWARNING", SQLWARNING},
    {"CLUSTERED", CLUSTERED},
    {"DETERMINISTIC", DETERMINISTIC},
    {"CLR", CLR},
    {"CONSTRAINT", CONSTRAINT},
    {"ROLLUP", ROLLUP},
    {"MODULE", MODULE},
    {"PERSISTENT", PERSISTENT},
    {"__SOAP_DOCW", __SOAP_DOCW},
    {"__SOAP_XML_TYPE", __SOAP_XML_TYPE},
    {"__SOAP_DOC", __SOAP_DOC},
    {"IDENTIFIED", IDENTIFIED},
    {"PUBLIC", PUBLIC},
    {"BACKUP", BACKUP},
    {"INDICATOR", INDICATOR},
    {"SPECIFIC", SPECIFIC},
    {"PERMISSION_SET", PERMISSION_SET},
    {"NONINCREMENTAL", NONINCREMENTAL},
    {"LOCATOR", LOCATOR},
    {"REVOKE", REVOKE},
    {"DELETE", DELETE_L},
    {"AGGREGATE", AGGREGATE},
    {"CURRENT_DATE", CURRENT_DATE},
    {"__SOAP_HEADER", __SOAP_HEADER},
    {"PRECISION", PRECISION},
    {"CURSOR", CURSOR},
    {"CORRESPONDING", CORRESPONDING},
    {"CONSTRUCTOR", CONSTRUCTOR},
    {"PRIVILEGES", PRIVILEGES},
    {"RENAME", RENAME},
    {"REPEATABLE", REPEATABLE_L},
    {"ESCAPE", ESCAPE},
    {"DECLARE", DECLARE},
    {"SERIALIZABLE", SERIALIZABLE_L},
    {"REMOTE", REMOTE},
    {"CHARACTER", CHARACTER},
    {"REPLICATION", REPLICATION},
    {"BEFORE", BEFORE},
    {"REFERENCING", REFERENCING},
    {"PROCEDURE", PROCEDURE},
    {"EXCLUSIVE", EXCLUSIVE},
    {"REPLACING", REPLACING},
    {"CREATE", CREATE},
    {"REFERENCES", REFERENCES}
  };

static const short lookup[] =
  {
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
        0,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,     1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,     2,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,     3,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,     4,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,     5,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,     6,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,     7,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,     8,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,     9,
       10,    -1,    -1,    11,    -1,    -1,    -1,
       12,    -1,    -1,    -1,    -1,    13,    -1,
       14,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    15,    -1,    -1,    16,    -1,    -1,
       -1,    -1,    17,    -1,    -1,    18,    19,
       -1,    -1,    -1,    20,    -1,    21,    -1,
       -1,    -1,    22,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       23,    -1,    -1,    -1,    -1,    -1,    -1,
       24,    25,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    26,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    27,    -1,    -1,    -1,
       28,    -1,    29,    -1,    -1,    -1,    -1,
       -1,    -1,    30,    -1,    -1,    -1,    -1,
       31,    -1,    -1,    -1,    -1,    -1,    -1,
       32,    -1,    -1,    33,    -1,    -1,    34,
       -1,    35,    -1,    -1,    -1,    -1,    -1,
       -1,    36,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    37,    38,    -1,    -1,    -1,    -1,
       39,    -1,    -1,    -1,    -1,    40,    -1,
       -1,    -1,    -1,    -1,    41,    -1,    42,
       43,    -1,    -1,    44,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    45,
       -1,    -1,    -1,    -1,    -1,    -1,    46,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    47,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    48,    -1,    -1,
       -1,    -1,    -1,    -1,    49,    50,    51,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    52,    -1,    -1,    -1,
       53,    -1,    -1,    -1,    54,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    55,    -1,    56,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    57,
       58,    -1,    -1,    59,    60,    -1,    -1,
       -1,    -1,    -1,    -1,    61,    62,    -1,
       63,    64,    -1,    -1,    -1,    65,    -1,
       -1,    -1,    -1,    66,    67,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    68,    -1,
       -1,    -1,    -1,    69,    70,    71,    -1,
       -1,    -1,    -1,    -1,    -1,    72,    -1,
       -1,    -1,    73,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    74,    -1,    -1,    -1,
       -1,    75,    -1,    -1,    -1,    -1,    76,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       77,    -1,    -1,    -1,    -1,    78,    -1,
       79,    -1,    -1,    -1,    -1,    -1,    -1,
       80,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    81,    -1,    -1,    -1,    -1,
       -1,    -1,    82,    -1,    -1,    -1,    -1,
       -1,    83,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    84,    -1,    85,
       -1,    86,    87,    -1,    -1,    88,    -1,
       -1,    89,    90,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    91,    -1,    -1,    -1,    -1,
       -1,    92,    -1,    93,    -1,    -1,    -1,
       -1,    -1,    94,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    95,    96,    -1,
       97,    98,    -1,    -1,    99,    -1,   100,
      101,    -1,    -1,   102,    -1,   103,    -1,
       -1,   104,    -1,    -1,    -1,   105,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   106,
       -1,    -1,    -1,   107,   108,    -1,    -1,
      109,    -1,   110,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   111,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   112,   113,
       -1,    -1,   114,    -1,    -1,    -1,   115,
       -1,    -1,    -1,   116,    -1,    -1,   117,
      118,   119,   120,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   121,
       -1,    -1,    -1,    -1,   122,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   123,   124,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   125,    -1,   126,    -1,    -1,    -1,
       -1,    -1,   127,    -1,   128,   129,    -1,
       -1,    -1,    -1,   130,    -1,   131,   132,
      133,   134,   135,    -1,   136,   137,    -1,
       -1,   138,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   139,   140,    -1,    -1,
      141,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   142,    -1,    -1,    -1,   143,
      144,   145,    -1,    -1,    -1,   146,   147,
       -1,    -1,    -1,    -1,    -1,    -1,   148,
       -1,    -1,   149,    -1,    -1,    -1,   150,
       -1,    -1,   151,    -1,   152,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   153,    -1,    -1,   154,    -1,   155,
      156,    -1,    -1,    -1,    -1,    -1,    -1,
      157,    -1,    -1,    -1,    -1,    -1,    -1,
      158, -1725,  -121,    -2,   161,   162,   163,
      164,   165,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   166,   167,    -1,    -1,
       -1,    -1,    -1,    -1,   168,   169,    -1,
       -1,    -1,    -1,   170,    -1,    -1,    -1,
       -1,   171,    -1,   172,    -1,    -1,    -1,
       -1,    -1,    -1,   173,    -1,    -1,    -1,
      174,   175,    -1,   176,    -1,   177,   178,
      179,    -1,    -1,    -1,    -1,   180,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   181,    -1,    -1,    -1,
      182,    -1,    -1,    -1,    -1,   183,    -1,
       -1,   184,   185,    -1,    -1,    -1,    -1,
       -1,   186,    -1,    -1,    -1,    -1,    -1,
      187,    -1,   188,   189,    -1,   190,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   191,   192,
       -1,   193,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   194,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   195,   196,    -1,
       -1,    -1,    -1,    -1,    -1,   197,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   198,    -1,
       -1,    -1,   199,    -1,    -1,    -1,   200,
      201,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   202,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   203,    -1,   204,    -1,
      205,    -1,   206,   207,   208,    -1,    -1,
       -1,    -1,   209,    -1,    -1,    -1,    -1,
       -1,   210,   211,   212,    -1,    -1,   213,
       -1,    -1,   214,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   215,   216,    -1,
       -1,    -1,    -1,    -1,    -1,   217,    -1,
       -1,    -1,    -1,   218,    -1,    -1,    -1,
       -1,   219,    -1,    -1,   220,    -1,    -1,
       -1,   221,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   222,    -1,    -1,
       -1,    -1,    -1,   223,   224,    -1,    -1,
       -1,    -1,    -1,   225,    -1,   226,    -1,
       -1,    -1,   227,   228,    -1,   229,   230,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   231,    -1,   232,    -1,
       -1,   233,    -1,    -1,    -1,   234,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   235,    -1,
       -1,    -1,    -1,   236,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   237,    -1,    -1,    -1,    -1,
       -1,    -1,   238,   239,    -1,    -1,   240,
       -1,    -1,    -1,    -1,    -1,    -1,   241,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      242,   243,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   244,    -1,    -1,   245,   246,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   247,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   248,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      249,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   250,    -1,    -1,    -1,    -1,   251,
       -1,   252,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   253,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   254,    -1,    -1,    -1,
      255,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   256,    -1,    -1,   257,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      258,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   259,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   260,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      261,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   262,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   263,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   264,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   265,    -1,    -1,
       -1,    -1,    -1,   266,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   267,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   268,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      269,    -1,    -1,    -1,    -1,   270,    -1,
       -1,    -1,   271,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   272,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   273,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   274,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      275,    -1,    -1,    -1,    -1,   276,    -1,
      277,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      278,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   279
  };

#ifdef __GNUC__
__inline
#endif
const struct keyword *
lex_hash_kw (register const char *str, register unsigned int len)
{
  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register int index = lookup[key];

          if (index >= 0)
            {
              register const char *s = wordlist[index].keiiyword;

              if (*str == *s && !strcmp (str + 1, s + 1))
                return &wordlist[index];
            }
          else if (index < -TOTAL_KEYWORDS)
            {
              register int offset = - 1 - TOTAL_KEYWORDS - index;
              register const struct keyword *wordptr = &wordlist[TOTAL_KEYWORDS + lookup[offset]];
              register const struct keyword *wordendptr = wordptr + -lookup[offset + 1];

              while (wordptr < wordendptr)
                {
                  register const char *s = wordptr->keiiyword;

                  if (*str == *s && !strcmp (str + 1, s + 1))
                    return wordptr;
                  wordptr++;
                }
            }
        }
    }
  return 0;
}
